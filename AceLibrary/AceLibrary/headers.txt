void* _Aligned_Calloc(size_t size, size_t alignment);
char* AllocateAndCopyString(char* strToCopy);
wchar_t* AllocateAndCopyString(wchar_t* wideStrToCopy);
int CalculateFileSize(char* theFilePath);
int CalculateFileSize(wchar_t* theFilePath);
int CalculateFileSize(FILE* theFile);
char CharAt(char* str, int index);
wchar_t CharAt(wchar_t* str, int index);
char* ConcatenateStrings(int numStrings, char** stringArray);
wchar_t* ConcatenateStrings(int numStrings, wchar_t** stringArray);
char* ConcatenateStrings(vector&lt;char*&gt; stringVectorArray);
wchar_t* ConcatenateStrings(vector&lt;wchar_t*&gt; stringVectorArray);
char* Concatenate(int numStrings, ...);
wchar_t* ConcatenateW(int numWideStrings, ...);
bool Contains(char* strToSearch, char* strToLookFor);
bool Contains(wchar_t* strToSearch, wchar_t* strToLookFor);
bool ContainsIgnoreCase(char* strToSearch, char* strToLookFor);
bool ContainsIgnoreCase(wchar_t* strToSearch, wchar_t* strToLookFor);
bool ConvertIntToBool(int num);
vector&lt;char*&gt; ConvertStringArrayToStringVectorArray(char** stringArray);
vector&lt;wchar_t*&gt; ConvertStringArrayToStringVectorArray(wchar_t** stringArray);
bool ConvertStringToBool(char* str);
bool ConvertStringToBool(wchar_t* str);
float* ConvertStringToFloatArray(char* strToConvert, char* delimiter, int& outNumItems);
float* ConvertStringToFloatArray(wchar_t* strToConvert, wchar_t* delimiter, int& outNumItems);
unsigned int ConvertStringToHex(char* str);
unsigned int ConvertStringToHex(wchar_t* str);
char* ConvertStringToOneLine(char* strToConvert);
wchar_t* ConvertStringToOneLine(wchar_t* strToConvert);
void ConvertStringToOneLineInPlace(char* strToConvert);
void ConvertStringToOneLineInPlace(wchar_t* strToConvert);
wchar_t* ConvertStringToWCharString(const char* strToConvert);
char** ConvertStringVectorArrayToStringArray(vector&lt;char*&gt; stringVectorArray);
wchar_t** ConvertStringVectorArrayToStringArray(vector&lt;wchar_t*&gt; stringVectorArray);
char* ConvertToLowerCase(char* str);
wchar_t* ConvertToLowerCase(wchar_t* str);
void ConvertToLowerCaseInPlace(char* str);
void ConvertToLowerCaseInPlace(wchar_t* str);
char* ConvertToUpperCase(char* str);
wchar_t* ConvertToUpperCase(wchar_t* str);
void ConvertToUpperCaseInPlace(char* str);
void ConvertToUpperCaseInPlace(wchar_t* str);
int CountNumOccurrences(char* strToSearch, char charToLookFor);
int CountNumOccurrences(wchar_t* strToSearch, wchar_t charToLookFor);
int CountNumOccurrences(char* strToSearch, char* strToLookFor);
int CountNumOccurrences(wchar_t* strToSearch, wchar_t* strToLookFor);
double DegreesToRadians(double degrees);
bool DoesFileExist(char* fullFilePathWithNameAndExt);
bool DoesFileExist(wchar_t* fullFilePathWithNameAndExt);
bool Equals(char* strToCompOne, char* strToCompTwo);
bool Equals(wchar_t* strToCompOne, wchar_t* strToCompTwo);
bool EqualsIgnoreCase(char* strToCompOne, char* strToCompTwo);
bool EqualsIgnoreCase(wchar_t* strToCompOne, wchar_t* strToCompTwo);
char FirstChar(char* str);
wchar_t FirstChar(wchar_t* str);
int GenerateRandomNum(int min, int max);
int IndexOf(char* strToSearch, char* strToLookFor);
int IndexOf(wchar_t* strToSearch, wchar_t* strToLookFor);
int IndexOfFirstLetter(char* strToSearch);
int IndexOfFirstLetter(wchar_t* strToSearch);
int IndexOfIgnoreCase(char* strToSearch, char* strToLookFor);
int IndexOfIgnoreCase(wchar_t* strToSearch, wchar_t* strToLookFor);
bool IsAlphabetic(char character);
bool IsAlphabetic(wchar_t character);
bool IsDigit(char character);
bool IsDigit(wchar_t character);
bool IsEmpty(char* str);
bool IsEmpty(wchar_t* str);
bool IsNumber(char* str);
bool IsNumber(wchar_t* str);
bool IsWhitespace(char character);
bool IsWhitespace(wchar_t character);
char LastChar(char* str);
wchar_t LastChar(wchar_t* str);
int LastIndexOf(char* strToSearch, char* strToLookFor);
int LastIndexOf(wchar_t* strToSearch, wchar_t* strToLookFor);
double RadiansToDegrees(double radians);
char* RemoveAllWhitespace(char* str);
wchar_t* RemoveAllWhitespace(wchar_t* str);
void RemoveAllWhitespaceInPlace(char* str);
void RemoveAllWhitespaceInPlace(wchar_t* str);
char* RemoveCharactersFromString(char* strToRemoveFrom, char charToRemove);
wchar_t* RemoveCharactersFromString(wchar_t* strToRemoveFrom, wchar_t charToRemove);
void RemoveCharactersFromStringInPlace(char* strToRemoveFrom, char charToRemove);
void RemoveCharactersFromStringInPlace(wchar_t* strToRemoveFrom, wchar_t charToRemove);
char* ReplaceString(char* strToSearch, char* strToLookFor, char* strToReplaceWith);
wchar_t* ReplaceString(wchar_t* strToSearch, wchar_t* strToLookFor, wchar_t* strToReplaceWith);
void ReplaceStringInPlace(char*& strToSearch, char* strToLookFor, char* strToReplaceWith);
void ReplaceStringInPlace(wchar_t*& strToSearch, wchar_t* strToLookFor, wchar_t* strToReplaceWith);
char* RetrieveDataBetweenTags(char* fileData, char* startTag, char* endTag);
wchar_t* RetrieveDataBetweenTags(wchar_t* fileData, wchar_t* startTag, wchar_t* endTag);
char* RetrieveDataBetweenTags(char* fileData, int startTagIndex, int endTagIndex);
wchar_t* RetrieveDataBetweenTags(wchar_t* fileData, int startTagIndex, int endTagIndex);
char** RetrieveDataChunksBetweenTags(char* fileData, char* startTag, char* endTag, int& outFinalBufferSize);
wchar_t** RetrieveDataChunksBetweenTags(wchar_t* fileData, wchar_t* startTag, wchar_t* endTag, int& outFinalBufferSize);
char* RetrieveFileData(char* filePath, bool removeWhitespace = false);
wchar_t* RetrieveFileData(wchar_t* filePath, bool removeWhitespace = false);
char* RetrieveFileData(FILE* file, bool removeWhitespace = false);
wchar_t* RetrieveFileDataW(FILE* file, bool removeWhitespace = false);
vector&lt;char*&gt; RetrieveFileNames(char* fullFilePath);
vector&lt;wchar_t*&gt; RetrieveFileNames(wchar_t* fullFilePath);
vector&lt;char*&gt; RetrieveFolderNames(char* fullFilePath);
vector&lt;wchar_t*&gt; RetrieveFolderNames(wchar_t* fullFilePath);
char* ReverseString(char* strToReverse);
wchar_t* ReverseString(wchar_t* strToReverse);
void ReverseStringInPlace(char* strToReverse);
void ReverseStringInPlace(wchar_t* strToReverse);
char* SubString(char* str, int startIndex, int upToButNotIncludingIndex = INT_MAX);
wchar_t* SubString(wchar_t* str, int startIndex, int upToButNotIncludingIndex = INT_MAX);
char** Tokenize(char* strToTokenize, char* delimiter, int& outNumTokensFound);
wchar_t** Tokenize(wchar_t* strToTokenize, wchar_t* delimiter, int& outNumTokensFound);
