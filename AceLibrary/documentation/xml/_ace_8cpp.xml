<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_ace_8cpp" kind="file" language="C++">
    <compoundname>Ace.cpp</compoundname>
    <includes refid="_ace_8h" local="yes">Ace.h</includes>
    <incdepgraph>
      <node id="3">
        <label>stdarg.h</label>
      </node>
      <node id="13">
        <label>fenv.h</label>
      </node>
      <node id="15">
        <label>Windows.h</label>
      </node>
      <node id="5">
        <label>cmath</label>
      </node>
      <node id="14">
        <label>errno.h</label>
      </node>
      <node id="1">
        <label>Ace.h</label>
        <link refid="_ace_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="0">
        <label>Ace.cpp</label>
        <link refid="Ace.cpp"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>random</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="7">
        <label>sstream</label>
      </node>
      <node id="10">
        <label>time.h</label>
      </node>
      <node id="12">
        <label>math.h</label>
      </node>
      <node id="4">
        <label>cctype</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="9">
        <label>algorithm</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_ace_8cpp_1a09ecca53f2cd1b8d1c566bedb245e141" prot="public" static="no">
        <name>UNICODE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ace.cpp" line="3" column="9" bodyfile="Ace.cpp" bodystart="3" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_ace_8cpp_1a78880e1abcefc90f14185aee93ad0e20" prot="public" static="no">
        <name>_UNICODE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Ace.cpp" line="4" column="9" bodyfile="Ace.cpp" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_ace_8h" kindref="compound">Ace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNICODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_UNICODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1ac62e93783b52192c5f5649a389021d15" kindref="member">Ace::_Aligned_Calloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>alignment)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buffer<sp/>=<sp/>_aligned_malloc(size,<sp/>alignment);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>buffer<sp/>was<sp/>successfully<sp/>allocated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>_Aligned_Calloc()<sp/>buffer<sp/>could<sp/>not<sp/>be<sp/>allocated.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Zero<sp/>out<sp/>the<sp/>buffer<sp/>so<sp/>it<sp/>automatically<sp/>has<sp/>null<sp/>terminators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SecureZeroMemory(buffer,<sp/>size)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(buffer);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>_Aligned_Calloc()<sp/>Failed<sp/>to<sp/>zero<sp/>out<sp/>buffer.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ae1d25ce89a5152ac3dd591aa75c57764" kindref="member">Ace::AbsoluteValue</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>abs(num);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ae1d25ce89a5152ac3dd591aa75c57764" kindref="member">Ace::AbsoluteValue</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>abs(num);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ae1d25ce89a5152ac3dd591aa75c57764" kindref="member">Ace::AbsoluteValue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>abs(num);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToCopy)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufferSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToCopy<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Calculate<sp/>the<sp/>size<sp/>of<sp/>the<sp/>wide<sp/>string<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufferSize<sp/>=<sp/>(strlen(strToCopy)<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allocate<sp/>aligned<sp/>buffer<sp/>to<sp/>hold<sp/>the<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="class_ace_1ac62e93783b52192c5f5649a389021d15" kindref="member">Ace::_Aligned_Calloc</ref>(bufferSize);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Copy<sp/>the<sp/>string<sp/>into<sp/>the<sp/>newly<sp/>created<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcpy_s(buffer,<sp/>bufferSize,<sp/>strToCopy)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>AllocateAndCopyString()<sp/>Failed<sp/>to<sp/>copy<sp/>string<sp/>to<sp/>buffer.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>AllocateAndCopyString()<sp/>strToCopy<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>wideStrToCopy)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufferSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>convertedChars<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>wideStrBuffer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wideStrToCopy<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Calculate<sp/>the<sp/>size<sp/>of<sp/>the<sp/>wide<sp/>string<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufferSize<sp/>=<sp/>(wcslen(wideStrToCopy)<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allocate<sp/>aligned<sp/>buffer<sp/>to<sp/>hold<sp/>the<sp/>wide<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wideStrBuffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)<ref refid="class_ace_1ac62e93783b52192c5f5649a389021d15" kindref="member">Ace::_Aligned_Calloc</ref>(bufferSize);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Copy<sp/>the<sp/>string<sp/>into<sp/>the<sp/>newly<sp/>created<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wcscpy_s(wideStrBuffer,<sp/>wcslen(wideStrToCopy)<sp/>+<sp/>1,<sp/>wideStrToCopy)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>AllocateAndCopyString()<sp/>Failed<sp/>to<sp/>copy<sp/>string<sp/>to<sp/>buffer.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>AllocateAndCopyString()<sp/>wideStrToCopy<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wideStrBuffer;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aec125b75d04c5ae6b9ba3f77d9ae5303" kindref="member">Ace::ArcCos</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>num<sp/>is<sp/>within<sp/>correct<sp/>domain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>mathematical<sp/>exception<sp/>from<sp/>being<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(islessequal(-1.0,<sp/>numInRadians)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>islessequal(numInRadians,<sp/>1.0)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>acos(numInRadians);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>acos().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcCos()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcCos()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>ArcCos()<sp/>numInRadians<sp/>is<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aec125b75d04c5ae6b9ba3f77d9ae5303" kindref="member">Ace::ArcCos</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>num<sp/>is<sp/>within<sp/>correct<sp/>domain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>mathematical<sp/>exception<sp/>from<sp/>being<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(islessequal(-1.0f,<sp/>numInRadians)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>islessequal(numInRadians,<sp/>1.0f)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>acos(numInRadians);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>acos().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcCos()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcCos()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>ArcCos()<sp/>numInRadians<sp/>is<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aec125b75d04c5ae6b9ba3f77d9ae5303" kindref="member">Ace::ArcCos</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>num<sp/>is<sp/>within<sp/>correct<sp/>domain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>mathematical<sp/>exception<sp/>from<sp/>being<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(islessequal(-1,<sp/>numInRadians)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>islessequal(numInRadians,<sp/>1)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>acos(numInRadians);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>acos().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcCos()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcCos()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>ArcCos()<sp/>numInRadians<sp/>is<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a6a6748b89eb74289306de8407d027865" kindref="member">Ace::ArcCosH</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>num<sp/>is<sp/>within<sp/>the<sp/>domain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>mathematical<sp/>exception<sp/>from<sp/>being<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreaterequal(numInRadians,<sp/>1.0)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>acosh(numInRadians);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>acosh().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcCosH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcCosH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>ArcCosH()<sp/>numInRadians<sp/>is<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a6a6748b89eb74289306de8407d027865" kindref="member">Ace::ArcCosH</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>num<sp/>is<sp/>within<sp/>the<sp/>domain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>mathematical<sp/>exception<sp/>from<sp/>being<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreaterequal(numInRadians,<sp/>1.0f)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>acosh(numInRadians);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>acosh().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcCosH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcCosH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>ArcCosH()<sp/>numInRadians<sp/>is<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a6a6748b89eb74289306de8407d027865" kindref="member">Ace::ArcCosH</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>num<sp/>is<sp/>within<sp/>the<sp/>domain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>mathematical<sp/>exception<sp/>from<sp/>being<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreaterequal(numInRadians,<sp/>1)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>acosh(numInRadians);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>acosh().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcCosH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcCosH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>ArcCosH()<sp/>numInRadians<sp/>is<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a6dda55fe05e7f2874f44e9347d64068a" kindref="member">Ace::ArcSin</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>num<sp/>is<sp/>within<sp/>the<sp/>domain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>mathematical<sp/>exception<sp/>from<sp/>being<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isless(-1.0,<sp/>numInRadians)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>islessequal(numInRadians,<sp/>1.0)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>asin(numInRadians);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>asin().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcSin()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcSin()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>ArcSin()<sp/>numInRadians<sp/>is<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a6dda55fe05e7f2874f44e9347d64068a" kindref="member">Ace::ArcSin</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="740"><highlight class="normal">{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>num<sp/>is<sp/>within<sp/>the<sp/>domain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>mathematical<sp/>exception<sp/>from<sp/>being<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isless(-1.0f,<sp/>numInRadians)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>islessequal(numInRadians,<sp/>1.0f)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>asin(numInRadians);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>asin().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcSin()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcSin()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>ArcSin()<sp/>numInRadians<sp/>is<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a6dda55fe05e7f2874f44e9347d64068a" kindref="member">Ace::ArcSin</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="808"><highlight class="normal">{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>num<sp/>is<sp/>within<sp/>the<sp/>domain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>mathematical<sp/>exception<sp/>from<sp/>being<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isless(-1,<sp/>numInRadians)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>islessequal(numInRadians,<sp/>1)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>asin(numInRadians);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>asin().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcSin()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcSin()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>ArcSin()<sp/>numInRadians<sp/>is<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aa4e43dbae9fc597031f96b6826077792" kindref="member">Ace::ArcSinH</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="874"><highlight class="normal">{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>asinh(numInRadians);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>asinh().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcSinH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcSinH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aa4e43dbae9fc597031f96b6826077792" kindref="member">Ace::ArcSinH</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>asinh(numInRadians);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>asinh().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcSinH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcSinH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="957"><highlight class="normal">}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aa4e43dbae9fc597031f96b6826077792" kindref="member">Ace::ArcSinH</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="986"><highlight class="normal">{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>asinh(numInRadians);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>asinh().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcSinH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcSinH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a34a530e5c9e7d179fa411cb182fd4b52" kindref="member">Ace::ArcTan</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="1042"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>atan(numInRadians);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>atan().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcTan()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcTan()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a34a530e5c9e7d179fa411cb182fd4b52" kindref="member">Ace::ArcTan</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="1098"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>atan(numInRadians);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>atan().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcTan()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcTan()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a34a530e5c9e7d179fa411cb182fd4b52" kindref="member">Ace::ArcTan</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="1154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>atan(numInRadians);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>atan().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcTan()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcTan()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ab95c327492c783547e8c16c4dd9570d8" kindref="member">Ace::ArcTanH</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="1211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>num<sp/>is<sp/>within<sp/>the<sp/>domain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>mathematical<sp/>exception<sp/>from<sp/>being<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isless(-1.0,<sp/>numInRadians)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>isless(numInRadians,<sp/>1.0)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>atanh(numInRadians);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>atanh().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcTanH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcTanH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>ArcTanH()<sp/>numInRadians<sp/>is<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ab95c327492c783547e8c16c4dd9570d8" kindref="member">Ace::ArcTanH</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="1278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>num<sp/>is<sp/>within<sp/>the<sp/>domain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>mathematical<sp/>exception<sp/>from<sp/>being<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isless(-1.0f,<sp/>numInRadians)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>isless(numInRadians,<sp/>1.0f)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>atanh(numInRadians);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>atanh().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcTanH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcTanH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>ArcTanH()<sp/>numInRadians<sp/>is<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ab95c327492c783547e8c16c4dd9570d8" kindref="member">Ace::ArcTanH</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="1345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>num<sp/>is<sp/>within<sp/>the<sp/>domain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>mathematical<sp/>exception<sp/>from<sp/>being<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isless(-1,<sp/>numInRadians)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>isless(numInRadians,<sp/>1)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>atanh(numInRadians);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>atanh().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcTanH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcTanH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>ArcTanH()<sp/>numInRadians<sp/>is<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ade721fa5fb6371e4ba4863413be468c2" kindref="member">Ace::ArcTan2</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>x<sp/>an<sp/>y<sp/>are<sp/>within<sp/>their<sp/>domain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>y<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>atan2(y,<sp/>x);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>atan2().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcTan2()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcTan2()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>ArcTan2()<sp/>x<sp/>and<sp/>y<sp/>are<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ade721fa5fb6371e4ba4863413be468c2" kindref="member">Ace::ArcTan2</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>x<sp/>an<sp/>y<sp/>are<sp/>within<sp/>their<sp/>domain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>y<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>atan2(y,<sp/>x);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>atan2().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcTan2()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcTan2()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>ArcTan2()<sp/>x<sp/>and<sp/>y<sp/>are<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ade721fa5fb6371e4ba4863413be468c2" kindref="member">Ace::ArcTan2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="1547"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>x<sp/>an<sp/>y<sp/>are<sp/>within<sp/>their<sp/>domain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>y<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>atan2(y,<sp/>x);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>atan2().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcTan2()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ArcTan2()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>ArcTan2()<sp/>x<sp/>and<sp/>y<sp/>are<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a78d7a2c1c3c8da0fe6569d990375fc45" kindref="member">Ace::CalculateAspectRatio</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newHeight,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>originalWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>originalHeight,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>outAdjustedWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>outAdjustedHeight)</highlight></codeline>
<codeline lineno="1617"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>all<sp/>values<sp/>are<sp/>valid<sp/>before<sp/>making<sp/>any<sp/>mathematical<sp/>calculations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newWidth<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>newHeight<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>originalWidth<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>originalHeight<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Technically<sp/>we<sp/>only<sp/>need<sp/>to<sp/>adjust<sp/>the<sp/>height<sp/>of<sp/>the<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Formula:<sp/>(newHeight<sp/>/<sp/>newWidth)<sp/>x<sp/>originalWidth<sp/>=<sp/>adjustedHeight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outAdjustedWidth<sp/>=<sp/>originalWidth;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outAdjustedHeight<sp/>=<sp/>((float)newHeight<sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)newWidth)<sp/>*<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)originalWidth;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>CalculateAspectRatio()<sp/>parameters<sp/>are<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal">LONGLONG<sp/><ref refid="class_ace_1a24687acdeab8af43507fea6467f29247" kindref="member">Ace::CalculateFileSize</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>theFilePath)</highlight></codeline>
<codeline lineno="1658"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/>HANDLE<sp/>file;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/>LARGE_INTEGER<sp/>file_size;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theFilePath<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>=<sp/>CreateFile(theFilePath,<sp/>GENERIC_READ,<sp/>FILE_SHARE_READ,<sp/>NULL,<sp/>OPEN_EXISTING,<sp/>FILE_ATTRIBUTE_NORMAL,<sp/>NULL);</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>CalculateFileSize()<sp/>Could<sp/>not<sp/>open<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetFileSizeEx(file,<sp/>&amp;file_size)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>CalculateFileSize()<sp/>Failed<sp/>to<sp/>obtain<sp/>the<sp/>file<sp/>size<sp/>from<sp/>GetFileSizeEx().&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>file_size.QuadPart;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>CalculateFileSize()<sp/>theFilePath<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal">LONGLONG<sp/><ref refid="class_ace_1a24687acdeab8af43507fea6467f29247" kindref="member">Ace::CalculateFileSize</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>theFilePath)</highlight></codeline>
<codeline lineno="1712"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/>HANDLE<sp/>file;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/>LARGE_INTEGER<sp/>file_size;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theFilePath<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>=<sp/>CreateFileW(theFilePath,<sp/>GENERIC_READ,<sp/>FILE_SHARE_READ,<sp/>NULL,<sp/>OPEN_EXISTING,<sp/>FILE_ATTRIBUTE_NORMAL,<sp/>NULL);</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>CalculateFileSize()<sp/>Could<sp/>not<sp/>open<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetFileSizeEx(file,<sp/>&amp;file_size)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>CalculateFileSize()<sp/>Failed<sp/>to<sp/>obtain<sp/>the<sp/>file<sp/>size<sp/>from<sp/>GetFileSizeEx().&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>file_size.QuadPart;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>CalculateFileSize()<sp/>theFilePath<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a0fb146fe350acee2d70c4357d1a3a5fc" kindref="member">Ace::CalculateNumLength</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="1766"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a509e6fda4da886680951615f2ac2d421" kindref="member">Ace::Floor</ref>(<ref refid="class_ace_1a278ffeb56149bc1cc75617d639b63468" kindref="member">Ace::LogBaseTen</ref>(<ref refid="class_ace_1ae1d25ce89a5152ac3dd591aa75c57764" kindref="member">Ace::AbsoluteValue</ref>(num)))<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a0fb146fe350acee2d70c4357d1a3a5fc" kindref="member">Ace::CalculateNumLength</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="1797"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a509e6fda4da886680951615f2ac2d421" kindref="member">Ace::Floor</ref>(<ref refid="class_ace_1a278ffeb56149bc1cc75617d639b63468" kindref="member">Ace::LogBaseTen</ref>(<ref refid="class_ace_1ae1d25ce89a5152ac3dd591aa75c57764" kindref="member">Ace::AbsoluteValue</ref>(num)))<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ab8cc0635c5777ced01f1cd35948bafa2" kindref="member">Ace::Ceiling</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="1828"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ceil(num);</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>ceil().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Ceiling()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Ceiling()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ab8cc0635c5777ced01f1cd35948bafa2" kindref="member">Ace::Ceiling</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="1884"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ceil(num);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>ceil().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Ceiling()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Ceiling()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ab8cc0635c5777ced01f1cd35948bafa2" kindref="member">Ace::Ceiling</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="1940"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ceil(num);</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>ceil().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Ceiling()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Ceiling()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1967"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a63f81ff2236e723a0d84bd60dae9bb05" kindref="member">Ace::CharAt</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="1997"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)strlen(str))</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(str<sp/>+<sp/>index);</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>CharAt()<sp/>index<sp/>is<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>CharAt()<sp/>str<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a63f81ff2236e723a0d84bd60dae9bb05" kindref="member">Ace::CharAt</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="2045"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)wcslen(str))</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(str<sp/>+<sp/>index);</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>CharAt()<sp/>index<sp/>is<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>L</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>CharAt()<sp/>str<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>L</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a6905860b7a53563ab3c73b89e25160da" kindref="member">Ace::ComplementaryErrorFunction</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="2092"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>erfc(num);</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>erfc().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ComplementaryErrorFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ComplementaryErrorFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a6905860b7a53563ab3c73b89e25160da" kindref="member">Ace::ComplementaryErrorFunction</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="2148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>erfc(num);</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>erfc().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ComplementaryErrorFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ComplementaryErrorFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a6905860b7a53563ab3c73b89e25160da" kindref="member">Ace::ComplementaryErrorFunction</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="2204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>erfc(num);</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>erfc().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ComplementaryErrorFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ComplementaryErrorFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a940cef052ddd6f308129a20fa2489d03" kindref="member">Ace::ConcatenateStrings</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numStrings,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>stringArray)</highlight></codeline>
<codeline lineno="2271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buff<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>currStr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalStrLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringArray<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>numStrings<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>numStrings<sp/>&lt;<sp/><ref refid="_ace_8h_1a3fb0211ecf1dc4bdd8c17c2959ff732c" kindref="member">MAX_STRING_BUFFER_SIZE</ref>)</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Calculate<sp/>the<sp/>length<sp/>of<sp/>each<sp/>string<sp/>so<sp/>we<sp/>know<sp/>how<sp/>much<sp/>to<sp/>allocate<sp/>for<sp/>the<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>numStrings;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringArray[currIndex]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalStrLen<sp/>+=<sp/>strlen(stringArray[currIndex]);</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//+1<sp/>for<sp/>the<sp/>Null<sp/>terminating<sp/>char.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalStrLen<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allocate<sp/>the<sp/>buffer<sp/>to<sp/>hold<sp/>our<sp/>concatenated<sp/>strings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffSize<sp/>=<sp/>totalStrLen<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char);</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buff<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)_aligned_malloc(buffSize,<sp/><ref refid="_ace_8h_1aa465ebf747728e1e8a5edd0bd7a6fcde" kindref="member">BYTE_ALIGNMENT</ref>);</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"></highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>buffer<sp/>was<sp/>allocated<sp/>successfully.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buff<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConcatenateStrings()<sp/>Buffer<sp/>could<sp/>not<sp/>be<sp/>allocated.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SecureZeroMemory(buff,<sp/>buffSize)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConcatenateStrings()<sp/>Failed<sp/>to<sp/>zero<sp/>out<sp/>buffer.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Copy<sp/>the<sp/>first<sp/>string<sp/>into<sp/>the<sp/>buffer<sp/>to<sp/>initialize<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcpy_s(buff,<sp/>buffSize,<sp/>stringArray[0])<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConcatenateStrings()<sp/>Failed<sp/>to<sp/>initialize<sp/>buffer.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Concatenate<sp/>the<sp/>other<sp/>strings<sp/>to<sp/>our<sp/>newly<sp/>created<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>1;<sp/>currIndex<sp/>&lt;<sp/>numStrings;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Concatenate<sp/>the<sp/>two<sp/>strings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcat_s(buff,<sp/>totalStrLen,<sp/>stringArray[currIndex])<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConcatenateStrings()<sp/>Failed<sp/>to<sp/>concatenate<sp/>strings.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConcatenateStrings()<sp/>Parameters<sp/>are<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buff;</highlight></codeline>
<codeline lineno="2331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a940cef052ddd6f308129a20fa2489d03" kindref="member">Ace::ConcatenateStrings</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numStrings,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">**<sp/>stringArray)</highlight></codeline>
<codeline lineno="2371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>buff<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>currStr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalStrLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"></highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringArray<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>numStrings<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>numStrings<sp/>&lt;<sp/><ref refid="_ace_8h_1a3fb0211ecf1dc4bdd8c17c2959ff732c" kindref="member">MAX_STRING_BUFFER_SIZE</ref>)</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Calculate<sp/>the<sp/>length<sp/>of<sp/>each<sp/>string<sp/>so<sp/>we<sp/>know<sp/>how<sp/>much<sp/>to<sp/>allocate<sp/>for<sp/>the<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>numStrings;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringArray[currIndex]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalStrLen<sp/>+=<sp/>wcslen(stringArray[currIndex]);</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//+1<sp/>for<sp/>the<sp/>Null<sp/>terminating<sp/>char.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalStrLen<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allocate<sp/>the<sp/>buffer<sp/>to<sp/>hold<sp/>our<sp/>concatenated<sp/>strings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffSize<sp/>=<sp/>totalStrLen<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wchar_t);</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buff<sp/>=<sp/>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)_aligned_malloc(buffSize,<sp/><ref refid="_ace_8h_1aa465ebf747728e1e8a5edd0bd7a6fcde" kindref="member">BYTE_ALIGNMENT</ref>);</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>buffer<sp/>was<sp/>allocated<sp/>successfully.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buff<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConcatenateStrings()<sp/>Buffer<sp/>could<sp/>not<sp/>be<sp/>allocated.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SecureZeroMemory(buff,<sp/>buffSize)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConcatenateStrings()<sp/>Failed<sp/>to<sp/>zero<sp/>out<sp/>buffer.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Copy<sp/>the<sp/>first<sp/>string<sp/>into<sp/>the<sp/>buffer<sp/>to<sp/>initialize<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wcscpy_s(buff,<sp/>totalStrLen,<sp/>stringArray[0])<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConcatenateStrings()<sp/>Failed<sp/>to<sp/>initialize<sp/>buffer.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Concatenate<sp/>the<sp/>other<sp/>strings<sp/>to<sp/>our<sp/>newly<sp/>created<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>1;<sp/>currIndex<sp/>&lt;<sp/>numStrings;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Concatenate<sp/>the<sp/>two<sp/>strings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wcscat_s(buff,<sp/>totalStrLen,<sp/>stringArray[currIndex])<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConcatenateStrings()<sp/>Failed<sp/>to<sp/>concatenate<sp/>strings.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConcatenateStrings()<sp/>Parameters<sp/>are<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"></highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buff;</highlight></codeline>
<codeline lineno="2431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a940cef052ddd6f308129a20fa2489d03" kindref="member">Ace::ConcatenateStrings</ref>(vector&lt;char*&gt;<sp/>stringVectorArray)</highlight></codeline>
<codeline lineno="2465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>retVal<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>stringArray<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stringArrayLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stringVectorArrayLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currStringLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>length<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>keep<sp/>calling<sp/>.size().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/>stringVectorArrayLen<sp/>=<sp/>stringVectorArray.size();</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringVectorArrayLen<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>stringVectorArrayLen<sp/>&lt;<sp/><ref refid="_ace_8h_1a3fb0211ecf1dc4bdd8c17c2959ff732c" kindref="member">MAX_STRING_BUFFER_SIZE</ref>)</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allocate<sp/>a<sp/>traditional<sp/>string<sp/>array<sp/>to<sp/>hold<sp/>our<sp/>strings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringArray<sp/>=<sp/><ref refid="class_ace_1a3e82ab0d2c6c04e8bea91b0b7dbaae57" kindref="member">Ace::ConvertStringVectorArrayToStringArray</ref>(stringVectorArray,<sp/>stringArrayLen);</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringArray<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Concatenate<sp/>all<sp/>of<sp/>the<sp/>strings<sp/>in<sp/>the<sp/>array<sp/>together.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/><ref refid="class_ace_1a940cef052ddd6f308129a20fa2489d03" kindref="member">Ace::ConcatenateStrings</ref>(stringArrayLen,<sp/>stringArray);</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Delete<sp/>the<sp/>array<sp/>contents<sp/>and<sp/>the<sp/>array<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>stringArrayLen;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(stringArray[currIndex]);</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(stringArray);</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConcatenateStrings()<sp/>Returned<sp/>stringArray<sp/>is<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConcatenateStrings()<sp/>Vector<sp/>Array<sp/>length<sp/>is<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="2503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a940cef052ddd6f308129a20fa2489d03" kindref="member">Ace::ConcatenateStrings</ref>(vector&lt;wchar_t*&gt;<sp/>stringVectorArray)</highlight></codeline>
<codeline lineno="2537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>retVal<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">**<sp/>stringArray<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stringArrayLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stringVectorArrayLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currStringLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"></highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>length<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>keep<sp/>calling<sp/>.size().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/>stringVectorArrayLen<sp/>=<sp/>stringVectorArray.size();</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"></highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringVectorArrayLen<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>stringVectorArrayLen<sp/>&lt;<sp/><ref refid="_ace_8h_1a3fb0211ecf1dc4bdd8c17c2959ff732c" kindref="member">MAX_STRING_BUFFER_SIZE</ref>)</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allocate<sp/>a<sp/>traditional<sp/>string<sp/>array<sp/>to<sp/>hold<sp/>our<sp/>strings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringArray<sp/>=<sp/><ref refid="class_ace_1a3e82ab0d2c6c04e8bea91b0b7dbaae57" kindref="member">Ace::ConvertStringVectorArrayToStringArray</ref>(stringVectorArray,<sp/>stringArrayLen);</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringArray<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Concatenate<sp/>all<sp/>of<sp/>the<sp/>strings<sp/>in<sp/>the<sp/>array<sp/>together.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/><ref refid="class_ace_1a940cef052ddd6f308129a20fa2489d03" kindref="member">Ace::ConcatenateStrings</ref>(stringArrayLen,<sp/>stringArray);</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Delete<sp/>the<sp/>array<sp/>contents<sp/>and<sp/>the<sp/>array<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>stringArrayLen;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(stringArray[currIndex]);</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(stringArray);</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConcatenateStrings()<sp/>Returned<sp/>stringArray<sp/>is<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConcatenateStrings()<sp/>Vector<sp/>Array<sp/>length<sp/>is<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="2575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"></highlight></codeline>
<codeline lineno="2604"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a54627c41eea2730839d98f33542a5492" kindref="member">Ace::Concatenate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numStrings,<sp/>...)</highlight></codeline>
<codeline lineno="2605"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;char*&gt;<sp/>stringVectorArray;</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>vargList;</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"></highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numStrings<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>numStrings<sp/>&lt;<sp/><ref refid="_ace_8h_1a3fb0211ecf1dc4bdd8c17c2959ff732c" kindref="member">MAX_STRING_BUFFER_SIZE</ref>)</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Store<sp/>each<sp/>of<sp/>the<sp/>arguments<sp/>so<sp/>we<sp/>can<sp/>iterate<sp/>through<sp/>them<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start(vargList,<sp/>numStrings);</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>numStrings;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringVectorArray.push_back((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)va_arg(vargList,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(vargList);</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"></highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a940cef052ddd6f308129a20fa2489d03" kindref="member">Ace::ConcatenateStrings</ref>(stringVectorArray);</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>Concatenate()<sp/>numStrings<sp/>is<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"></highlight></codeline>
<codeline lineno="2655"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1af0cd7dce3668bd1ee3e9f86b687caa5c" kindref="member">Ace::ConcatenateW</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numWideStrings,<sp/>...)</highlight></codeline>
<codeline lineno="2656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;wchar_t*&gt;<sp/>stringVectorArray;</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>vargList;</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"></highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numWideStrings<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>numWideStrings<sp/>&lt;<sp/><ref refid="_ace_8h_1a3fb0211ecf1dc4bdd8c17c2959ff732c" kindref="member">MAX_STRING_BUFFER_SIZE</ref>)</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Store<sp/>each<sp/>of<sp/>the<sp/>arguments<sp/>so<sp/>we<sp/>can<sp/>iterate<sp/>through<sp/>them<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start(vargList,<sp/>numWideStrings);</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>numWideStrings;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringVectorArray.push_back((</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)va_arg(vargList,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(vargList);</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"></highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a940cef052ddd6f308129a20fa2489d03" kindref="member">Ace::ConcatenateStrings</ref>(stringVectorArray);</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConcatenateW()<sp/>numStrings<sp/>is<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1af8c652e46bc6729b5619d794101540a2" kindref="member">Ace::Contains</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToLookFor)</highlight></codeline>
<codeline lineno="2714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(strToSearch,<sp/>strToLookFor)<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="2716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"></highlight></codeline>
<codeline lineno="2752"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1af8c652e46bc6729b5619d794101540a2" kindref="member">Ace::Contains</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToLookFor)</highlight></codeline>
<codeline lineno="2753"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(strToSearch,<sp/>strToLookFor);</highlight></codeline>
<codeline lineno="2755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"></highlight></codeline>
<codeline lineno="2791"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aa1a0f98f4f52323b776c8da11d4af7f7" kindref="member">Ace::ContainsIgnoreCase</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToLookFor)</highlight></codeline>
<codeline lineno="2792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a6d107bd58a740eb1fbdf8c39b9269b24" kindref="member">Ace::IndexOfIgnoreCase</ref>(strToSearch,<sp/>strToLookFor)<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="2794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"></highlight></codeline>
<codeline lineno="2830"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aa1a0f98f4f52323b776c8da11d4af7f7" kindref="member">Ace::ContainsIgnoreCase</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToLookFor)</highlight></codeline>
<codeline lineno="2831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a6d107bd58a740eb1fbdf8c39b9269b24" kindref="member">Ace::IndexOfIgnoreCase</ref>(strToSearch,<sp/>strToLookFor)<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="2833"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"></highlight></codeline>
<codeline lineno="2861"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ac4b7f63b32227ae2c0313212e078946f" kindref="member">Ace::ConvertDoubleToBool</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="2862"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//num<sp/>==<sp/>0.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"></highlight></codeline>
<codeline lineno="2899"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1add6c70c3e44ea2a474ac44db32a51227" kindref="member">Ace::ConvertFloatToBool</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="2900"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>!=<sp/>0.0f)</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//num<sp/>==<sp/>0.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"></highlight></codeline>
<codeline lineno="2937"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aedf62dbbbeffecb146060a08a0fe07f7" kindref="member">Ace::ConvertIntToBool</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="2938"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//num<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2947"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"></highlight></codeline>
<codeline lineno="2974"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a026d615c1e1dbbb977c66daae7e5d61e" kindref="member">Ace::ConvertIntToString</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>integerToConvert)</highlight></codeline>
<codeline lineno="2975"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufferSize<sp/>=<sp/>(<ref refid="class_ace_1a0fb146fe350acee2d70c4357d1a3a5fc" kindref="member">Ace::CalculateNumLength</ref>(integerToConvert)<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="class_ace_1ac62e93783b52192c5f5649a389021d15" kindref="member">Ace::_Aligned_Calloc</ref>(bufferSize);</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"></highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_itoa_s(integerToConvert,<sp/>buffer,<sp/>bufferSize<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">),<sp/>10)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertIntToWideString()<sp/>Could<sp/>not<sp/>convert<sp/>integerToConvert.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"></highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer;</highlight></codeline>
<codeline lineno="2986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"></highlight></codeline>
<codeline lineno="3013"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a77c0f5efc3c9453e62d1fed8350970d1" kindref="member">Ace::ConvertIntToWideString</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>integerToConvert)</highlight></codeline>
<codeline lineno="3014"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufferSize<sp/>=<sp/>(<ref refid="class_ace_1a0fb146fe350acee2d70c4357d1a3a5fc" kindref="member">Ace::CalculateNumLength</ref>(integerToConvert)<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>buffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)<ref refid="class_ace_1ac62e93783b52192c5f5649a389021d15" kindref="member">Ace::_Aligned_Calloc</ref>(bufferSize);</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"></highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_itow_s(integerToConvert,<sp/>buffer,<sp/>bufferSize<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">),<sp/>10)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertIntToWideString()<sp/>Could<sp/>not<sp/>convert<sp/>integerToConvert.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"></highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer;</highlight></codeline>
<codeline lineno="3025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"></highlight></codeline>
<codeline lineno="3067"><highlight class="normal">vector&lt;char*&gt;<sp/><ref refid="class_ace_1ace7ef8961e95078c69f2058025960c09" kindref="member">Ace::ConvertStringArrayToStringVectorArray</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>stringArray)</highlight></codeline>
<codeline lineno="3068"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;char*&gt;<sp/>strVectorArray;</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"></highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringArray<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>stringArray[currIndex]<sp/>!=<sp/>NULL;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strVectorArray.push_back(stringArray[currIndex]);</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertStringArrayToStringVectorArray()<sp/>stringArray<sp/>cannot<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"></highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strVectorArray;</highlight></codeline>
<codeline lineno="3084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"></highlight></codeline>
<codeline lineno="3126"><highlight class="normal">vector&lt;wchar_t*&gt;<sp/><ref refid="class_ace_1ace7ef8961e95078c69f2058025960c09" kindref="member">Ace::ConvertStringArrayToStringVectorArray</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">**<sp/>stringArray)</highlight></codeline>
<codeline lineno="3127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;wchar_t*&gt;<sp/>strVectorArray;</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"></highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringArray<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>stringArray[currIndex]<sp/>!=<sp/>NULL;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strVectorArray.push_back(stringArray[currIndex]);</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertStringArrayToStringVectorArray()<sp/>stringArray<sp/>cannot<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"></highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strVectorArray;</highlight></codeline>
<codeline lineno="3143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"></highlight></codeline>
<codeline lineno="3181"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a9399ba5c75c6aa92dac1a8d1d9f4af61" kindref="member">Ace::ConvertStringToBool</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="3182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToUpper<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"></highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToUpper<sp/>=<sp/><ref refid="class_ace_1a658e886d648a545b26d684545ad81146" kindref="member">Ace::ConvertToUpperCase</ref>(str);</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"></highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>to<sp/>see<sp/>if<sp/>str<sp/>is<sp/>equal<sp/>to<sp/>&quot;false&quot;<sp/>or<sp/>&quot;true&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(strToUpper,<sp/></highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(strToUpper);</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(strToUpper,<sp/></highlight><highlight class="stringliteral">&quot;FALSE&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(strToUpper);</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(strToUpper);</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"></highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>to<sp/>see<sp/>if<sp/>str<sp/>is<sp/>an<sp/>integer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1abf209e3f71042eefd2091b990f0fc6f6" kindref="member">Ace::IsNumber</ref>(str)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aedf62dbbbeffecb146060a08a0fe07f7" kindref="member">Ace::ConvertIntToBool</ref>(atoi(str));</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(str)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Small<sp/>chance<sp/>str<sp/>could<sp/>be<sp/>equal<sp/>to<sp/>&quot;T&quot;<sp/>or<sp/>&quot;F&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(toupper(*str)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(toupper(*str)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertStringToBool()<sp/>str<sp/>cannot<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"></highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"></highlight></codeline>
<codeline lineno="3267"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a9399ba5c75c6aa92dac1a8d1d9f4af61" kindref="member">Ace::ConvertStringToBool</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="3268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToUpper<sp/>=<sp/>L</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"></highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToUpper<sp/>=<sp/><ref refid="class_ace_1a658e886d648a545b26d684545ad81146" kindref="member">Ace::ConvertToUpperCase</ref>(str);</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"></highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>to<sp/>see<sp/>if<sp/>str<sp/>is<sp/>equal<sp/>to<sp/>&quot;false&quot;<sp/>or<sp/>&quot;true&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wcscmp(strToUpper,<sp/>L</highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(strToUpper);</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wcscmp(strToUpper,<sp/>L</highlight><highlight class="stringliteral">&quot;FALSE&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(strToUpper);</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(strToUpper);</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"></highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>to<sp/>see<sp/>if<sp/>str<sp/>is<sp/>an<sp/>integer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1abf209e3f71042eefd2091b990f0fc6f6" kindref="member">Ace::IsNumber</ref>(str)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aedf62dbbbeffecb146060a08a0fe07f7" kindref="member">Ace::ConvertIntToBool</ref>(_wtoi(str));</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wcslen(str)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Small<sp/>chance<sp/>str<sp/>could<sp/>be<sp/>equal<sp/>to<sp/>&quot;T&quot;<sp/>or<sp/>&quot;F&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(towupper(*str)<sp/>==<sp/>L</highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(towupper(*str)<sp/>==<sp/>L</highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertStringToBool()<sp/>str<sp/>cannot<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"></highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"></highlight></codeline>
<codeline lineno="3353"><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a2dd19dedc9fa4b83a8db2115fc3b65bb" kindref="member">Ace::ConvertStringToFloatArray</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToConvert,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>delimiter,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>outNumItems)</highlight></codeline>
<codeline lineno="3354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>tokenArray<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>floatArray<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"></highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToConvert<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>delimiter<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outNumItems<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokenArray<sp/>=<sp/><ref refid="class_ace_1a8e948c04ce26696ede60e70c5f70c361" kindref="member">Ace::Tokenize</ref>(strToConvert,<sp/>delimiter,<sp/>outNumItems);</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>floatArray<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)_aligned_malloc(outNumItems<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">),<sp/><ref refid="_ace_8h_1aa465ebf747728e1e8a5edd0bd7a6fcde" kindref="member">BYTE_ALIGNMENT</ref>);</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"></highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>buffer<sp/>was<sp/>allocated<sp/>successfully.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(floatArray<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertStringToFloatArray()<sp/>Buffer<sp/>could<sp/>not<sp/>be<sp/>allocated.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>outNumItems;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>floatArray[currIndex]<sp/>=<sp/>(float)atof(tokenArray[currIndex]);</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(tokenArray[currIndex]);</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(tokenArray);</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertStringToFloatArray()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"></highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>floatArray;</highlight></codeline>
<codeline lineno="3384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"></highlight></codeline>
<codeline lineno="3422"><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a2dd19dedc9fa4b83a8db2115fc3b65bb" kindref="member">Ace::ConvertStringToFloatArray</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToConvert,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>delimiter,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>outNumItems)</highlight></codeline>
<codeline lineno="3423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">**<sp/>tokenArray<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>floatArray<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"></highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToConvert<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>delimiter<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outNumItems<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokenArray<sp/>=<sp/><ref refid="class_ace_1a8e948c04ce26696ede60e70c5f70c361" kindref="member">Ace::Tokenize</ref>(strToConvert,<sp/>delimiter,<sp/>outNumItems);</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>floatArray<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)_aligned_malloc(outNumItems<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">),<sp/><ref refid="_ace_8h_1aa465ebf747728e1e8a5edd0bd7a6fcde" kindref="member">BYTE_ALIGNMENT</ref>);</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"></highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>buffer<sp/>was<sp/>allocated<sp/>successfully.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(floatArray<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertStringToFloatArray()<sp/>Buffer<sp/>could<sp/>not<sp/>be<sp/>allocated.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"></highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>outNumItems;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>floatArray[currIndex]<sp/>=<sp/>(float)_wtof(tokenArray[currIndex]);</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(tokenArray[currIndex]);</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(tokenArray);</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertStringToFloatArray()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"></highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>floatArray;</highlight></codeline>
<codeline lineno="3453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"></highlight></codeline>
<codeline lineno="3474"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a9735962c53182de52caffda3b7dd091f" kindref="member">Ace::ConvertStringToHex</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="3475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>str;</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&gt;&gt;<sp/>x;</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"></highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)x;</highlight></codeline>
<codeline lineno="3482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"></highlight></codeline>
<codeline lineno="3503"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a9735962c53182de52caffda3b7dd091f" kindref="member">Ace::ConvertStringToHex</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="3504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/>std::wstringstream<sp/>ss;</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>str;</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/>ss<sp/>&gt;&gt;<sp/>x;</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"></highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)x;</highlight></codeline>
<codeline lineno="3511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"></highlight></codeline>
<codeline lineno="3541"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a27a4d4bc0cfe1b489582bf937e27d0e1" kindref="member">Ace::ConvertStringToOneLine</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToConvert)</highlight></codeline>
<codeline lineno="3542"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>oneLineData<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"></highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToConvert<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oneLineData<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>(strToConvert);</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ace_1a4ad8d96d9b8bad51a4364ae67fce4b73" kindref="member">Ace::ConvertStringToOneLineInPlace</ref>(oneLineData);</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertStringToOneLine()<sp/>strToConvert<sp/>cannot<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"></highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oneLineData;</highlight></codeline>
<codeline lineno="3556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"></highlight></codeline>
<codeline lineno="3586"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a27a4d4bc0cfe1b489582bf937e27d0e1" kindref="member">Ace::ConvertStringToOneLine</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToConvert)</highlight></codeline>
<codeline lineno="3587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>oneLineData<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"></highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToConvert<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oneLineData<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>(strToConvert);</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ace_1a4ad8d96d9b8bad51a4364ae67fce4b73" kindref="member">Ace::ConvertStringToOneLineInPlace</ref>(oneLineData);</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertStringToOneLine()<sp/>strToConvert<sp/>cannot<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"></highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oneLineData;</highlight></codeline>
<codeline lineno="3601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"></highlight></codeline>
<codeline lineno="3630"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a4ad8d96d9b8bad51a4364ae67fce4b73" kindref="member">Ace::ConvertStringToOneLineInPlace</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToConvert)</highlight></codeline>
<codeline lineno="3631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToConvert<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ace_1a7a4f21e66792a5813fc50775ae75091c" kindref="member">Ace::RemoveCharactersFromStringInPlace</ref>(strToConvert,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertStringToOneLineInPlace()<sp/>strToConvert<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"></highlight></codeline>
<codeline lineno="3669"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a4ad8d96d9b8bad51a4364ae67fce4b73" kindref="member">Ace::ConvertStringToOneLineInPlace</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToConvert)</highlight></codeline>
<codeline lineno="3670"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToConvert<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ace_1a7a4f21e66792a5813fc50775ae75091c" kindref="member">Ace::RemoveCharactersFromStringInPlace</ref>(strToConvert,<sp/>L</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertStringToOneLineInPlace()<sp/>strToConvert<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"></highlight></codeline>
<codeline lineno="3709"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1adebec5fecf3c418346f7e7233cac91f7" kindref="member">Ace::ConvertStringToWCharString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToConvert)</highlight></codeline>
<codeline lineno="3710"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>convertedChars<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>wcstring<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"></highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToConvert<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Calculate<sp/>the<sp/>size<sp/>of<sp/>the<sp/>wide<sp/>string<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffSize<sp/>=<sp/>(strlen(strToConvert)<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"></highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allocate<sp/>aligned<sp/>buffer<sp/>to<sp/>hold<sp/>the<sp/>wide<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wcstring<sp/>=<sp/>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)<ref refid="class_ace_1ac62e93783b52192c5f5649a389021d15" kindref="member">Ace::_Aligned_Calloc</ref>(buffSize);</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"></highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Do<sp/>the<sp/>actual<sp/>conversion<sp/>of<sp/>char*<sp/>to<sp/>wchar_t*.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mbstowcs_s(&amp;convertedChars,<sp/>wcstring,<sp/>strlen(strToConvert)<sp/>+<sp/>1,<sp/>strToConvert,<sp/>_TRUNCATE)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertStringToWCharString()<sp/>Could<sp/>not<sp/>convert<sp/>string<sp/>to<sp/>wide<sp/>string.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertStringToWCharString()<sp/>strToConvert<sp/>cannot<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"></highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wcstring;</highlight></codeline>
<codeline lineno="3736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"></highlight></codeline>
<codeline lineno="3777"><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><ref refid="class_ace_1a3e82ab0d2c6c04e8bea91b0b7dbaae57" kindref="member">Ace::ConvertStringVectorArrayToStringArray</ref>(vector&lt;char*&gt;<sp/>stringVectorArray,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>outStringArrayLength)</highlight></codeline>
<codeline lineno="3778"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stringVectorArrayLen<sp/>=<sp/>stringVectorArray.size();</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stringArrayIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>stringArray<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"></highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringVectorArrayLen<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>stringVectorArrayLen<sp/>&lt;<sp/><ref refid="_ace_8h_1a3fb0211ecf1dc4bdd8c17c2959ff732c" kindref="member">MAX_STRING_BUFFER_SIZE</ref>)</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allocate<sp/>a<sp/>traditional<sp/>string<sp/>array<sp/>to<sp/>hold<sp/>our<sp/>strings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringArray<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)_aligned_malloc(stringVectorArrayLen<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*),<sp/><ref refid="_ace_8h_1aa465ebf747728e1e8a5edd0bd7a6fcde" kindref="member">BYTE_ALIGNMENT</ref>);</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"></highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>buffer<sp/>was<sp/>allocated<sp/>successfully.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringArray<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertStringVectorArrayToStringArray()<sp/>Buffer<sp/>could<sp/>not<sp/>be<sp/>allocated.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"></highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Size<sp/>of<sp/>array<sp/>will<sp/>shrink<sp/>if<sp/>the<sp/>vector<sp/>array<sp/>has<sp/>NULL(s).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outStringArrayLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>stringVectorArrayLen;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringVectorArray[currIndex]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Copy<sp/>the<sp/>string<sp/>from<sp/>the<sp/>vector<sp/>array<sp/>to<sp/>the<sp/>traditional<sp/>char<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringArray[outStringArrayLength++]<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>(stringVectorArray[currIndex]);</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertStringVectorArrayToStringArray()<sp/>stringVectorArray&apos;s<sp/>length<sp/>is<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"></highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stringArray;</highlight></codeline>
<codeline lineno="3812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"></highlight></codeline>
<codeline lineno="3853"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">**<sp/><ref refid="class_ace_1a3e82ab0d2c6c04e8bea91b0b7dbaae57" kindref="member">Ace::ConvertStringVectorArrayToStringArray</ref>(vector&lt;wchar_t*&gt;<sp/>stringVectorArray,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>outStringArrayLength)</highlight></codeline>
<codeline lineno="3854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stringVectorArrayLen<sp/>=<sp/>stringVectorArray.size();</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">**<sp/>stringArray<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"></highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringVectorArrayLen<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>stringVectorArrayLen<sp/>&lt;<sp/><ref refid="_ace_8h_1a3fb0211ecf1dc4bdd8c17c2959ff732c" kindref="member">MAX_STRING_BUFFER_SIZE</ref>)</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allocate<sp/>a<sp/>traditional<sp/>string<sp/>array<sp/>to<sp/>hold<sp/>our<sp/>strings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringArray<sp/>=<sp/>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">**)_aligned_malloc(stringVectorArrayLen<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*),<sp/><ref refid="_ace_8h_1aa465ebf747728e1e8a5edd0bd7a6fcde" kindref="member">BYTE_ALIGNMENT</ref>);</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"></highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>buffer<sp/>was<sp/>allocated<sp/>successfully.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringArray<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertStringVectorArrayToStringArray()<sp/>Buffer<sp/>could<sp/>not<sp/>be<sp/>allocated.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"></highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Size<sp/>of<sp/>array<sp/>will<sp/>shrink<sp/>if<sp/>the<sp/>vector<sp/>array<sp/>has<sp/>NULL(s).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outStringArrayLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>stringVectorArrayLen;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stringVectorArray[currIndex]<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Copy<sp/>the<sp/>string<sp/>from<sp/>the<sp/>vector<sp/>array<sp/>to<sp/>the<sp/>traditional<sp/>char<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringArray[outStringArrayLength++]<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>(stringVectorArray[currIndex]);</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertStringVectorArrayToStringArray()<sp/>stringVectorArray&apos;s<sp/>length<sp/>is<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"></highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stringArray;</highlight></codeline>
<codeline lineno="3887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"></highlight></codeline>
<codeline lineno="3906"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a860b03a8bd162798dbc1dbeabbb785e1" kindref="member">Ace::ConvertToLowerCase</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>character)</highlight></codeline>
<codeline lineno="3907"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tolower(character);</highlight></codeline>
<codeline lineno="3909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"></highlight></codeline>
<codeline lineno="3928"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a860b03a8bd162798dbc1dbeabbb785e1" kindref="member">Ace::ConvertToLowerCase</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>character)</highlight></codeline>
<codeline lineno="3929"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>towlower(character);</highlight></codeline>
<codeline lineno="3931"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"></highlight></codeline>
<codeline lineno="3950"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a658e886d648a545b26d684545ad81146" kindref="member">Ace::ConvertToUpperCase</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>character)</highlight></codeline>
<codeline lineno="3951"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>toupper(character);</highlight></codeline>
<codeline lineno="3953"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"></highlight></codeline>
<codeline lineno="3972"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a658e886d648a545b26d684545ad81146" kindref="member">Ace::ConvertToUpperCase</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>character)</highlight></codeline>
<codeline lineno="3973"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>towupper(character);</highlight></codeline>
<codeline lineno="3975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"></highlight></codeline>
<codeline lineno="4003"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a860b03a8bd162798dbc1dbeabbb785e1" kindref="member">Ace::ConvertToLowerCase</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="4004"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"></highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>(str);</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ace_1a040b39d22ec0282b5a4185aba3e37633" kindref="member">Ace::ConvertToLowerCaseInPlace</ref>(buffer);</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertToLowerCase()<sp/>str<sp/>cannot<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"></highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer;</highlight></codeline>
<codeline lineno="4018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"></highlight></codeline>
<codeline lineno="4046"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a860b03a8bd162798dbc1dbeabbb785e1" kindref="member">Ace::ConvertToLowerCase</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="4047"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>buffer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"></highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>(str);</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ace_1a040b39d22ec0282b5a4185aba3e37633" kindref="member">Ace::ConvertToLowerCaseInPlace</ref>(buffer);</highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertToLowerCase()<sp/>str<sp/>cannot<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"></highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer;</highlight></codeline>
<codeline lineno="4061"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"></highlight></codeline>
<codeline lineno="4088"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a040b39d22ec0282b5a4185aba3e37633" kindref="member">Ace::ConvertToLowerCaseInPlace</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="4089"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToLower<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"></highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*str<sp/>=<sp/>tolower(*str);</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str++;</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertToLowerCaseInPlace()<sp/>str<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"></highlight></codeline>
<codeline lineno="4131"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a040b39d22ec0282b5a4185aba3e37633" kindref="member">Ace::ConvertToLowerCaseInPlace</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="4132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToLower<sp/>=<sp/>L</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"></highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*str<sp/>=<sp/>towlower(*str);</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str++;</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertToLowerCaseInPlace()<sp/>str<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"></highlight></codeline>
<codeline lineno="4175"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a658e886d648a545b26d684545ad81146" kindref="member">Ace::ConvertToUpperCase</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="4176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"></highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>(str);</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ace_1a4ce18b5ec8b3acce9219938b2d07af0b" kindref="member">Ace::ConvertToUpperCaseInPlace</ref>(buffer);</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertToUpperCase()<sp/>str<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"></highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer;</highlight></codeline>
<codeline lineno="4190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"></highlight></codeline>
<codeline lineno="4218"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a658e886d648a545b26d684545ad81146" kindref="member">Ace::ConvertToUpperCase</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="4219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>buffer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4221"><highlight class="normal"></highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>(str);</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ace_1a4ce18b5ec8b3acce9219938b2d07af0b" kindref="member">Ace::ConvertToUpperCaseInPlace</ref>(buffer);</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertToUpperCase()<sp/>str<sp/>cannot<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4231"><highlight class="normal"></highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer;</highlight></codeline>
<codeline lineno="4233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"></highlight></codeline>
<codeline lineno="4260"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a4ce18b5ec8b3acce9219938b2d07af0b" kindref="member">Ace::ConvertToUpperCaseInPlace</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="4261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToUpper<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"></highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*str<sp/>=<sp/>toupper(*str);</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str++;</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertToUpperCaseInPlace()<sp/>str<sp/>cannot<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4277"><highlight class="normal"></highlight></codeline>
<codeline lineno="4303"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a4ce18b5ec8b3acce9219938b2d07af0b" kindref="member">Ace::ConvertToUpperCaseInPlace</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="4304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToUpper<sp/>=<sp/>L</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"></highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*str<sp/>=<sp/>towupper(*str);</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str++;</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ConvertToUpperCaseInPlace()<sp/>str<sp/>cannot<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"></highlight></codeline>
<codeline lineno="4348"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a59f079afef33f0a7bed749afbf777c36" kindref="member">Ace::Cos</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="4349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4351"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"></highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"></highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>cos(numInRadians);</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"></highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>cos().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Cos()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Cos()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"></highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"></highlight></codeline>
<codeline lineno="4405"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a59f079afef33f0a7bed749afbf777c36" kindref="member">Ace::Cos</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="4406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4408"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"></highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"></highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>cos(numInRadians);</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"></highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>cos().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Cos()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Cos()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"></highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"></highlight></codeline>
<codeline lineno="4462"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a59f079afef33f0a7bed749afbf777c36" kindref="member">Ace::Cos</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="4463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4465"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"></highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4473"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"></highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>cos(numInRadians);</highlight></codeline>
<codeline lineno="4476"><highlight class="normal"></highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>cos().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Cos()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Cos()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"></highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"></highlight></codeline>
<codeline lineno="4518"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a2a3e08791d5a9e794a02c118daca3402" kindref="member">Ace::CosH</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="4519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4521"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"></highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4530"><highlight class="normal"></highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>cosh(numInRadians);</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"></highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>cosh().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>CosH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>CosH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"></highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"></highlight></codeline>
<codeline lineno="4574"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a2a3e08791d5a9e794a02c118daca3402" kindref="member">Ace::CosH</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="4575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4577"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"></highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"></highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>cosh(numInRadians);</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"></highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>cosh().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>CosH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>CosH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"></highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"></highlight></codeline>
<codeline lineno="4630"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a2a3e08791d5a9e794a02c118daca3402" kindref="member">Ace::CosH</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="4631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4633"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"></highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4642"><highlight class="normal"></highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>cosh(numInRadians);</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"></highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>cosh().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>CosH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>CosH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"></highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"></highlight></codeline>
<codeline lineno="4687"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a4202759241426cfbbc2c15b5ea218ec8" kindref="member">Ace::CountNumOccurrences</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>charToLookFor)</highlight></codeline>
<codeline lineno="4688"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"></highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>strlen(strToSearch);<sp/>currIndex++)</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch[currIndex]<sp/>==<sp/>charToLookFor)</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>CountNumOccurrences()<sp/>strToSearch<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"></highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="4707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"></highlight></codeline>
<codeline lineno="4736"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a4202759241426cfbbc2c15b5ea218ec8" kindref="member">Ace::CountNumOccurrences</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>charToLookFor)</highlight></codeline>
<codeline lineno="4737"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"></highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>wcslen(strToSearch);<sp/>currIndex++)</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch[currIndex]<sp/>==<sp/>charToLookFor)</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4749"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>CountNumOccurrences()<sp/>strToSearch<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4754"><highlight class="normal"></highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="4756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"></highlight></codeline>
<codeline lineno="4786"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a4202759241426cfbbc2c15b5ea218ec8" kindref="member">Ace::CountNumOccurrences</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToLookFor)</highlight></codeline>
<codeline lineno="4787"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToLookForLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToSearchLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>currSubstring<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"></highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToLookFor<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Record<sp/>the<sp/>lengths<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>keep<sp/>calling<sp/>strlen().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToLookForLen<sp/>=<sp/>strlen(strToLookFor);</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearchLen<sp/>=<sp/>strlen(strToSearch);</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"></highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>item<sp/>to<sp/>look<sp/>for<sp/>must<sp/>be<sp/>smaller<sp/>then<sp/>the<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToLookForLen<sp/>&lt;<sp/>strToSearchLen)</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Search<sp/>the<sp/>entire<sp/>string<sp/>for<sp/>an<sp/>occurrence<sp/>of<sp/>strToLookFor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;=<sp/>(strToSearchLen<sp/>-<sp/>strToLookForLen);<sp/>currIndex++)</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currSubstring<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToSearch,<sp/>currIndex,<sp/>currIndex<sp/>+<sp/>strToLookForLen);</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"></highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>to<sp/>see<sp/>if<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(currSubstring,<sp/>strToLookFor)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Occurrence<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num++;</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"></highlight></codeline>
<codeline lineno="4814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Cleanup<sp/>the<sp/>currSubstring<sp/>since<sp/>SubString()<sp/>allocates<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(currSubstring);</highlight></codeline>
<codeline lineno="4816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>CountNumOccurrences()<sp/>strToLookFor<sp/>must<sp/>be<sp/>smaller<sp/>then<sp/>strToSearch.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4824"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>CountNumOccurrences()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4827"><highlight class="normal"></highlight></codeline>
<codeline lineno="4828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num;</highlight></codeline>
<codeline lineno="4829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"></highlight></codeline>
<codeline lineno="4859"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a4202759241426cfbbc2c15b5ea218ec8" kindref="member">Ace::CountNumOccurrences</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToLookFor)</highlight></codeline>
<codeline lineno="4860"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToLookForLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToSearchLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>currSubstring<sp/>=<sp/>L</highlight><highlight class="stringliteral">&quot;\0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4865"><highlight class="normal"></highlight></codeline>
<codeline lineno="4866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToLookFor<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Record<sp/>the<sp/>lengths<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>keep<sp/>calling<sp/>wcslen().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToLookForLen<sp/>=<sp/>wcslen(strToLookFor);</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearchLen<sp/>=<sp/>wcslen(strToSearch);</highlight></codeline>
<codeline lineno="4871"><highlight class="normal"></highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>item<sp/>to<sp/>look<sp/>for<sp/>must<sp/>be<sp/>smaller<sp/>then<sp/>the<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToLookForLen<sp/>&lt;<sp/>strToSearchLen)</highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Search<sp/>the<sp/>entire<sp/>string<sp/>for<sp/>an<sp/>occurrence<sp/>of<sp/>strToLookFor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;=<sp/>(strToSearchLen<sp/>-<sp/>strToLookForLen);<sp/>currIndex++)</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currSubstring<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToSearch,<sp/>currIndex,<sp/>currIndex<sp/>+<sp/>strToLookForLen);</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"></highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>to<sp/>see<sp/>if<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wcscmp(currSubstring,<sp/>strToLookFor)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Occurrence<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num++;</highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4886"><highlight class="normal"></highlight></codeline>
<codeline lineno="4887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Cleanup<sp/>the<sp/>currSubstring<sp/>since<sp/>SubString()<sp/>allocates<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(currSubstring);</highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>CountNumOccurrences()<sp/>strToLookFor<sp/>must<sp/>be<sp/>smaller<sp/>then<sp/>strToSearch.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4897"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>CountNumOccurrences()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4900"><highlight class="normal"></highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num;</highlight></codeline>
<codeline lineno="4902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"></highlight></codeline>
<codeline lineno="4929"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1abf907ab5be1efd6f81532d2cb9f2a809" kindref="member">Ace::CubeRoot</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="4930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4932"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"></highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4941"><highlight class="normal"></highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>cbrt(num);</highlight></codeline>
<codeline lineno="4943"><highlight class="normal"></highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>cbrt().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>CubeRoot()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="4949"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>CubeRoot()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4955"><highlight class="normal"></highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="4957"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"></highlight></codeline>
<codeline lineno="4984"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1abf907ab5be1efd6f81532d2cb9f2a809" kindref="member">Ace::CubeRoot</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="4985"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4987"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"></highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4992"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="4994"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4996"><highlight class="normal"></highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>cbrt(num);</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"></highlight></codeline>
<codeline lineno="4999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>cbrt().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>CubeRoot()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5006"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>CubeRoot()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5010"><highlight class="normal"></highlight></codeline>
<codeline lineno="5011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5012"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5013"><highlight class="normal"></highlight></codeline>
<codeline lineno="5039"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1abf907ab5be1efd6f81532d2cb9f2a809" kindref="member">Ace::CubeRoot</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="5040"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5042"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"></highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5051"><highlight class="normal"></highlight></codeline>
<codeline lineno="5052"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>cbrt(num);</highlight></codeline>
<codeline lineno="5053"><highlight class="normal"></highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>cbrt().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>CubeRoot()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5059"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>CubeRoot()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5064"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5065"><highlight class="normal"></highlight></codeline>
<codeline lineno="5066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5068"><highlight class="normal"></highlight></codeline>
<codeline lineno="5087"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ad4386a90f9491cc97945787e15e7554c" kindref="member">Ace::DegreesToRadians</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>degrees)</highlight></codeline>
<codeline lineno="5088"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(degrees<sp/>*<sp/><ref refid="_ace_8h_1a952eac791b596a61bba0a133a3bb439f" kindref="member">PI</ref>)<sp/>/<sp/>180.0;</highlight></codeline>
<codeline lineno="5090"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5091"><highlight class="normal"></highlight></codeline>
<codeline lineno="5110"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ad4386a90f9491cc97945787e15e7554c" kindref="member">Ace::DegreesToRadians</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>degrees)</highlight></codeline>
<codeline lineno="5111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(degrees<sp/>*<sp/><ref refid="_ace_8h_1a952eac791b596a61bba0a133a3bb439f" kindref="member">PI</ref>)<sp/>/<sp/>180.0f;</highlight></codeline>
<codeline lineno="5113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"></highlight></codeline>
<codeline lineno="5134"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ad4386a90f9491cc97945787e15e7554c" kindref="member">Ace::DegreesToRadians</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>degrees)</highlight></codeline>
<codeline lineno="5135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(degrees<sp/>*<sp/><ref refid="_ace_8h_1a952eac791b596a61bba0a133a3bb439f" kindref="member">PI</ref>)<sp/>/<sp/>180;</highlight></codeline>
<codeline lineno="5137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5138"><highlight class="normal"></highlight></codeline>
<codeline lineno="5169"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a63153a0d492cb0cbe3a4cd69fee74684" kindref="member">Ace::DoesFileExist</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fullFilePathWithNameAndExt)</highlight></codeline>
<codeline lineno="5170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fullFilePathWithNameAndExt<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="5172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>buffer;</highlight></codeline>
<codeline lineno="5174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stat(fullFilePathWithNameAndExt,<sp/>&amp;buffer)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5177"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>DoesFileExist()<sp/>fullFilePathWithNameAndExt<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5182"><highlight class="normal"></highlight></codeline>
<codeline lineno="5213"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a63153a0d492cb0cbe3a4cd69fee74684" kindref="member">Ace::DoesFileExist</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>fullFilePathWithNameAndExt)</highlight></codeline>
<codeline lineno="5214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fullFilePathWithNameAndExt<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="5216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_stat<sp/>buffer;</highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(_wstat(fullFilePathWithNameAndExt,<sp/>&amp;buffer)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5221"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>DoesFileExist()<sp/>fullFilePathWithNameAndExt<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"></highlight></codeline>
<codeline lineno="5253"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aa522bbdb8b2d83603bf89f64714f4d89" kindref="member">Ace::ErrorFunction</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="5254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5256"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="5258"><highlight class="normal"></highlight></codeline>
<codeline lineno="5259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="5263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5264"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5265"><highlight class="normal"></highlight></codeline>
<codeline lineno="5266"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>erf(num);</highlight></codeline>
<codeline lineno="5267"><highlight class="normal"></highlight></codeline>
<codeline lineno="5268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>erf().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ErrorFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5275"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ErrorFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="5278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5279"><highlight class="normal"></highlight></codeline>
<codeline lineno="5280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5282"><highlight class="normal"></highlight></codeline>
<codeline lineno="5309"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aa522bbdb8b2d83603bf89f64714f4d89" kindref="member">Ace::ErrorFunction</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="5310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5312"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"></highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="5319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5320"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5321"><highlight class="normal"></highlight></codeline>
<codeline lineno="5322"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>erf(num);</highlight></codeline>
<codeline lineno="5323"><highlight class="normal"></highlight></codeline>
<codeline lineno="5324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>erf().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5326"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ErrorFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="5329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5331"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ErrorFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="5334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5335"><highlight class="normal"></highlight></codeline>
<codeline lineno="5336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5338"><highlight class="normal"></highlight></codeline>
<codeline lineno="5365"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aa522bbdb8b2d83603bf89f64714f4d89" kindref="member">Ace::ErrorFunction</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="5366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5368"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="5370"><highlight class="normal"></highlight></codeline>
<codeline lineno="5371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="5375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5376"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5377"><highlight class="normal"></highlight></codeline>
<codeline lineno="5378"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>erf(num);</highlight></codeline>
<codeline lineno="5379"><highlight class="normal"></highlight></codeline>
<codeline lineno="5380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>erf().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ErrorFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5387"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>ErrorFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5391"><highlight class="normal"></highlight></codeline>
<codeline lineno="5392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5394"><highlight class="normal"></highlight></codeline>
<codeline lineno="5421"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a986a84d68783456d3c97b467cece5635" kindref="member">Ace::Equals</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToCompOne,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToCompTwo)</highlight></codeline>
<codeline lineno="5422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToCompOne<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToCompTwo<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="5424"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strcmp(strToCompOne,<sp/>strToCompTwo)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="5426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5427"><highlight class="normal"></highlight></codeline>
<codeline lineno="5428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5430"><highlight class="normal"></highlight></codeline>
<codeline lineno="5457"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a986a84d68783456d3c97b467cece5635" kindref="member">Ace::Equals</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToCompOne,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToCompTwo)</highlight></codeline>
<codeline lineno="5458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToCompOne<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToCompTwo<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="5460"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wcscmp(strToCompOne,<sp/>strToCompTwo)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="5462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5463"><highlight class="normal"></highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5466"><highlight class="normal"></highlight></codeline>
<codeline lineno="5493"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a5310b61a074383bf2ee4df005c6784e1" kindref="member">Ace::EqualsIgnoreCase</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToCompOne,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToCompTwo)</highlight></codeline>
<codeline lineno="5494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>normStrOne;</highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>normStrTwo;</highlight></codeline>
<codeline lineno="5497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5498"><highlight class="normal"></highlight></codeline>
<codeline lineno="5499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToCompOne<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToCompTwo<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="5500"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Normalize<sp/>the<sp/>strings<sp/>so<sp/>all<sp/>characters<sp/>are<sp/>the<sp/>same<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normStrOne<sp/>=<sp/><ref refid="class_ace_1a658e886d648a545b26d684545ad81146" kindref="member">Ace::ConvertToUpperCase</ref>(strToCompOne);</highlight></codeline>
<codeline lineno="5503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normStrTwo<sp/>=<sp/><ref refid="class_ace_1a658e886d648a545b26d684545ad81146" kindref="member">Ace::ConvertToUpperCase</ref>(strToCompTwo);</highlight></codeline>
<codeline lineno="5504"><highlight class="normal"></highlight></codeline>
<codeline lineno="5505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_ace_1a986a84d68783456d3c97b467cece5635" kindref="member">Ace::Equals</ref>(normStrOne,<sp/>normStrTwo);</highlight></codeline>
<codeline lineno="5506"><highlight class="normal"></highlight></codeline>
<codeline lineno="5507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(normStrOne);</highlight></codeline>
<codeline lineno="5508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(normStrTwo);</highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5510"><highlight class="normal"></highlight></codeline>
<codeline lineno="5511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5513"><highlight class="normal"></highlight></codeline>
<codeline lineno="5540"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a5310b61a074383bf2ee4df005c6784e1" kindref="member">Ace::EqualsIgnoreCase</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToCompOne,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToCompTwo)</highlight></codeline>
<codeline lineno="5541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>normStrOne;</highlight></codeline>
<codeline lineno="5543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>normStrTwo;</highlight></codeline>
<codeline lineno="5544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5545"><highlight class="normal"></highlight></codeline>
<codeline lineno="5546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToCompOne<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToCompTwo<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="5547"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Normalize<sp/>the<sp/>strings<sp/>so<sp/>all<sp/>characters<sp/>are<sp/>the<sp/>same<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normStrOne<sp/>=<sp/><ref refid="class_ace_1a658e886d648a545b26d684545ad81146" kindref="member">Ace::ConvertToUpperCase</ref>(strToCompOne);</highlight></codeline>
<codeline lineno="5550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normStrTwo<sp/>=<sp/><ref refid="class_ace_1a658e886d648a545b26d684545ad81146" kindref="member">Ace::ConvertToUpperCase</ref>(strToCompTwo);</highlight></codeline>
<codeline lineno="5551"><highlight class="normal"></highlight></codeline>
<codeline lineno="5552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_ace_1a986a84d68783456d3c97b467cece5635" kindref="member">Ace::Equals</ref>(normStrOne,<sp/>normStrTwo);</highlight></codeline>
<codeline lineno="5553"><highlight class="normal"></highlight></codeline>
<codeline lineno="5554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(normStrOne);</highlight></codeline>
<codeline lineno="5555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(normStrTwo);</highlight></codeline>
<codeline lineno="5556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5557"><highlight class="normal"></highlight></codeline>
<codeline lineno="5558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5560"><highlight class="normal"></highlight></codeline>
<codeline lineno="5586"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ae51ded8e8e681b85ee397e381068dbca" kindref="member">Ace::EToTheXPower</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>power)</highlight></codeline>
<codeline lineno="5587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5589"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="5591"><highlight class="normal"></highlight></codeline>
<codeline lineno="5592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5594"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="5596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5597"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5598"><highlight class="normal"></highlight></codeline>
<codeline lineno="5599"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>exp(power);</highlight></codeline>
<codeline lineno="5600"><highlight class="normal"></highlight></codeline>
<codeline lineno="5601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>exp().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5603"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>EToTheXPower()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="5606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5608"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>EToTheXPower()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="5611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5612"><highlight class="normal"></highlight></codeline>
<codeline lineno="5613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5615"><highlight class="normal"></highlight></codeline>
<codeline lineno="5641"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ae51ded8e8e681b85ee397e381068dbca" kindref="member">Ace::EToTheXPower</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>power)</highlight></codeline>
<codeline lineno="5642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5644"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="5646"><highlight class="normal"></highlight></codeline>
<codeline lineno="5647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5649"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="5651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5652"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5653"><highlight class="normal"></highlight></codeline>
<codeline lineno="5654"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>exp(power);</highlight></codeline>
<codeline lineno="5655"><highlight class="normal"></highlight></codeline>
<codeline lineno="5656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>exp().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5658"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>EToTheXPower()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="5661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5663"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>EToTheXPower()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="5666"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5667"><highlight class="normal"></highlight></codeline>
<codeline lineno="5668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5670"><highlight class="normal"></highlight></codeline>
<codeline lineno="5696"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ae51ded8e8e681b85ee397e381068dbca" kindref="member">Ace::EToTheXPower</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>power)</highlight></codeline>
<codeline lineno="5697"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5699"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="5701"><highlight class="normal"></highlight></codeline>
<codeline lineno="5702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5704"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="5706"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5707"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5708"><highlight class="normal"></highlight></codeline>
<codeline lineno="5709"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>exp(power);</highlight></codeline>
<codeline lineno="5710"><highlight class="normal"></highlight></codeline>
<codeline lineno="5711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>exp().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5713"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>EToTheXPower()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5718"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>EToTheXPower()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5722"><highlight class="normal"></highlight></codeline>
<codeline lineno="5723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5725"><highlight class="normal"></highlight></codeline>
<codeline lineno="5751"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a50cb517fc19d73e44bb9c3cc1141d7bc" kindref="member">Ace::EToTheXPowerMinusOne</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>power)</highlight></codeline>
<codeline lineno="5752"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5754"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="5756"><highlight class="normal"></highlight></codeline>
<codeline lineno="5757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5759"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="5761"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5762"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5763"><highlight class="normal"></highlight></codeline>
<codeline lineno="5764"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>expm1(power);</highlight></codeline>
<codeline lineno="5765"><highlight class="normal"></highlight></codeline>
<codeline lineno="5766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>expm1().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5768"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>EToTheXPowerMinusOne()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="5771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5773"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>EToTheXPowerMinusOne()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="5776"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5777"><highlight class="normal"></highlight></codeline>
<codeline lineno="5778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5780"><highlight class="normal"></highlight></codeline>
<codeline lineno="5806"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a50cb517fc19d73e44bb9c3cc1141d7bc" kindref="member">Ace::EToTheXPowerMinusOne</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>power)</highlight></codeline>
<codeline lineno="5807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5809"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="5811"><highlight class="normal"></highlight></codeline>
<codeline lineno="5812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5814"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="5816"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5817"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5818"><highlight class="normal"></highlight></codeline>
<codeline lineno="5819"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>expm1(power);</highlight></codeline>
<codeline lineno="5820"><highlight class="normal"></highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>expm1().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5823"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>EToTheXPowerMinusOne()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="5826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5828"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>EToTheXPowerMinusOne()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="5831"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5832"><highlight class="normal"></highlight></codeline>
<codeline lineno="5833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5835"><highlight class="normal"></highlight></codeline>
<codeline lineno="5861"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a50cb517fc19d73e44bb9c3cc1141d7bc" kindref="member">Ace::EToTheXPowerMinusOne</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>power)</highlight></codeline>
<codeline lineno="5862"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5864"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="5866"><highlight class="normal"></highlight></codeline>
<codeline lineno="5867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5869"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="5871"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5872"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5873"><highlight class="normal"></highlight></codeline>
<codeline lineno="5874"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>expm1(power);</highlight></codeline>
<codeline lineno="5875"><highlight class="normal"></highlight></codeline>
<codeline lineno="5876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>expm1().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5878"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>EToTheXPowerMinusOne()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5881"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5883"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>EToTheXPowerMinusOne()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="5886"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5887"><highlight class="normal"></highlight></codeline>
<codeline lineno="5888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5890"><highlight class="normal"></highlight></codeline>
<codeline lineno="5917"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aca1a612de325a7636ef40c95b676795d" kindref="member">Ace::FirstChar</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="5918"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="5920"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(str<sp/>+<sp/>0);</highlight></codeline>
<codeline lineno="5922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5924"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>FirstChar()<sp/>str<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5926"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5927"><highlight class="normal"></highlight></codeline>
<codeline lineno="5928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5930"><highlight class="normal"></highlight></codeline>
<codeline lineno="5957"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aca1a612de325a7636ef40c95b676795d" kindref="member">Ace::FirstChar</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="5958"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="5960"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(str<sp/>+<sp/>0);</highlight></codeline>
<codeline lineno="5962"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5964"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>FirstChar()<sp/>str<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5966"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5967"><highlight class="normal"></highlight></codeline>
<codeline lineno="5968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>L</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5969"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5970"><highlight class="normal"></highlight></codeline>
<codeline lineno="5998"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a509e6fda4da886680951615f2ac2d421" kindref="member">Ace::Floor</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="5999"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6001"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="6003"><highlight class="normal"></highlight></codeline>
<codeline lineno="6004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="6006"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="6008"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6009"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6010"><highlight class="normal"></highlight></codeline>
<codeline lineno="6011"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>floor(num);</highlight></codeline>
<codeline lineno="6012"><highlight class="normal"></highlight></codeline>
<codeline lineno="6013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>floor().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6015"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Floor()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="6018"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6020"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Floor()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="6023"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6024"><highlight class="normal"></highlight></codeline>
<codeline lineno="6025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6026"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6027"><highlight class="normal"></highlight></codeline>
<codeline lineno="6055"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a509e6fda4da886680951615f2ac2d421" kindref="member">Ace::Floor</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="6056"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6058"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="6060"><highlight class="normal"></highlight></codeline>
<codeline lineno="6061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="6063"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="6065"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6066"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6067"><highlight class="normal"></highlight></codeline>
<codeline lineno="6068"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>floor(num);</highlight></codeline>
<codeline lineno="6069"><highlight class="normal"></highlight></codeline>
<codeline lineno="6070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>floor().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6072"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Floor()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="6075"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6077"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Floor()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="6080"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6081"><highlight class="normal"></highlight></codeline>
<codeline lineno="6082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6083"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6084"><highlight class="normal"></highlight></codeline>
<codeline lineno="6113"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a509e6fda4da886680951615f2ac2d421" kindref="member">Ace::Floor</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="6114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6116"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="6118"><highlight class="normal"></highlight></codeline>
<codeline lineno="6119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="6121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="6123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6124"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6125"><highlight class="normal"></highlight></codeline>
<codeline lineno="6126"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>floor(num);</highlight></codeline>
<codeline lineno="6127"><highlight class="normal"></highlight></codeline>
<codeline lineno="6128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>floor().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Floor()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Floor()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6139"><highlight class="normal"></highlight></codeline>
<codeline lineno="6140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6142"><highlight class="normal"></highlight></codeline>
<codeline lineno="6170"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a06b87693241afd13cfe45e052e6196f0" kindref="member">Ace::GammaFunction</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="6171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6173"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="6175"><highlight class="normal"></highlight></codeline>
<codeline lineno="6176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>an<sp/>exception<sp/>from<sp/>being<sp/>raised.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreater(num,<sp/>0.0)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6178"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="6181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="6183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6185"><highlight class="normal"></highlight></codeline>
<codeline lineno="6186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>tgamma(num);</highlight></codeline>
<codeline lineno="6187"><highlight class="normal"></highlight></codeline>
<codeline lineno="6188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>tgamma().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>GammaFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="6193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>GammaFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="6198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6200"><highlight class="normal"></highlight></codeline>
<codeline lineno="6201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6203"><highlight class="normal"></highlight></codeline>
<codeline lineno="6231"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a06b87693241afd13cfe45e052e6196f0" kindref="member">Ace::GammaFunction</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="6232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6234"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="6236"><highlight class="normal"></highlight></codeline>
<codeline lineno="6237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>an<sp/>exception<sp/>from<sp/>being<sp/>raised.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreater(num,<sp/>0.0f)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="6242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="6244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6246"><highlight class="normal"></highlight></codeline>
<codeline lineno="6247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>tgamma(num);</highlight></codeline>
<codeline lineno="6248"><highlight class="normal"></highlight></codeline>
<codeline lineno="6249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>tgamma().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>GammaFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="6254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>GammaFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="6259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6261"><highlight class="normal"></highlight></codeline>
<codeline lineno="6262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6264"><highlight class="normal"></highlight></codeline>
<codeline lineno="6292"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a06b87693241afd13cfe45e052e6196f0" kindref="member">Ace::GammaFunction</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="6293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6295"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="6297"><highlight class="normal"></highlight></codeline>
<codeline lineno="6298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>an<sp/>exception<sp/>from<sp/>being<sp/>raised.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreater(num,<sp/>0)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6300"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="6303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="6305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6307"><highlight class="normal"></highlight></codeline>
<codeline lineno="6308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>tgamma(num);</highlight></codeline>
<codeline lineno="6309"><highlight class="normal"></highlight></codeline>
<codeline lineno="6310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>tgamma().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>GammaFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>GammaFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6322"><highlight class="normal"></highlight></codeline>
<codeline lineno="6323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6325"><highlight class="normal"></highlight></codeline>
<codeline lineno="6352"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1af052dd5bee7f50a8f80f3af4375a874a" kindref="member">Ace::GenerateRandomNum</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max)</highlight></codeline>
<codeline lineno="6353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>randSeed<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="6355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>randNum;</highlight></codeline>
<codeline lineno="6356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>randIndex;</highlight></codeline>
<codeline lineno="6357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currTime;</highlight></codeline>
<codeline lineno="6358"><highlight class="normal"><sp/><sp/><sp/><sp/>uniform_int_distribution&lt;int&gt;<sp/>rngDistribution(min,<sp/>max);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Generates<sp/>number<sp/>in<sp/>the<sp/>range<sp/>min<sp/>to<sp/>max.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6359"><highlight class="normal"></highlight></codeline>
<codeline lineno="6360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(randSeed<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="6361"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>current<sp/>time<sp/>and<sp/>generate<sp/>seeds<sp/>based<sp/>off<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currTime<sp/>=<sp/>(int)time(0);</highlight></codeline>
<codeline lineno="6364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seed_seq<sp/>seedSequence{<sp/>rand()<sp/>%<sp/>currTime<sp/>+<sp/>1<sp/>};</highlight></codeline>
<codeline lineno="6365"><highlight class="normal"></highlight></codeline>
<codeline lineno="6366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Generate<sp/>our<sp/>seed<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;int&gt;<sp/>randSeeds(<ref refid="_ace_8h_1a50fa63456cdc436709b8d73d8975e85b" kindref="member">MAX_SEEDS</ref>);</highlight></codeline>
<codeline lineno="6368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seedSequence.generate(randSeeds.begin(),<sp/>randSeeds.end());</highlight></codeline>
<codeline lineno="6369"><highlight class="normal"></highlight></codeline>
<codeline lineno="6370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Pick<sp/>a<sp/>seed<sp/>at<sp/>random<sp/>to<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srand(randSeeds.at(currTime<sp/>%<sp/>randSeeds.size()));</highlight></codeline>
<codeline lineno="6372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>randIndex<sp/>=<sp/>rand()<sp/>%<sp/>randSeeds.size();</highlight></codeline>
<codeline lineno="6373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>randSeed<sp/>=<sp/>randSeeds.at(randIndex);</highlight></codeline>
<codeline lineno="6374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6375"><highlight class="normal"></highlight></codeline>
<codeline lineno="6376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Seed<sp/>the<sp/>RNG<sp/>with<sp/>a<sp/>random<sp/>seed<sp/>from<sp/>our<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>only<sp/>want<sp/>to<sp/>seed<sp/>it<sp/>once<sp/>because<sp/>reseeding<sp/>each<sp/>time<sp/>just<sp/>generates<sp/>the<sp/>same<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>mt19937<sp/>rngGenerator(randSeed);</highlight></codeline>
<codeline lineno="6379"><highlight class="normal"></highlight></codeline>
<codeline lineno="6380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>a<sp/>random<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6381"><highlight class="normal"><sp/><sp/><sp/><sp/>randNum<sp/>=<sp/>rngDistribution(rngGenerator);</highlight></codeline>
<codeline lineno="6382"><highlight class="normal"></highlight></codeline>
<codeline lineno="6383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>randNum;</highlight></codeline>
<codeline lineno="6384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6385"><highlight class="normal"></highlight></codeline>
<codeline lineno="6411"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a1c97e15879456b16fa7322fd2e0db19a" kindref="member">Ace::GetHResultDescription</ref>(HRESULT<sp/>result)</highlight></codeline>
<codeline lineno="6412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6413"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>retVal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>descriptionSize<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="6415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>description<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="class_ace_1ac62e93783b52192c5f5649a389021d15" kindref="member">Ace::_Aligned_Calloc</ref>(descriptionSize);</highlight></codeline>
<codeline lineno="6416"><highlight class="normal"></highlight></codeline>
<codeline lineno="6417"><highlight class="normal"><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/>FormatMessageA(FORMAT_MESSAGE_FROM_SYSTEM,</highlight></codeline>
<codeline lineno="6418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="6419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result,</highlight></codeline>
<codeline lineno="6420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAKELANGID(LANG_NEUTRAL,<sp/>SUBLANG_DEFAULT),</highlight></codeline>
<codeline lineno="6421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description,</highlight></codeline>
<codeline lineno="6422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptionSize,</highlight></codeline>
<codeline lineno="6423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="6424"><highlight class="normal"></highlight></codeline>
<codeline lineno="6425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retVal<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6426"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetHResultDescription()<sp/>Could<sp/>not<sp/>get<sp/>description<sp/>from<sp/>FormatMessage().&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6430"><highlight class="normal"></highlight></codeline>
<codeline lineno="6431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>description;</highlight></codeline>
<codeline lineno="6432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6433"><highlight class="normal"></highlight></codeline>
<codeline lineno="6459"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a61fd06ba0cf3ccb1382445c9a556c181" kindref="member">Ace::GetHResultDescriptionW</ref>(HRESULT<sp/>result)</highlight></codeline>
<codeline lineno="6460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6461"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>retVal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>descriptionSize<sp/>=<sp/>2048;</highlight></codeline>
<codeline lineno="6463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>description<sp/>=<sp/>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)<ref refid="class_ace_1ac62e93783b52192c5f5649a389021d15" kindref="member">Ace::_Aligned_Calloc</ref>(descriptionSize);</highlight></codeline>
<codeline lineno="6464"><highlight class="normal"></highlight></codeline>
<codeline lineno="6465"><highlight class="normal"><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/>FormatMessageW(FORMAT_MESSAGE_FROM_SYSTEM,</highlight></codeline>
<codeline lineno="6466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="6467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result,</highlight></codeline>
<codeline lineno="6468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAKELANGID(LANG_NEUTRAL,<sp/>SUBLANG_DEFAULT),</highlight></codeline>
<codeline lineno="6469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description,</highlight></codeline>
<codeline lineno="6470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptionSize,</highlight></codeline>
<codeline lineno="6471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="6472"><highlight class="normal"></highlight></codeline>
<codeline lineno="6473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retVal<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6474"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetHResultDescriptionW()<sp/>Could<sp/>not<sp/>get<sp/>description<sp/>from<sp/>FormatMessage().&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6478"><highlight class="normal"></highlight></codeline>
<codeline lineno="6479"><highlight class="normal"></highlight></codeline>
<codeline lineno="6480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>description;</highlight></codeline>
<codeline lineno="6481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6482"><highlight class="normal"></highlight></codeline>
<codeline lineno="6511"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a126f129969e4e0cf86a746ae1968695e" kindref="member">Ace::GetImageSize</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filePath,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>outWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>outHeight)</highlight></codeline>
<codeline lineno="6512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6513"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>file<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="6516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[24];</highlight></codeline>
<codeline lineno="6517"><highlight class="normal"></highlight></codeline>
<codeline lineno="6518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fopen_s(&amp;file,<sp/>filePath,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6519"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetImageSize()<sp/>Cannot<sp/>open<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6522"><highlight class="normal"></highlight></codeline>
<codeline lineno="6523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fseek(file,<sp/>0,<sp/>SEEK_END)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6524"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetImageSize()<sp/>fseek()<sp/>failed<sp/>to<sp/>read<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6528"><highlight class="normal"></highlight></codeline>
<codeline lineno="6529"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>ftell(file);</highlight></codeline>
<codeline lineno="6530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>24)</highlight></codeline>
<codeline lineno="6531"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetImageSize()<sp/>File<sp/>not<sp/>large<sp/>enough.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6535"><highlight class="normal"></highlight></codeline>
<codeline lineno="6536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fseek(file,<sp/>0,<sp/>SEEK_SET)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6537"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetImageSize()<sp/>fseek()<sp/>failed<sp/>to<sp/>read<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6541"><highlight class="normal"></highlight></codeline>
<codeline lineno="6542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Strategy:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reading<sp/>GIF<sp/>dimensions<sp/>requires<sp/>the<sp/>first<sp/>10<sp/>bytes<sp/>of<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reading<sp/>PNG<sp/>dimensions<sp/>requires<sp/>the<sp/>first<sp/>24<sp/>bytes<sp/>of<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reading<sp/>JPEG<sp/>dimensions<sp/>requires<sp/>scanning<sp/>through<sp/>jpeg<sp/>chunks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>all<sp/>formats,<sp/>the<sp/>file<sp/>is<sp/>at<sp/>least<sp/>24<sp/>bytes<sp/>big,<sp/>so<sp/>we&apos;ll<sp/>read<sp/>that<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(buf,<sp/>1,<sp/>24,<sp/>file)<sp/>!=<sp/>24)</highlight></codeline>
<codeline lineno="6548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetImageSize()<sp/>fread()<sp/>failed<sp/>to<sp/>read<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6552"><highlight class="normal"></highlight></codeline>
<codeline lineno="6553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>JPEGs,<sp/>we<sp/>need<sp/>to<sp/>read<sp/>the<sp/>first<sp/>12<sp/>bytes<sp/>of<sp/>each<sp/>chunk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ll<sp/>read<sp/>those<sp/>12<sp/>bytes<sp/>at<sp/>buf+2...buf+14,<sp/>i.e.<sp/>overwriting<sp/>the<sp/>existing<sp/>buf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf[0]<sp/>==<sp/>0xFF<sp/>&amp;&amp;<sp/>buf[1]<sp/>==<sp/>0xD8<sp/>&amp;&amp;<sp/>buf[2]<sp/>==<sp/>0xFF<sp/>&amp;&amp;<sp/>buf[3]<sp/>==<sp/>0xE0<sp/>&amp;&amp;<sp/>buf[6]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;J&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[7]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[8]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[9]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6556"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(buf[2]<sp/>==<sp/>0xFF)</highlight></codeline>
<codeline lineno="6558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf[3]<sp/>==<sp/>0xC0<sp/>||<sp/>buf[3]<sp/>==<sp/>0xC1<sp/>||<sp/>buf[3]<sp/>==<sp/>0xC2<sp/>||<sp/>buf[3]<sp/>==<sp/>0xC3<sp/>||<sp/>buf[3]<sp/>==<sp/>0xC9<sp/>||<sp/>buf[3]<sp/>==<sp/>0xCA<sp/>||<sp/>buf[3]<sp/>==<sp/>0xCB)</highlight></codeline>
<codeline lineno="6560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6564"><highlight class="normal"></highlight></codeline>
<codeline lineno="6565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>+=<sp/>2<sp/>+<sp/>(buf[4]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>buf[5];</highlight></codeline>
<codeline lineno="6566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>+<sp/>12<sp/>&gt;<sp/>len)</highlight></codeline>
<codeline lineno="6567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fseek(file,<sp/>pos,<sp/>SEEK_SET)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetImageSize()<sp/>fseek()<sp/>failed<sp/>to<sp/>read<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6576"><highlight class="normal"></highlight></codeline>
<codeline lineno="6577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(buf<sp/>+<sp/>2,<sp/>1,<sp/>12,<sp/>file)<sp/>!=<sp/>12)</highlight></codeline>
<codeline lineno="6578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetImageSize()<sp/>fread()<sp/>failed<sp/>to<sp/>read<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6584"><highlight class="normal"></highlight></codeline>
<codeline lineno="6585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Some<sp/>images<sp/>contain<sp/>Exif<sp/>data<sp/>so<sp/>check<sp/>for<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((buf[0]<sp/>==<sp/>0xFF<sp/>&amp;&amp;<sp/>buf[1]<sp/>==<sp/>0xD8<sp/>&amp;&amp;<sp/>buf[2]<sp/>==<sp/>0xFF<sp/>&amp;&amp;<sp/>buf[3]<sp/>==<sp/>0xE0<sp/>&amp;&amp;<sp/>buf[6]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;J&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[7]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[8]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[9]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="6587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(buf[0]<sp/>==<sp/>0xFF<sp/>&amp;&amp;<sp/>buf[1]<sp/>==<sp/>0xD8<sp/>&amp;&amp;<sp/>buf[2]<sp/>==<sp/>0xFF<sp/>&amp;&amp;<sp/>buf[3]<sp/>==<sp/>0xE1<sp/>&amp;&amp;<sp/>buf[6]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[7]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[8]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[9]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="6588"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(buf[2]<sp/>==<sp/>0xFF)</highlight></codeline>
<codeline lineno="6590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf[3]<sp/>==<sp/>0xC0<sp/>||<sp/>buf[3]<sp/>==<sp/>0xC1<sp/>||<sp/>buf[3]<sp/>==<sp/>0xC2<sp/>||<sp/>buf[3]<sp/>==<sp/>0xC3<sp/>||<sp/>buf[3]<sp/>==<sp/>0xC9<sp/>||<sp/>buf[3]<sp/>==<sp/>0xCA<sp/>||<sp/>buf[3]<sp/>==<sp/>0xCB)</highlight></codeline>
<codeline lineno="6592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6596"><highlight class="normal"></highlight></codeline>
<codeline lineno="6597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>+=<sp/>2<sp/>+<sp/>(buf[4]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>buf[5];</highlight></codeline>
<codeline lineno="6598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>+<sp/>12<sp/>&gt;<sp/>len)</highlight></codeline>
<codeline lineno="6599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fseek(file,<sp/>pos,<sp/>SEEK_SET)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetImageSize()<sp/>fseek()<sp/>failed<sp/>to<sp/>read<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6608"><highlight class="normal"></highlight></codeline>
<codeline lineno="6609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(buf<sp/>+<sp/>2,<sp/>1,<sp/>12,<sp/>file)<sp/>!=<sp/>12)</highlight></codeline>
<codeline lineno="6610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetImageSize()<sp/>fread()<sp/>failed<sp/>to<sp/>read<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6616"><highlight class="normal"></highlight></codeline>
<codeline lineno="6617"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6618"><highlight class="normal"></highlight></codeline>
<codeline lineno="6619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf[0]<sp/>==<sp/>0xFF<sp/>&amp;&amp;<sp/>buf[1]<sp/>==<sp/>0xD8<sp/>&amp;&amp;<sp/>buf[2]<sp/>==<sp/>0xFF)</highlight></codeline>
<codeline lineno="6620"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//JPEG:<sp/>(first<sp/>two<sp/>bytes<sp/>of<sp/>buf<sp/>are<sp/>first<sp/>two<sp/>bytes<sp/>of<sp/>the<sp/>jpeg<sp/>file;<sp/>rest<sp/>of<sp/>buf<sp/>is<sp/>the<sp/>DCT<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outHeight<sp/>=<sp/>(buf[7]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>buf[8];</highlight></codeline>
<codeline lineno="6623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outWidth<sp/>=<sp/>(buf[9]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>buf[10];</highlight></codeline>
<codeline lineno="6624"><highlight class="normal"></highlight></codeline>
<codeline lineno="6625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6626"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;G&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6628"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GIF:<sp/>first<sp/>three<sp/>bytes<sp/>say<sp/>&quot;GIF&quot;,<sp/>next<sp/>three<sp/>give<sp/>version<sp/>number.<sp/>Then<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outWidth<sp/>=<sp/>buf[6]<sp/>+<sp/>(buf[7]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="6631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outHeight<sp/>=<sp/>buf[8]<sp/>+<sp/>(buf[9]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="6632"><highlight class="normal"></highlight></codeline>
<codeline lineno="6633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf[0]<sp/>==<sp/>0x89<sp/>&amp;&amp;<sp/>buf[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;N&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[3]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;G&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[4]<sp/>==<sp/>0x0D<sp/>&amp;&amp;<sp/>buf[5]<sp/>==<sp/>0x0A<sp/>&amp;&amp;<sp/>buf[6]<sp/>==<sp/>0x1A<sp/>&amp;&amp;<sp/>buf[7]<sp/>==<sp/>0x0A<sp/>&amp;&amp;<sp/>buf[12]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[13]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;H&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[14]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[15]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6636"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//PNG:<sp/>the<sp/>first<sp/>frame<sp/>is<sp/>by<sp/>definition<sp/>an<sp/>IHDR<sp/>frame,<sp/>which<sp/>gives<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outWidth<sp/>=<sp/>(buf[16]<sp/>&lt;&lt;<sp/>24)<sp/>+<sp/>(buf[17]<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>(buf[18]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>(buf[19]<sp/>&lt;&lt;<sp/>0);</highlight></codeline>
<codeline lineno="6639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outHeight<sp/>=<sp/>(buf[20]<sp/>&lt;&lt;<sp/>24)<sp/>+<sp/>(buf[21]<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>(buf[22]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>(buf[23]<sp/>&lt;&lt;<sp/>0);</highlight></codeline>
<codeline lineno="6640"><highlight class="normal"></highlight></codeline>
<codeline lineno="6641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6642"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6644"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outWidth<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="6646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outHeight<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="6647"><highlight class="normal"></highlight></codeline>
<codeline lineno="6648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6649"><highlight class="normal"></highlight></codeline>
<codeline lineno="6650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetImageSize()<sp/>file<sp/>is<sp/>not<sp/>an<sp/>image<sp/>format.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6653"><highlight class="normal"></highlight></codeline>
<codeline lineno="6682"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1af903d70401f7dea9c59d980a56846028" kindref="member">Ace::GetImageSizeW</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>filePath,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>outWidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>outHeight)</highlight></codeline>
<codeline lineno="6683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6684"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>file<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="6687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[24];</highlight></codeline>
<codeline lineno="6688"><highlight class="normal"></highlight></codeline>
<codeline lineno="6689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_wfopen_s(&amp;file,<sp/>filePath,<sp/>L</highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6690"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetImageSize()<sp/>Cannot<sp/>open<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6693"><highlight class="normal"></highlight></codeline>
<codeline lineno="6694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fseek(file,<sp/>0,<sp/>SEEK_END)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6695"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetImageSize()<sp/>fseek()<sp/>failed<sp/>to<sp/>read<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6699"><highlight class="normal"></highlight></codeline>
<codeline lineno="6700"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>ftell(file);</highlight></codeline>
<codeline lineno="6701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>24)</highlight></codeline>
<codeline lineno="6702"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetImageSize()<sp/>File<sp/>not<sp/>large<sp/>enough.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6706"><highlight class="normal"></highlight></codeline>
<codeline lineno="6707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fseek(file,<sp/>0,<sp/>SEEK_SET)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6708"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetImageSize()<sp/>fseek()<sp/>failed<sp/>to<sp/>read<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6712"><highlight class="normal"></highlight></codeline>
<codeline lineno="6713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Strategy:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reading<sp/>GIF<sp/>dimensions<sp/>requires<sp/>the<sp/>first<sp/>10<sp/>bytes<sp/>of<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reading<sp/>PNG<sp/>dimensions<sp/>requires<sp/>the<sp/>first<sp/>24<sp/>bytes<sp/>of<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reading<sp/>JPEG<sp/>dimensions<sp/>requires<sp/>scanning<sp/>through<sp/>jpeg<sp/>chunks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>all<sp/>formats,<sp/>the<sp/>file<sp/>is<sp/>at<sp/>least<sp/>24<sp/>bytes<sp/>big,<sp/>so<sp/>we&apos;ll<sp/>read<sp/>that<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(buf,<sp/>1,<sp/>24,<sp/>file)<sp/>!=<sp/>24)</highlight></codeline>
<codeline lineno="6719"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetImageSize()<sp/>fread()<sp/>failed<sp/>to<sp/>read<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6722"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6723"><highlight class="normal"></highlight></codeline>
<codeline lineno="6724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>JPEGs,<sp/>we<sp/>need<sp/>to<sp/>read<sp/>the<sp/>first<sp/>12<sp/>bytes<sp/>of<sp/>each<sp/>chunk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ll<sp/>read<sp/>those<sp/>12<sp/>bytes<sp/>at<sp/>buf+2...buf+14,<sp/>i.e.<sp/>overwriting<sp/>the<sp/>existing<sp/>buf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf[0]<sp/>==<sp/>0xFF<sp/>&amp;&amp;<sp/>buf[1]<sp/>==<sp/>0xD8<sp/>&amp;&amp;<sp/>buf[2]<sp/>==<sp/>0xFF<sp/>&amp;&amp;<sp/>buf[3]<sp/>==<sp/>0xE0<sp/>&amp;&amp;<sp/>buf[6]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;J&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[7]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[8]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[9]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6727"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(buf[2]<sp/>==<sp/>0xFF)</highlight></codeline>
<codeline lineno="6729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf[3]<sp/>==<sp/>0xC0<sp/>||<sp/>buf[3]<sp/>==<sp/>0xC1<sp/>||<sp/>buf[3]<sp/>==<sp/>0xC2<sp/>||<sp/>buf[3]<sp/>==<sp/>0xC3<sp/>||<sp/>buf[3]<sp/>==<sp/>0xC9<sp/>||<sp/>buf[3]<sp/>==<sp/>0xCA<sp/>||<sp/>buf[3]<sp/>==<sp/>0xCB)</highlight></codeline>
<codeline lineno="6731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6735"><highlight class="normal"></highlight></codeline>
<codeline lineno="6736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>+=<sp/>2<sp/>+<sp/>(buf[4]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>buf[5];</highlight></codeline>
<codeline lineno="6737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>+<sp/>12<sp/>&gt;<sp/>len)</highlight></codeline>
<codeline lineno="6738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fseek(file,<sp/>pos,<sp/>SEEK_SET)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetImageSize()<sp/>fseek()<sp/>failed<sp/>to<sp/>read<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6747"><highlight class="normal"></highlight></codeline>
<codeline lineno="6748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(buf<sp/>+<sp/>2,<sp/>1,<sp/>12,<sp/>file)<sp/>!=<sp/>12)</highlight></codeline>
<codeline lineno="6749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetImageSize()<sp/>fread()<sp/>failed<sp/>to<sp/>read<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6755"><highlight class="normal"></highlight></codeline>
<codeline lineno="6756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Some<sp/>images<sp/>contain<sp/>Exif<sp/>data<sp/>so<sp/>check<sp/>for<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((buf[0]<sp/>==<sp/>0xFF<sp/>&amp;&amp;<sp/>buf[1]<sp/>==<sp/>0xD8<sp/>&amp;&amp;<sp/>buf[2]<sp/>==<sp/>0xFF<sp/>&amp;&amp;<sp/>buf[3]<sp/>==<sp/>0xE0<sp/>&amp;&amp;<sp/>buf[6]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;J&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[7]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[8]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[9]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="6758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(buf[0]<sp/>==<sp/>0xFF<sp/>&amp;&amp;<sp/>buf[1]<sp/>==<sp/>0xD8<sp/>&amp;&amp;<sp/>buf[2]<sp/>==<sp/>0xFF<sp/>&amp;&amp;<sp/>buf[3]<sp/>==<sp/>0xE1<sp/>&amp;&amp;<sp/>buf[6]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[7]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[8]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[9]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="6759"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(buf[2]<sp/>==<sp/>0xFF)</highlight></codeline>
<codeline lineno="6761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf[3]<sp/>==<sp/>0xC0<sp/>||<sp/>buf[3]<sp/>==<sp/>0xC1<sp/>||<sp/>buf[3]<sp/>==<sp/>0xC2<sp/>||<sp/>buf[3]<sp/>==<sp/>0xC3<sp/>||<sp/>buf[3]<sp/>==<sp/>0xC9<sp/>||<sp/>buf[3]<sp/>==<sp/>0xCA<sp/>||<sp/>buf[3]<sp/>==<sp/>0xCB)</highlight></codeline>
<codeline lineno="6763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6767"><highlight class="normal"></highlight></codeline>
<codeline lineno="6768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>+=<sp/>2<sp/>+<sp/>(buf[4]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>buf[5];</highlight></codeline>
<codeline lineno="6769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>+<sp/>12<sp/>&gt;<sp/>len)</highlight></codeline>
<codeline lineno="6770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fseek(file,<sp/>pos,<sp/>SEEK_SET)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetImageSize()<sp/>fseek()<sp/>failed<sp/>to<sp/>read<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6779"><highlight class="normal"></highlight></codeline>
<codeline lineno="6780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(buf<sp/>+<sp/>2,<sp/>1,<sp/>12,<sp/>file)<sp/>!=<sp/>12)</highlight></codeline>
<codeline lineno="6781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetImageSize()<sp/>fread()<sp/>failed<sp/>to<sp/>read<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6786"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6787"><highlight class="normal"></highlight></codeline>
<codeline lineno="6788"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6789"><highlight class="normal"></highlight></codeline>
<codeline lineno="6790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf[0]<sp/>==<sp/>0xFF<sp/>&amp;&amp;<sp/>buf[1]<sp/>==<sp/>0xD8<sp/>&amp;&amp;<sp/>buf[2]<sp/>==<sp/>0xFF)</highlight></codeline>
<codeline lineno="6791"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//JPEG:<sp/>(first<sp/>two<sp/>bytes<sp/>of<sp/>buf<sp/>are<sp/>first<sp/>two<sp/>bytes<sp/>of<sp/>the<sp/>jpeg<sp/>file;<sp/>rest<sp/>of<sp/>buf<sp/>is<sp/>the<sp/>DCT<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outHeight<sp/>=<sp/>(buf[7]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>buf[8];</highlight></codeline>
<codeline lineno="6794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outWidth<sp/>=<sp/>(buf[9]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>buf[10];</highlight></codeline>
<codeline lineno="6795"><highlight class="normal"></highlight></codeline>
<codeline lineno="6796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;G&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6799"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GIF:<sp/>first<sp/>three<sp/>bytes<sp/>say<sp/>&quot;GIF&quot;,<sp/>next<sp/>three<sp/>give<sp/>version<sp/>number.<sp/>Then<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outWidth<sp/>=<sp/>buf[6]<sp/>+<sp/>(buf[7]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="6802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outHeight<sp/>=<sp/>buf[8]<sp/>+<sp/>(buf[9]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="6803"><highlight class="normal"></highlight></codeline>
<codeline lineno="6804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf[0]<sp/>==<sp/>0x89<sp/>&amp;&amp;<sp/>buf[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;N&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[3]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;G&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[4]<sp/>==<sp/>0x0D<sp/>&amp;&amp;<sp/>buf[5]<sp/>==<sp/>0x0A<sp/>&amp;&amp;<sp/>buf[6]<sp/>==<sp/>0x1A<sp/>&amp;&amp;<sp/>buf[7]<sp/>==<sp/>0x0A<sp/>&amp;&amp;<sp/>buf[12]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[13]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;H&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[14]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>buf[15]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6807"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//PNG:<sp/>the<sp/>first<sp/>frame<sp/>is<sp/>by<sp/>definition<sp/>an<sp/>IHDR<sp/>frame,<sp/>which<sp/>gives<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outWidth<sp/>=<sp/>(buf[16]<sp/>&lt;&lt;<sp/>24)<sp/>+<sp/>(buf[17]<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>(buf[18]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>(buf[19]<sp/>&lt;&lt;<sp/>0);</highlight></codeline>
<codeline lineno="6810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outHeight<sp/>=<sp/>(buf[20]<sp/>&lt;&lt;<sp/>24)<sp/>+<sp/>(buf[21]<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>(buf[22]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>(buf[23]<sp/>&lt;&lt;<sp/>0);</highlight></codeline>
<codeline lineno="6811"><highlight class="normal"></highlight></codeline>
<codeline lineno="6812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6813"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6815"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outWidth<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="6817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outHeight<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="6818"><highlight class="normal"></highlight></codeline>
<codeline lineno="6819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="6820"><highlight class="normal"></highlight></codeline>
<codeline lineno="6821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>GetImageSize()<sp/>file<sp/>is<sp/>not<sp/>an<sp/>image<sp/>format.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6824"><highlight class="normal"></highlight></codeline>
<codeline lineno="6853"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a913e668440d1c00f00d340519bf95a7c" kindref="member">Ace::Hypotenuse</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="6854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6856"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="6858"><highlight class="normal"></highlight></codeline>
<codeline lineno="6859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="6861"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="6863"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6864"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6865"><highlight class="normal"></highlight></codeline>
<codeline lineno="6866"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>hypot(x,<sp/>y);</highlight></codeline>
<codeline lineno="6867"><highlight class="normal"></highlight></codeline>
<codeline lineno="6868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>hypot().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6870"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Hypotenuse()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="6873"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6875"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Hypotenuse()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="6878"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6879"><highlight class="normal"></highlight></codeline>
<codeline lineno="6880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6882"><highlight class="normal"></highlight></codeline>
<codeline lineno="6911"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a913e668440d1c00f00d340519bf95a7c" kindref="member">Ace::Hypotenuse</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="6912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6914"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="6916"><highlight class="normal"></highlight></codeline>
<codeline lineno="6917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="6919"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="6921"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6922"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6923"><highlight class="normal"></highlight></codeline>
<codeline lineno="6924"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>hypot(x,<sp/>y);</highlight></codeline>
<codeline lineno="6925"><highlight class="normal"></highlight></codeline>
<codeline lineno="6926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>hypot().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6928"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Hypotenuse()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="6931"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6933"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Hypotenuse()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="6936"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6937"><highlight class="normal"></highlight></codeline>
<codeline lineno="6938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6940"><highlight class="normal"></highlight></codeline>
<codeline lineno="6969"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a913e668440d1c00f00d340519bf95a7c" kindref="member">Ace::Hypotenuse</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="6970"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6972"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="6974"><highlight class="normal"></highlight></codeline>
<codeline lineno="6975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="6977"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="6979"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6980"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6981"><highlight class="normal"></highlight></codeline>
<codeline lineno="6982"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>hypot(x,<sp/>y);</highlight></codeline>
<codeline lineno="6983"><highlight class="normal"></highlight></codeline>
<codeline lineno="6984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>hypot().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6986"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Hypotenuse()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6989"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6991"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Hypotenuse()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6994"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6995"><highlight class="normal"></highlight></codeline>
<codeline lineno="6996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6997"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6998"><highlight class="normal"></highlight></codeline>
<codeline lineno="7028"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>charToLookFor)</highlight></codeline>
<codeline lineno="7029"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToSearchLen;</highlight></codeline>
<codeline lineno="7031"><highlight class="normal"></highlight></codeline>
<codeline lineno="7032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="7033"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Record<sp/>the<sp/>length<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>keep<sp/>calling<sp/>strlen().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearchLen<sp/>=<sp/>strlen(strToSearch);</highlight></codeline>
<codeline lineno="7036"><highlight class="normal"></highlight></codeline>
<codeline lineno="7037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Search<sp/>the<sp/>entire<sp/>string<sp/>for<sp/>an<sp/>occurrence<sp/>of<sp/>strToLookFor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;=<sp/>strToSearchLen;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="7039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>current<sp/>character<sp/>in<sp/>the<sp/>string<sp/>is<sp/>equal<sp/>to<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//what<sp/>we<sp/>are<sp/>looking<sp/>for,<sp/>then<sp/>we<sp/>found<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch[currIndex]<sp/>==<sp/>charToLookFor)</highlight></codeline>
<codeline lineno="7043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>currIndex;</highlight></codeline>
<codeline lineno="7045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7047"><highlight class="normal"></highlight></codeline>
<codeline lineno="7048"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7050"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>IndexOf()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7053"><highlight class="normal"></highlight></codeline>
<codeline lineno="7054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Couldn&apos;t<sp/>find<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="7056"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7057"><highlight class="normal"></highlight></codeline>
<codeline lineno="7087"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>charToLookFor)</highlight></codeline>
<codeline lineno="7088"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToSearchLen;</highlight></codeline>
<codeline lineno="7090"><highlight class="normal"></highlight></codeline>
<codeline lineno="7091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="7092"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Record<sp/>the<sp/>length<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>keep<sp/>calling<sp/>wcslen().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearchLen<sp/>=<sp/>wcslen(strToSearch);</highlight></codeline>
<codeline lineno="7095"><highlight class="normal"></highlight></codeline>
<codeline lineno="7096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Search<sp/>the<sp/>entire<sp/>string<sp/>for<sp/>an<sp/>occurrence<sp/>of<sp/>strToLookFor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;=<sp/>strToSearchLen;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="7098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>current<sp/>character<sp/>in<sp/>the<sp/>string<sp/>is<sp/>equal<sp/>to<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//what<sp/>we<sp/>are<sp/>looking<sp/>for,<sp/>then<sp/>we<sp/>found<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch[currIndex]<sp/>==<sp/>charToLookFor)</highlight></codeline>
<codeline lineno="7102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>currIndex;</highlight></codeline>
<codeline lineno="7104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7106"><highlight class="normal"></highlight></codeline>
<codeline lineno="7107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>IndexOf()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7112"><highlight class="normal"></highlight></codeline>
<codeline lineno="7113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Couldn&apos;t<sp/>find<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="7115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7116"><highlight class="normal"></highlight></codeline>
<codeline lineno="7146"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToLookFor)</highlight></codeline>
<codeline lineno="7147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToLookForLen;</highlight></codeline>
<codeline lineno="7149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToSearchLen;</highlight></codeline>
<codeline lineno="7150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>currSubstring;</highlight></codeline>
<codeline lineno="7151"><highlight class="normal"></highlight></codeline>
<codeline lineno="7152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToLookFor<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="7153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Record<sp/>the<sp/>lengths<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>keep<sp/>calling<sp/>strlen().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToLookForLen<sp/>=<sp/>strlen(strToLookFor);</highlight></codeline>
<codeline lineno="7156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearchLen<sp/>=<sp/>strlen(strToSearch);</highlight></codeline>
<codeline lineno="7157"><highlight class="normal"></highlight></codeline>
<codeline lineno="7158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>item<sp/>to<sp/>look<sp/>for<sp/>must<sp/>be<sp/>smaller<sp/>then<sp/>the<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToLookForLen<sp/>&lt;<sp/>strToSearchLen)</highlight></codeline>
<codeline lineno="7160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Search<sp/>the<sp/>entire<sp/>string<sp/>for<sp/>an<sp/>occurrence<sp/>of<sp/>strToLookFor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;=<sp/>(strToSearchLen<sp/>-<sp/>strToLookForLen);<sp/>currIndex++)</highlight></codeline>
<codeline lineno="7163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currSubstring<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToSearch,<sp/>currIndex,<sp/>currIndex<sp/>+<sp/>strToLookForLen);</highlight></codeline>
<codeline lineno="7165"><highlight class="normal"></highlight></codeline>
<codeline lineno="7166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>to<sp/>see<sp/>if<sp/>currSubstring<sp/>is<sp/>equal<sp/>to<sp/>what<sp/>we<sp/>are<sp/>looking<sp/>for.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(currSubstring,<sp/>strToLookFor)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="7168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Cleanup<sp/>before<sp/>returning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(currSubstring);</highlight></codeline>
<codeline lineno="7171"><highlight class="normal"></highlight></codeline>
<codeline lineno="7172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Found<sp/>it!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>currIndex;</highlight></codeline>
<codeline lineno="7174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7175"><highlight class="normal"></highlight></codeline>
<codeline lineno="7176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Cleanup<sp/>the<sp/>currSubstring<sp/>since<sp/>SubString<sp/>allocates<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(currSubstring);</highlight></codeline>
<codeline lineno="7178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>IndexOf()<sp/>strToLookFor<sp/>must<sp/>be<sp/>smaller<sp/>then<sp/>strToSearch.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>IndexOf()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7189"><highlight class="normal"></highlight></codeline>
<codeline lineno="7190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Couldn&apos;t<sp/>find<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="7192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7193"><highlight class="normal"></highlight></codeline>
<codeline lineno="7223"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToLookFor)</highlight></codeline>
<codeline lineno="7224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToLookForLen;</highlight></codeline>
<codeline lineno="7226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToSearchLen;</highlight></codeline>
<codeline lineno="7227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>currSubstring;</highlight></codeline>
<codeline lineno="7228"><highlight class="normal"></highlight></codeline>
<codeline lineno="7229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToLookFor<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="7230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Record<sp/>the<sp/>lengths<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>keep<sp/>calling<sp/>strlen().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToLookForLen<sp/>=<sp/>wcslen(strToLookFor);</highlight></codeline>
<codeline lineno="7233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearchLen<sp/>=<sp/>wcslen(strToSearch);</highlight></codeline>
<codeline lineno="7234"><highlight class="normal"></highlight></codeline>
<codeline lineno="7235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>item<sp/>to<sp/>look<sp/>for<sp/>must<sp/>be<sp/>smaller<sp/>then<sp/>the<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToLookForLen<sp/>&lt;<sp/>strToSearchLen)</highlight></codeline>
<codeline lineno="7237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Search<sp/>the<sp/>entire<sp/>string<sp/>for<sp/>an<sp/>occurrence<sp/>of<sp/>strToLookFor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;=<sp/>(strToSearchLen<sp/>-<sp/>strToLookForLen);<sp/>currIndex++)</highlight></codeline>
<codeline lineno="7240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currSubstring<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToSearch,<sp/>currIndex,<sp/>currIndex<sp/>+<sp/>strToLookForLen);</highlight></codeline>
<codeline lineno="7242"><highlight class="normal"></highlight></codeline>
<codeline lineno="7243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>to<sp/>see<sp/>if<sp/>currSubstring<sp/>is<sp/>equal<sp/>to<sp/>what<sp/>we<sp/>are<sp/>looking<sp/>for.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wcscmp(currSubstring,<sp/>strToLookFor)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="7245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Cleanup<sp/>before<sp/>returning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(currSubstring);</highlight></codeline>
<codeline lineno="7248"><highlight class="normal"></highlight></codeline>
<codeline lineno="7249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Found<sp/>it!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>currIndex;</highlight></codeline>
<codeline lineno="7251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7252"><highlight class="normal"></highlight></codeline>
<codeline lineno="7253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Cleanup<sp/>the<sp/>currSubstring<sp/>since<sp/>SubString<sp/>allocates<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(currSubstring);</highlight></codeline>
<codeline lineno="7255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>IndexOf()<sp/>strToLookFor<sp/>must<sp/>be<sp/>smaller<sp/>then<sp/>strToSearch.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>IndexOf()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7266"><highlight class="normal"></highlight></codeline>
<codeline lineno="7267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Couldn&apos;t<sp/>find<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="7269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7270"><highlight class="normal"></highlight></codeline>
<codeline lineno="7299"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a273501ca36610e1631ff37b2dd93cddf" kindref="member">Ace::IndexOfFirstLetter</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToSearch)</highlight></codeline>
<codeline lineno="7300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="7302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>strlen(strToSearch);<sp/>currIndex++)</highlight></codeline>
<codeline lineno="7304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1aebb4f615642b84d54134e02e3fc8c083" kindref="member">Ace::IsAlphabetic</ref>(strToSearch[currIndex])<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>currIndex;</highlight></codeline>
<codeline lineno="7308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>IndexOfFirstLetter()<sp/>strToSearch<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7315"><highlight class="normal"></highlight></codeline>
<codeline lineno="7316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="7317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7318"><highlight class="normal"></highlight></codeline>
<codeline lineno="7347"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a273501ca36610e1631ff37b2dd93cddf" kindref="member">Ace::IndexOfFirstLetter</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToSearch)</highlight></codeline>
<codeline lineno="7348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="7350"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>wcslen(strToSearch);<sp/>currIndex++)</highlight></codeline>
<codeline lineno="7352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1aebb4f615642b84d54134e02e3fc8c083" kindref="member">Ace::IsAlphabetic</ref>(strToSearch[currIndex])<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>currIndex;</highlight></codeline>
<codeline lineno="7356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>IndexOfFirstLetter()<sp/>strToSearch<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7363"><highlight class="normal"></highlight></codeline>
<codeline lineno="7364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="7365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7366"><highlight class="normal"></highlight></codeline>
<codeline lineno="7395"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a6d107bd58a740eb1fbdf8c39b9269b24" kindref="member">Ace::IndexOfIgnoreCase</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>charToLookFor)</highlight></codeline>
<codeline lineno="7396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>normStrToSearch;</highlight></codeline>
<codeline lineno="7398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>normCharToLookFor;</highlight></codeline>
<codeline lineno="7399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="7400"><highlight class="normal"></highlight></codeline>
<codeline lineno="7401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="7402"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Normalize<sp/>the<sp/>strings<sp/>so<sp/>all<sp/>characters<sp/>are<sp/>the<sp/>same<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normStrToSearch<sp/>=<sp/><ref refid="class_ace_1a658e886d648a545b26d684545ad81146" kindref="member">Ace::ConvertToUpperCase</ref>(strToSearch);</highlight></codeline>
<codeline lineno="7405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normCharToLookFor<sp/>=<sp/><ref refid="class_ace_1a658e886d648a545b26d684545ad81146" kindref="member">Ace::ConvertToUpperCase</ref>(charToLookFor);</highlight></codeline>
<codeline lineno="7406"><highlight class="normal"></highlight></codeline>
<codeline lineno="7407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(normStrToSearch,<sp/>normCharToLookFor);</highlight></codeline>
<codeline lineno="7408"><highlight class="normal"></highlight></codeline>
<codeline lineno="7409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(normStrToSearch);</highlight></codeline>
<codeline lineno="7410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>IndexOfIgnoreCase()<sp/>strToSearch<sp/>cannot<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7415"><highlight class="normal"></highlight></codeline>
<codeline lineno="7416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="7417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7418"><highlight class="normal"></highlight></codeline>
<codeline lineno="7447"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a6d107bd58a740eb1fbdf8c39b9269b24" kindref="member">Ace::IndexOfIgnoreCase</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>charToLookFor)</highlight></codeline>
<codeline lineno="7448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>normStrToSearch;</highlight></codeline>
<codeline lineno="7450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>normCharToLookFor;</highlight></codeline>
<codeline lineno="7451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="7452"><highlight class="normal"></highlight></codeline>
<codeline lineno="7453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="7454"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Normalize<sp/>the<sp/>strings<sp/>so<sp/>all<sp/>characters<sp/>are<sp/>the<sp/>same<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normStrToSearch<sp/>=<sp/><ref refid="class_ace_1a658e886d648a545b26d684545ad81146" kindref="member">Ace::ConvertToUpperCase</ref>(strToSearch);</highlight></codeline>
<codeline lineno="7457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normCharToLookFor<sp/>=<sp/><ref refid="class_ace_1a658e886d648a545b26d684545ad81146" kindref="member">Ace::ConvertToUpperCase</ref>(charToLookFor);</highlight></codeline>
<codeline lineno="7458"><highlight class="normal"></highlight></codeline>
<codeline lineno="7459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(normStrToSearch,<sp/>normCharToLookFor);</highlight></codeline>
<codeline lineno="7460"><highlight class="normal"></highlight></codeline>
<codeline lineno="7461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(normStrToSearch);</highlight></codeline>
<codeline lineno="7462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7464"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>IndexOfIgnoreCase()<sp/>strToSearch<sp/>cannot<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7467"><highlight class="normal"></highlight></codeline>
<codeline lineno="7468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="7469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7470"><highlight class="normal"></highlight></codeline>
<codeline lineno="7499"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a6d107bd58a740eb1fbdf8c39b9269b24" kindref="member">Ace::IndexOfIgnoreCase</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToLookFor)</highlight></codeline>
<codeline lineno="7500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>normStrToSearch;</highlight></codeline>
<codeline lineno="7502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>normStrToLookFor;</highlight></codeline>
<codeline lineno="7503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="7504"><highlight class="normal"></highlight></codeline>
<codeline lineno="7505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToLookFor<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="7506"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Normalize<sp/>the<sp/>strings<sp/>so<sp/>all<sp/>characters<sp/>are<sp/>the<sp/>same<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normStrToSearch<sp/>=<sp/><ref refid="class_ace_1a658e886d648a545b26d684545ad81146" kindref="member">Ace::ConvertToUpperCase</ref>(strToSearch);</highlight></codeline>
<codeline lineno="7509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normStrToLookFor<sp/>=<sp/><ref refid="class_ace_1a658e886d648a545b26d684545ad81146" kindref="member">Ace::ConvertToUpperCase</ref>(strToLookFor);</highlight></codeline>
<codeline lineno="7510"><highlight class="normal"></highlight></codeline>
<codeline lineno="7511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(normStrToSearch,<sp/>normStrToLookFor);</highlight></codeline>
<codeline lineno="7512"><highlight class="normal"></highlight></codeline>
<codeline lineno="7513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(normStrToSearch);</highlight></codeline>
<codeline lineno="7514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(normStrToLookFor);</highlight></codeline>
<codeline lineno="7515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7517"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>IndexOfIgnoreCase()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7520"><highlight class="normal"></highlight></codeline>
<codeline lineno="7521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="7522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7523"><highlight class="normal"></highlight></codeline>
<codeline lineno="7552"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a6d107bd58a740eb1fbdf8c39b9269b24" kindref="member">Ace::IndexOfIgnoreCase</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToLookFor)</highlight></codeline>
<codeline lineno="7553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>normStrToSearch;</highlight></codeline>
<codeline lineno="7555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>normStrToLookFor;</highlight></codeline>
<codeline lineno="7556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="7557"><highlight class="normal"></highlight></codeline>
<codeline lineno="7558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToLookFor<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="7559"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Normalize<sp/>the<sp/>strings<sp/>so<sp/>all<sp/>characters<sp/>are<sp/>the<sp/>same<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normStrToSearch<sp/>=<sp/><ref refid="class_ace_1a658e886d648a545b26d684545ad81146" kindref="member">Ace::ConvertToUpperCase</ref>(strToSearch);</highlight></codeline>
<codeline lineno="7562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normStrToLookFor<sp/>=<sp/><ref refid="class_ace_1a658e886d648a545b26d684545ad81146" kindref="member">Ace::ConvertToUpperCase</ref>(strToLookFor);</highlight></codeline>
<codeline lineno="7563"><highlight class="normal"></highlight></codeline>
<codeline lineno="7564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(normStrToSearch,<sp/>normStrToLookFor);</highlight></codeline>
<codeline lineno="7565"><highlight class="normal"></highlight></codeline>
<codeline lineno="7566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(normStrToSearch);</highlight></codeline>
<codeline lineno="7567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(normStrToLookFor);</highlight></codeline>
<codeline lineno="7568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7570"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>IndexOfIgnoreCase()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7573"><highlight class="normal"></highlight></codeline>
<codeline lineno="7574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="7575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7576"><highlight class="normal"></highlight></codeline>
<codeline lineno="7607"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a488c9ea590fdf14919ad90ee1dc377ad" kindref="member">Ace::InsertString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToReceive,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToInsert,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startIndex)</highlight></codeline>
<codeline lineno="7608"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>firstPart<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>lastPart<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>finalString<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7612"><highlight class="normal"></highlight></codeline>
<codeline lineno="7613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToReceive<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToInsert<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>startIndex<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="7614"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Separate<sp/>the<sp/>two<sp/>halves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstPart<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToReceive,<sp/>0,<sp/>startIndex);</highlight></codeline>
<codeline lineno="7617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastPart<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToReceive,<sp/>startIndex);</highlight></codeline>
<codeline lineno="7618"><highlight class="normal"></highlight></codeline>
<codeline lineno="7619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Sandwich<sp/>the<sp/>strToInsert<sp/>between<sp/>the<sp/>two<sp/>halves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalString<sp/>=<sp/><ref refid="class_ace_1a54627c41eea2730839d98f33542a5492" kindref="member">Ace::Concatenate</ref>(3,<sp/>firstPart,<sp/>strToInsert,<sp/>lastPart);</highlight></codeline>
<codeline lineno="7621"><highlight class="normal"></highlight></codeline>
<codeline lineno="7622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(firstPart);</highlight></codeline>
<codeline lineno="7623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(lastPart);</highlight></codeline>
<codeline lineno="7624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7626"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>InsertString()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7629"><highlight class="normal"></highlight></codeline>
<codeline lineno="7630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Return<sp/>the<sp/>sandwich.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>finalString;</highlight></codeline>
<codeline lineno="7632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7633"><highlight class="normal"></highlight></codeline>
<codeline lineno="7664"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a488c9ea590fdf14919ad90ee1dc377ad" kindref="member">Ace::InsertString</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToReceive,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToInsert,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startIndex)</highlight></codeline>
<codeline lineno="7665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>firstPart<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>lastPart<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>finalString<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7669"><highlight class="normal"></highlight></codeline>
<codeline lineno="7670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToReceive<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToInsert<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>startIndex<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="7671"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Separate<sp/>the<sp/>two<sp/>halves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstPart<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToReceive,<sp/>0,<sp/>startIndex);</highlight></codeline>
<codeline lineno="7674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastPart<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToReceive,<sp/>startIndex);</highlight></codeline>
<codeline lineno="7675"><highlight class="normal"></highlight></codeline>
<codeline lineno="7676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Sandwich<sp/>the<sp/>strToInsert<sp/>between<sp/>the<sp/>two<sp/>halves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finalString<sp/>=<sp/><ref refid="class_ace_1af0cd7dce3668bd1ee3e9f86b687caa5c" kindref="member">Ace::ConcatenateW</ref>(3,<sp/>firstPart,<sp/>strToInsert,<sp/>lastPart);</highlight></codeline>
<codeline lineno="7678"><highlight class="normal"></highlight></codeline>
<codeline lineno="7679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(firstPart);</highlight></codeline>
<codeline lineno="7680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(lastPart);</highlight></codeline>
<codeline lineno="7681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7683"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>InsertString()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7685"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7686"><highlight class="normal"></highlight></codeline>
<codeline lineno="7687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Return<sp/>the<sp/>sandwich.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>finalString;</highlight></codeline>
<codeline lineno="7689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7690"><highlight class="normal"></highlight></codeline>
<codeline lineno="7717"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aebb4f615642b84d54134e02e3fc8c083" kindref="member">Ace::IsAlphabetic</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>character)</highlight></codeline>
<codeline lineno="7718"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>asciiNum<sp/>=<sp/>(int)character;</highlight></codeline>
<codeline lineno="7720"><highlight class="normal"></highlight></codeline>
<codeline lineno="7721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ASCII<sp/>chart<sp/>has<sp/>uppercase<sp/>letters<sp/>A-Z<sp/>between<sp/>numbers<sp/>65-90,<sp/>lowercase<sp/>between<sp/>97-122.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//http://www.asciitable.com/index/asciifull.gif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(asciiNum<sp/>&gt;=<sp/>97<sp/>&amp;&amp;<sp/>asciiNum<sp/>&lt;=<sp/>122)</highlight></codeline>
<codeline lineno="7724"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(asciiNum<sp/>&gt;=<sp/>65<sp/>&amp;&amp;<sp/>asciiNum<sp/>&lt;=<sp/>90)</highlight></codeline>
<codeline lineno="7728"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7732"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7736"><highlight class="normal"></highlight></codeline>
<codeline lineno="7760"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aebb4f615642b84d54134e02e3fc8c083" kindref="member">Ace::IsAlphabetic</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>character)</highlight></codeline>
<codeline lineno="7761"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Simply<sp/>assume<sp/>if<sp/>its<sp/>not<sp/>a<sp/>digit<sp/>then<sp/>its<sp/>Alphabetic.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ab5bdc2fab29cf22bd6c06e62a5eab593" kindref="member">Ace::IsDigit</ref>(character)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7765"><highlight class="normal"></highlight></codeline>
<codeline lineno="7792"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ab5bdc2fab29cf22bd6c06e62a5eab593" kindref="member">Ace::IsDigit</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>character)</highlight></codeline>
<codeline lineno="7793"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>asciiNum<sp/>=<sp/>(int)character;</highlight></codeline>
<codeline lineno="7795"><highlight class="normal"></highlight></codeline>
<codeline lineno="7796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ASCII<sp/>chart<sp/>has<sp/>digits<sp/>0-9<sp/>between<sp/>numbers<sp/>48-57.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//http://www.asciitable.com/index/asciifull.gif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(asciiNum<sp/>&gt;=<sp/>48<sp/>&amp;&amp;<sp/>asciiNum<sp/>&lt;=<sp/>57)</highlight></codeline>
<codeline lineno="7799"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7803"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7807"><highlight class="normal"></highlight></codeline>
<codeline lineno="7831"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ab5bdc2fab29cf22bd6c06e62a5eab593" kindref="member">Ace::IsDigit</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>character)</highlight></codeline>
<codeline lineno="7832"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iswdigit(character);</highlight></codeline>
<codeline lineno="7834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7835"><highlight class="normal"></highlight></codeline>
<codeline lineno="7861"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a2f5cb4c89dff665ea2c0e1fd16fefd90" kindref="member">Ace::IsEmpty</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="7862"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="7864"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>strlen(str);<sp/>currIndex++)</highlight></codeline>
<codeline lineno="7866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>this<sp/>character<sp/>is<sp/>not<sp/>whitespace,<sp/>return<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1a66a594470f47320362a57ae4a4a556aa" kindref="member">Ace::IsWhitespace</ref>(str[currIndex])<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7873"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7875"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>IsEmpty()<sp/>str<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7877"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7878"><highlight class="normal"></highlight></codeline>
<codeline lineno="7879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7881"><highlight class="normal"></highlight></codeline>
<codeline lineno="7907"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a2f5cb4c89dff665ea2c0e1fd16fefd90" kindref="member">Ace::IsEmpty</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="7908"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="7910"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>wcslen(str);<sp/>currIndex++)</highlight></codeline>
<codeline lineno="7912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>this<sp/>wide<sp/>character<sp/>is<sp/>not<sp/>whitespace,<sp/>return<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1a66a594470f47320362a57ae4a4a556aa" kindref="member">Ace::IsWhitespace</ref>(str[currIndex])<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7919"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7921"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>IsEmpty()<sp/>str<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7924"><highlight class="normal"></highlight></codeline>
<codeline lineno="7925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7927"><highlight class="normal"></highlight></codeline>
<codeline lineno="7962"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1abf209e3f71042eefd2091b990f0fc6f6" kindref="member">Ace::IsNumber</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="7963"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>currChar<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7965"><highlight class="normal"></highlight></codeline>
<codeline lineno="7966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="7967"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>strlen(str);<sp/>currIndex++)</highlight></codeline>
<codeline lineno="7969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1ab5bdc2fab29cf22bd6c06e62a5eab593" kindref="member">Ace::IsDigit</ref>(str[currIndex])<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7975"><highlight class="normal"></highlight></codeline>
<codeline lineno="7976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7977"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7979"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>IsNumber()<sp/>str<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7981"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7982"><highlight class="normal"></highlight></codeline>
<codeline lineno="7983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7984"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7985"><highlight class="normal"></highlight></codeline>
<codeline lineno="8018"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1abf209e3f71042eefd2091b990f0fc6f6" kindref="member">Ace::IsNumber</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="8019"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>currChar<sp/>=<sp/>L</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8021"><highlight class="normal"></highlight></codeline>
<codeline lineno="8022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="8023"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>wcslen(str);<sp/>currIndex++)</highlight></codeline>
<codeline lineno="8025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1ab5bdc2fab29cf22bd6c06e62a5eab593" kindref="member">Ace::IsDigit</ref>(str[currIndex])<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8031"><highlight class="normal"></highlight></codeline>
<codeline lineno="8032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8033"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8035"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>IsNumber()<sp/>str<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8037"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8038"><highlight class="normal"></highlight></codeline>
<codeline lineno="8039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8041"><highlight class="normal"></highlight></codeline>
<codeline lineno="8074"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a14d72992e536c2a370f5c779cc3b1f5a" kindref="member">Ace::IsPathADevice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path)</highlight></codeline>
<codeline lineno="8075"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>list<sp/>of<sp/>reserved<sp/>names<sp/>comes<sp/>from<sp/>MSDN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>reserved[]<sp/>=</highlight></codeline>
<codeline lineno="8078"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;nul&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;con&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;prn&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;aux&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;com1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;com2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;com3&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="8080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;com4&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;com5&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;com6&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;com7&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;com8&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;com9&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="8081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;lpt1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lpt2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lpt3&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lpt4&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lpt5&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lpt6&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="8082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;lpt7&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lpt8&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lpt9&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8083"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="8084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retVal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>arrLen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(reserved)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*reserved);</highlight></codeline>
<codeline lineno="8086"><highlight class="normal"></highlight></codeline>
<codeline lineno="8087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//First,<sp/>check<sp/>to<sp/>see<sp/>if<sp/>this<sp/>is<sp/>a<sp/>device<sp/>namespace,<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//always<sp/>starts<sp/>with<sp/>\\.\,<sp/>because<sp/>device<sp/>namespaces<sp/>are<sp/>not<sp/>valid<sp/>file<sp/>paths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path<sp/>==<sp/>NULL<sp/>||<sp/>0<sp/>==<sp/>strncmp(path,<sp/></highlight><highlight class="stringliteral">&quot;\\\\.\\&quot;</highlight><highlight class="normal">,<sp/>4))</highlight></codeline>
<codeline lineno="8090"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8092"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8093"><highlight class="normal"></highlight></codeline>
<codeline lineno="8094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Compare<sp/>against<sp/>the<sp/>list<sp/>of<sp/>ancient<sp/>reserved<sp/>names.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>retVal<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>arrLen;<sp/>i++)</highlight></codeline>
<codeline lineno="8096"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Because<sp/>Windows<sp/>uses<sp/>a<sp/>case-insensitive<sp/>file<sp/>system,<sp/>operate<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//a<sp/>lowercase<sp/>version<sp/>of<sp/>the<sp/>given<sp/>filename.<sp/>Note:<sp/>This<sp/>ignores</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//globalization<sp/>issues<sp/>and<sp/>assumes<sp/>ASCII<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_stricmp(path,<sp/>reserved[i])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="8101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8105"><highlight class="normal"></highlight></codeline>
<codeline lineno="8106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="8107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8108"><highlight class="normal"></highlight></codeline>
<codeline lineno="8141"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a14d72992e536c2a370f5c779cc3b1f5a" kindref="member">Ace::IsPathADevice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>path)</highlight></codeline>
<codeline lineno="8142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>list<sp/>of<sp/>reserved<sp/>names<sp/>comes<sp/>from<sp/>MSDN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>reserved[]<sp/>=</highlight></codeline>
<codeline lineno="8145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L</highlight><highlight class="stringliteral">&quot;nul&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;con&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;prn&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;aux&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;com1&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;com2&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;com3&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="8147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L</highlight><highlight class="stringliteral">&quot;com4&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;com5&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;com6&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;com7&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;com8&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;com9&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="8148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L</highlight><highlight class="stringliteral">&quot;lpt1&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;lpt2&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;lpt3&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;lpt4&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;lpt5&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;lpt6&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="8149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L</highlight><highlight class="stringliteral">&quot;lpt7&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;lpt8&quot;</highlight><highlight class="normal">,<sp/>L</highlight><highlight class="stringliteral">&quot;lpt9&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8150"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="8151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retVal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>arrLen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(reserved)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*reserved);</highlight></codeline>
<codeline lineno="8153"><highlight class="normal"></highlight></codeline>
<codeline lineno="8154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//First,<sp/>check<sp/>to<sp/>see<sp/>if<sp/>this<sp/>is<sp/>a<sp/>device<sp/>namespace,<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//always<sp/>starts<sp/>with<sp/>\\.\,<sp/>because<sp/>device<sp/>namespaces<sp/>are<sp/>not<sp/>valid<sp/>file<sp/>paths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path<sp/>==<sp/>NULL<sp/>||<sp/>0<sp/>==<sp/>wcsncmp(path,<sp/>L</highlight><highlight class="stringliteral">&quot;\\\\.\\&quot;</highlight><highlight class="normal">,<sp/>4))</highlight></codeline>
<codeline lineno="8157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8160"><highlight class="normal"></highlight></codeline>
<codeline lineno="8161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Compare<sp/>against<sp/>the<sp/>list<sp/>of<sp/>ancient<sp/>reserved<sp/>names.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>retVal<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>arrLen;<sp/>i++)</highlight></codeline>
<codeline lineno="8163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Because<sp/>Windows<sp/>uses<sp/>a<sp/>case-insensitive<sp/>file<sp/>system,<sp/>operate<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//a<sp/>lowercase<sp/>version<sp/>of<sp/>the<sp/>given<sp/>filename.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_wcsicmp(path,<sp/>reserved[i])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="8167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8171"><highlight class="normal"></highlight></codeline>
<codeline lineno="8172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="8173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8174"><highlight class="normal"></highlight></codeline>
<codeline lineno="8199"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a66a594470f47320362a57ae4a4a556aa" kindref="member">Ace::IsWhitespace</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>character)</highlight></codeline>
<codeline lineno="8200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aedf62dbbbeffecb146060a08a0fe07f7" kindref="member">Ace::ConvertIntToBool</ref>(isspace(character));</highlight></codeline>
<codeline lineno="8202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8203"><highlight class="normal"></highlight></codeline>
<codeline lineno="8228"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a66a594470f47320362a57ae4a4a556aa" kindref="member">Ace::IsWhitespace</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>character)</highlight></codeline>
<codeline lineno="8229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aedf62dbbbeffecb146060a08a0fe07f7" kindref="member">Ace::ConvertIntToBool</ref>(iswspace(character));</highlight></codeline>
<codeline lineno="8231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8232"><highlight class="normal"></highlight></codeline>
<codeline lineno="8251"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a8eae4684d32fec1d237da49b0ad57da9" kindref="member">Ace::Largest</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num2)</highlight></codeline>
<codeline lineno="8252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmax(num1,<sp/>num2);</highlight></codeline>
<codeline lineno="8254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8255"><highlight class="normal"></highlight></codeline>
<codeline lineno="8274"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a8eae4684d32fec1d237da49b0ad57da9" kindref="member">Ace::Largest</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num2)</highlight></codeline>
<codeline lineno="8275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmax(num1,<sp/>num2);</highlight></codeline>
<codeline lineno="8277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8278"><highlight class="normal"></highlight></codeline>
<codeline lineno="8297"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a8eae4684d32fec1d237da49b0ad57da9" kindref="member">Ace::Largest</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num2)</highlight></codeline>
<codeline lineno="8298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmax(num1,<sp/>num2);</highlight></codeline>
<codeline lineno="8300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8301"><highlight class="normal"></highlight></codeline>
<codeline lineno="8328"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ae0d85e7e3e82f46a0227b85f7112458c" kindref="member">Ace::LastChar</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="8329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="8331"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(str<sp/>+<sp/>strlen(str)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="8333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8335"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>LastChar()<sp/>str<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8338"><highlight class="normal"></highlight></codeline>
<codeline lineno="8339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8341"><highlight class="normal"></highlight></codeline>
<codeline lineno="8368"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ae0d85e7e3e82f46a0227b85f7112458c" kindref="member">Ace::LastChar</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="8369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="8371"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(str<sp/>+<sp/>wcslen(str)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="8373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>LastChar()<sp/>str<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8378"><highlight class="normal"></highlight></codeline>
<codeline lineno="8379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>L</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8381"><highlight class="normal"></highlight></codeline>
<codeline lineno="8410"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1acf5ed5e07611ea7cc31b21d808b20e4d" kindref="member">Ace::LastIndexOf</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToLookFor)</highlight></codeline>
<codeline lineno="8411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToLookForLen;</highlight></codeline>
<codeline lineno="8413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToSearchLen;</highlight></codeline>
<codeline lineno="8414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>currSubstring;</highlight></codeline>
<codeline lineno="8415"><highlight class="normal"></highlight></codeline>
<codeline lineno="8416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToLookFor<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="8417"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Record<sp/>the<sp/>lengths<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>keep<sp/>calling<sp/>strlen().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToLookForLen<sp/>=<sp/>strlen(strToLookFor);</highlight></codeline>
<codeline lineno="8420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearchLen<sp/>=<sp/>strlen(strToSearch);</highlight></codeline>
<codeline lineno="8421"><highlight class="normal"></highlight></codeline>
<codeline lineno="8422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>item<sp/>to<sp/>look<sp/>for<sp/>must<sp/>be<sp/>smaller<sp/>then<sp/>the<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToLookForLen<sp/>&lt;<sp/>strToSearchLen)</highlight></codeline>
<codeline lineno="8424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Search<sp/>the<sp/>entire<sp/>string<sp/>(but<sp/>start<sp/>at<sp/>the<sp/>end)<sp/>for<sp/>an<sp/>occurrence<sp/>of<sp/>strToLookFor.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>(strToSearchLen<sp/>-<sp/>strToLookForLen);<sp/>currIndex<sp/>&gt;=<sp/>0;<sp/>currIndex--)</highlight></codeline>
<codeline lineno="8427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currSubstring<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToSearch,<sp/>currIndex,<sp/>currIndex<sp/>+<sp/>strToLookForLen);</highlight></codeline>
<codeline lineno="8429"><highlight class="normal"></highlight></codeline>
<codeline lineno="8430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>to<sp/>see<sp/>if<sp/>currSubstring<sp/>is<sp/>equal<sp/>to<sp/>what<sp/>we<sp/>are<sp/>looking<sp/>for.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(currSubstring,<sp/>strToLookFor)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="8432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Cleanup<sp/>before<sp/>returning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(currSubstring);</highlight></codeline>
<codeline lineno="8435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>currIndex;</highlight></codeline>
<codeline lineno="8436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8437"><highlight class="normal"></highlight></codeline>
<codeline lineno="8438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Cleanup<sp/>the<sp/>currSubstring<sp/>since<sp/>SubString<sp/>allocates<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(currSubstring);</highlight></codeline>
<codeline lineno="8440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>LastIndexOf()<sp/>strToLookFor<sp/>must<sp/>be<sp/>smaller<sp/>then<sp/>strToSearch.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8448"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>LastIndexOf()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8451"><highlight class="normal"></highlight></codeline>
<codeline lineno="8452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="8453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8454"><highlight class="normal"></highlight></codeline>
<codeline lineno="8483"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1acf5ed5e07611ea7cc31b21d808b20e4d" kindref="member">Ace::LastIndexOf</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToLookFor)</highlight></codeline>
<codeline lineno="8484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToLookForLen;</highlight></codeline>
<codeline lineno="8486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToSearchLen;</highlight></codeline>
<codeline lineno="8487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>currSubstring;</highlight></codeline>
<codeline lineno="8488"><highlight class="normal"></highlight></codeline>
<codeline lineno="8489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToLookFor<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="8490"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Record<sp/>the<sp/>lengths<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>keep<sp/>calling<sp/>strlen().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToLookForLen<sp/>=<sp/>wcslen(strToLookFor);</highlight></codeline>
<codeline lineno="8493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearchLen<sp/>=<sp/>wcslen(strToSearch);</highlight></codeline>
<codeline lineno="8494"><highlight class="normal"></highlight></codeline>
<codeline lineno="8495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>item<sp/>to<sp/>look<sp/>for<sp/>must<sp/>be<sp/>smaller<sp/>then<sp/>the<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToLookForLen<sp/>&lt;<sp/>strToSearchLen)</highlight></codeline>
<codeline lineno="8497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Search<sp/>the<sp/>entire<sp/>string<sp/>(but<sp/>start<sp/>at<sp/>the<sp/>end)<sp/>for<sp/>an<sp/>occurrence<sp/>of<sp/>strToLookFor.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>(strToSearchLen<sp/>-<sp/>strToLookForLen);<sp/>currIndex<sp/>&gt;=<sp/>0;<sp/>currIndex--)</highlight></codeline>
<codeline lineno="8500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currSubstring<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToSearch,<sp/>currIndex,<sp/>currIndex<sp/>+<sp/>strToLookForLen);</highlight></codeline>
<codeline lineno="8502"><highlight class="normal"></highlight></codeline>
<codeline lineno="8503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>to<sp/>see<sp/>if<sp/>currSubstring<sp/>is<sp/>equal<sp/>to<sp/>what<sp/>we<sp/>are<sp/>looking<sp/>for.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wcscmp(currSubstring,<sp/>strToLookFor)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="8505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Cleanup<sp/>before<sp/>returning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(currSubstring);</highlight></codeline>
<codeline lineno="8508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>currIndex;</highlight></codeline>
<codeline lineno="8509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8510"><highlight class="normal"></highlight></codeline>
<codeline lineno="8511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Cleanup<sp/>the<sp/>currSubstring<sp/>since<sp/>SubString<sp/>allocates<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(currSubstring);</highlight></codeline>
<codeline lineno="8513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>LastIndexOf()<sp/>strToLookFor<sp/>must<sp/>be<sp/>smaller<sp/>then<sp/>strToSearch.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8521"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>LastIndexOf()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8524"><highlight class="normal"></highlight></codeline>
<codeline lineno="8525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="8526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8527"><highlight class="normal"></highlight></codeline>
<codeline lineno="8555"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a278ffeb56149bc1cc75617d639b63468" kindref="member">Ace::LogBaseTen</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="8556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8558"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="8560"><highlight class="normal"></highlight></codeline>
<codeline lineno="8561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>an<sp/>exception<sp/>from<sp/>being<sp/>raised.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreaterequal(num,<sp/>0.0)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8563"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="8566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="8568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8570"><highlight class="normal"></highlight></codeline>
<codeline lineno="8571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>log10(num);</highlight></codeline>
<codeline lineno="8572"><highlight class="normal"></highlight></codeline>
<codeline lineno="8573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>log10().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="8575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>LogBaseTen()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="8578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="8580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>LogBaseTen()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="8583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8586"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>LogBaseTen()<sp/>num<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>0.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8589"><highlight class="normal"></highlight></codeline>
<codeline lineno="8590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="8591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8592"><highlight class="normal"></highlight></codeline>
<codeline lineno="8620"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a278ffeb56149bc1cc75617d639b63468" kindref="member">Ace::LogBaseTen</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="8621"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8623"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="8625"><highlight class="normal"></highlight></codeline>
<codeline lineno="8626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>an<sp/>exception<sp/>from<sp/>being<sp/>raised.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreaterequal(num,<sp/>0.0f)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8628"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="8631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="8633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8635"><highlight class="normal"></highlight></codeline>
<codeline lineno="8636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>log10(num);</highlight></codeline>
<codeline lineno="8637"><highlight class="normal"></highlight></codeline>
<codeline lineno="8638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>log10().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="8640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>LogBaseTen()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="8643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="8645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>LogBaseTen()<sp/><sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="8648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8651"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>LogBaseTen()<sp/>num<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>0.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8653"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8654"><highlight class="normal"></highlight></codeline>
<codeline lineno="8655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="8656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8657"><highlight class="normal"></highlight></codeline>
<codeline lineno="8685"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a278ffeb56149bc1cc75617d639b63468" kindref="member">Ace::LogBaseTen</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="8686"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8688"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="8690"><highlight class="normal"></highlight></codeline>
<codeline lineno="8691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>an<sp/>exception<sp/>from<sp/>being<sp/>raised.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreaterequal(num,<sp/>0)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8693"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="8696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="8698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8700"><highlight class="normal"></highlight></codeline>
<codeline lineno="8701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>log10(num);</highlight></codeline>
<codeline lineno="8702"><highlight class="normal"></highlight></codeline>
<codeline lineno="8703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>log10().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="8705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>LogBaseTen()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="8708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="8710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>LogBaseTen()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="8713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8714"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8716"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>LogBaseTen()<sp/>num<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>0.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8719"><highlight class="normal"></highlight></codeline>
<codeline lineno="8720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="8721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8722"><highlight class="normal"></highlight></codeline>
<codeline lineno="8750"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1af2bfc128e37911cda7a8af0b9a3a06b9" kindref="member">Ace::LogBaseTwo</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="8751"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8753"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="8755"><highlight class="normal"></highlight></codeline>
<codeline lineno="8756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>an<sp/>exception<sp/>from<sp/>being<sp/>raised.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreaterequal(num,<sp/>0.0)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8758"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="8761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="8763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8765"><highlight class="normal"></highlight></codeline>
<codeline lineno="8766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>log2(num);</highlight></codeline>
<codeline lineno="8767"><highlight class="normal"></highlight></codeline>
<codeline lineno="8768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>log2().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="8770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>LogBaseTwo()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="8773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="8775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>LogBaseTwo()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="8778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8779"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8781"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>LogBaseTwo()<sp/>num<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>0.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8783"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8784"><highlight class="normal"></highlight></codeline>
<codeline lineno="8785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="8786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8787"><highlight class="normal"></highlight></codeline>
<codeline lineno="8815"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1af2bfc128e37911cda7a8af0b9a3a06b9" kindref="member">Ace::LogBaseTwo</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="8816"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8818"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="8820"><highlight class="normal"></highlight></codeline>
<codeline lineno="8821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>an<sp/>exception<sp/>from<sp/>being<sp/>raised.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreaterequal(num,<sp/>0.0f)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8823"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="8826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="8828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8830"><highlight class="normal"></highlight></codeline>
<codeline lineno="8831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>log2(num);</highlight></codeline>
<codeline lineno="8832"><highlight class="normal"></highlight></codeline>
<codeline lineno="8833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>log2().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="8835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>LogBaseTwo()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="8838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="8840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>LogBaseTwo()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="8843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8844"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8846"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>LogBaseTwo()<sp/>num<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>0.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8848"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8849"><highlight class="normal"></highlight></codeline>
<codeline lineno="8850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="8851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8852"><highlight class="normal"></highlight></codeline>
<codeline lineno="8880"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1af2bfc128e37911cda7a8af0b9a3a06b9" kindref="member">Ace::LogBaseTwo</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="8881"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8883"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="8885"><highlight class="normal"></highlight></codeline>
<codeline lineno="8886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>an<sp/>exception<sp/>from<sp/>being<sp/>raised.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreaterequal(num,<sp/>0)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="8888"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="8891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="8893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8895"><highlight class="normal"></highlight></codeline>
<codeline lineno="8896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>log2(num);</highlight></codeline>
<codeline lineno="8897"><highlight class="normal"></highlight></codeline>
<codeline lineno="8898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>log2().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="8900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>LogBaseTwo()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="8903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="8905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>LogBaseTwo()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="8908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8911"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>LogBaseTwo()<sp/>num<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>0.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8913"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8914"><highlight class="normal"></highlight></codeline>
<codeline lineno="8915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="8916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8917"><highlight class="normal"></highlight></codeline>
<codeline lineno="8947"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a6529499a01bc16109f19ebcb719019f7" kindref="member">Ace::Mod</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>numerator,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denominator)</highlight></codeline>
<codeline lineno="8948"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8950"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="8952"><highlight class="normal"></highlight></codeline>
<codeline lineno="8953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denominator<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="8954"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="8957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="8959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8961"><highlight class="normal"></highlight></codeline>
<codeline lineno="8962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>fmod(numerator,<sp/>denominator);</highlight></codeline>
<codeline lineno="8963"><highlight class="normal"></highlight></codeline>
<codeline lineno="8964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>fmod().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="8966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Mod()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="8969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="8971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Mod()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="8974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8975"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8977"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>Mod()<sp/>denominator<sp/>cannot<sp/>be<sp/>0.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8979"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8980"><highlight class="normal"></highlight></codeline>
<codeline lineno="8981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="8982"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8983"><highlight class="normal"></highlight></codeline>
<codeline lineno="9013"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a6529499a01bc16109f19ebcb719019f7" kindref="member">Ace::Mod</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>numerator,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>denominator)</highlight></codeline>
<codeline lineno="9014"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9016"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="9018"><highlight class="normal"></highlight></codeline>
<codeline lineno="9019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denominator<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9020"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="9023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="9025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9027"><highlight class="normal"></highlight></codeline>
<codeline lineno="9028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>fmod(numerator,<sp/>denominator);</highlight></codeline>
<codeline lineno="9029"><highlight class="normal"></highlight></codeline>
<codeline lineno="9030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>fmod().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Mod()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="9035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Mod()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="9040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9041"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9043"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>Mod()<sp/>denominator<sp/>cannot<sp/>be<sp/>0.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9045"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9046"><highlight class="normal"></highlight></codeline>
<codeline lineno="9047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="9048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9049"><highlight class="normal"></highlight></codeline>
<codeline lineno="9079"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a6529499a01bc16109f19ebcb719019f7" kindref="member">Ace::Mod</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numerator,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>denominator)</highlight></codeline>
<codeline lineno="9080"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9082"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="9084"><highlight class="normal"></highlight></codeline>
<codeline lineno="9085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denominator<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9086"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="9089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="9091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9093"><highlight class="normal"></highlight></codeline>
<codeline lineno="9094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>fmod(numerator,<sp/>denominator);</highlight></codeline>
<codeline lineno="9095"><highlight class="normal"></highlight></codeline>
<codeline lineno="9096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>fmod().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Mod()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="9101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Mod()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="9106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>Mod()<sp/>denominator<sp/>cannot<sp/>be<sp/>0.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9112"><highlight class="normal"></highlight></codeline>
<codeline lineno="9113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="9114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9115"><highlight class="normal"></highlight></codeline>
<codeline lineno="9145"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a9521670cd2b0a4f90f58ee430e26a44c" kindref="member">Ace::MultiplyThenAdd</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>multOne,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>multTwo,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>add)</highlight></codeline>
<codeline lineno="9146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9148"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="9150"><highlight class="normal"></highlight></codeline>
<codeline lineno="9151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="9153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="9155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9156"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9157"><highlight class="normal"></highlight></codeline>
<codeline lineno="9158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(multOne<sp/>*<sp/>multTwo)<sp/>+<sp/>add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9159"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>fma(multOne,<sp/>multTwo,<sp/>add);</highlight></codeline>
<codeline lineno="9160"><highlight class="normal"></highlight></codeline>
<codeline lineno="9161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>fma().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>MultiplyThenAdd()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="9166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>MultiplyThenAdd()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="9171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9172"><highlight class="normal"></highlight></codeline>
<codeline lineno="9173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="9174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9175"><highlight class="normal"></highlight></codeline>
<codeline lineno="9203"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a9521670cd2b0a4f90f58ee430e26a44c" kindref="member">Ace::MultiplyThenAdd</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>multOne,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>multTwo,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>add)</highlight></codeline>
<codeline lineno="9204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9206"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="9208"><highlight class="normal"></highlight></codeline>
<codeline lineno="9209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="9211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="9213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9214"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9215"><highlight class="normal"></highlight></codeline>
<codeline lineno="9216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(multOne<sp/>*<sp/>multTwo)<sp/>+<sp/>add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9217"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>fma(multOne,<sp/>multTwo,<sp/>add);</highlight></codeline>
<codeline lineno="9218"><highlight class="normal"></highlight></codeline>
<codeline lineno="9219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>fma().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9221"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>MultiplyThenAdd()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="9224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>MultiplyThenAdd()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="9229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9230"><highlight class="normal"></highlight></codeline>
<codeline lineno="9231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="9232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9233"><highlight class="normal"></highlight></codeline>
<codeline lineno="9263"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a9521670cd2b0a4f90f58ee430e26a44c" kindref="member">Ace::MultiplyThenAdd</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>multOne,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>multTwo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>add)</highlight></codeline>
<codeline lineno="9264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9266"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="9268"><highlight class="normal"></highlight></codeline>
<codeline lineno="9269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="9271"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="9273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9274"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9275"><highlight class="normal"></highlight></codeline>
<codeline lineno="9276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(multOne<sp/>*<sp/>multTwo)<sp/>+<sp/>add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9277"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>fma(multOne,<sp/>multTwo,<sp/>add);</highlight></codeline>
<codeline lineno="9278"><highlight class="normal"></highlight></codeline>
<codeline lineno="9279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>fma().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9281"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>MultiplyThenAdd()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="9284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9286"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>MultiplyThenAdd()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="9289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9290"><highlight class="normal"></highlight></codeline>
<codeline lineno="9291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="9292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9293"><highlight class="normal"></highlight></codeline>
<codeline lineno="9321"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a69ddb0ab24047c5175b3dc4fb3e8f3c6" kindref="member">Ace::NaturalLog</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="9322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9324"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="9326"><highlight class="normal"></highlight></codeline>
<codeline lineno="9327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>an<sp/>exception<sp/>from<sp/>being<sp/>raised.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreaterequal(num,<sp/>0.0)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9329"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="9332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="9334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9336"><highlight class="normal"></highlight></codeline>
<codeline lineno="9337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>log(num);</highlight></codeline>
<codeline lineno="9338"><highlight class="normal"></highlight></codeline>
<codeline lineno="9339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>log().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>NaturalLog()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="9344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>NaturalLog()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="9349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9352"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>NaturalLog()<sp/>num<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>0.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9355"><highlight class="normal"></highlight></codeline>
<codeline lineno="9356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="9357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9358"><highlight class="normal"></highlight></codeline>
<codeline lineno="9386"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a69ddb0ab24047c5175b3dc4fb3e8f3c6" kindref="member">Ace::NaturalLog</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="9387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9389"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="9391"><highlight class="normal"></highlight></codeline>
<codeline lineno="9392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>an<sp/>exception<sp/>from<sp/>being<sp/>raised.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreaterequal(num,<sp/>0.0f)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9394"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="9397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="9399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9401"><highlight class="normal"></highlight></codeline>
<codeline lineno="9402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>log(num);</highlight></codeline>
<codeline lineno="9403"><highlight class="normal"></highlight></codeline>
<codeline lineno="9404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>log().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>NaturalLog()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="9409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>NaturalLog()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="9414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9417"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>NaturalLog()<sp/>num<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>0.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9420"><highlight class="normal"></highlight></codeline>
<codeline lineno="9421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="9422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9423"><highlight class="normal"></highlight></codeline>
<codeline lineno="9451"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a69ddb0ab24047c5175b3dc4fb3e8f3c6" kindref="member">Ace::NaturalLog</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="9452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9454"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="9456"><highlight class="normal"></highlight></codeline>
<codeline lineno="9457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>an<sp/>exception<sp/>from<sp/>being<sp/>raised.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreaterequal(num,<sp/>0)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9459"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="9462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="9464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9466"><highlight class="normal"></highlight></codeline>
<codeline lineno="9467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>log(num);</highlight></codeline>
<codeline lineno="9468"><highlight class="normal"></highlight></codeline>
<codeline lineno="9469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>log().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>NaturalLog()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="9474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>NaturalLog()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="9479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9482"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>NaturalLog()<sp/>num<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>0.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9485"><highlight class="normal"></highlight></codeline>
<codeline lineno="9486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="9487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9488"><highlight class="normal"></highlight></codeline>
<codeline lineno="9517"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a2a3aa781cdf81480b5e1ce5075649ed4" kindref="member">Ace::NaturalLogGammaFunction</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="9518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9520"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="9522"><highlight class="normal"></highlight></codeline>
<codeline lineno="9523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>an<sp/>exception<sp/>from<sp/>being<sp/>raised.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreater(num,<sp/>0.0)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9525"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="9528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="9530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9532"><highlight class="normal"></highlight></codeline>
<codeline lineno="9533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>lgamma(num);</highlight></codeline>
<codeline lineno="9534"><highlight class="normal"></highlight></codeline>
<codeline lineno="9535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>lgamma().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>NaturalLogGammaFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="9540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>NaturalLogGammaFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="9545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>NaturalLogGammaFunction()<sp/>num<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>0.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9551"><highlight class="normal"></highlight></codeline>
<codeline lineno="9552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="9553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9554"><highlight class="normal"></highlight></codeline>
<codeline lineno="9583"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a2a3aa781cdf81480b5e1ce5075649ed4" kindref="member">Ace::NaturalLogGammaFunction</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="9584"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9586"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="9588"><highlight class="normal"></highlight></codeline>
<codeline lineno="9589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreater(num,<sp/>0.0f)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9590"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="9593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="9595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9597"><highlight class="normal"></highlight></codeline>
<codeline lineno="9598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>lgamma(num);</highlight></codeline>
<codeline lineno="9599"><highlight class="normal"></highlight></codeline>
<codeline lineno="9600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>lgamma().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>NaturalLogGammaFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="9605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>NaturalLogGammaFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="9610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9613"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>NaturalLogGammaFunction()<sp/>num<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>0.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9616"><highlight class="normal"></highlight></codeline>
<codeline lineno="9617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="9618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9619"><highlight class="normal"></highlight></codeline>
<codeline lineno="9648"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a2a3aa781cdf81480b5e1ce5075649ed4" kindref="member">Ace::NaturalLogGammaFunction</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="9649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9651"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="9653"><highlight class="normal"></highlight></codeline>
<codeline lineno="9654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreater(num,<sp/>0)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="9655"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="9658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="9660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9662"><highlight class="normal"></highlight></codeline>
<codeline lineno="9663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>lgamma(num);</highlight></codeline>
<codeline lineno="9664"><highlight class="normal"></highlight></codeline>
<codeline lineno="9665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>lgamma().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>NaturalLogGammaFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="9670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>NaturalLogGammaFunction()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="9675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9678"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>NaturalLogGammaFunction()<sp/>num<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>0.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9681"><highlight class="normal"></highlight></codeline>
<codeline lineno="9682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="9683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9684"><highlight class="normal"></highlight></codeline>
<codeline lineno="9714"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a12241a4abf6a86ad707789cbe9979dd7" kindref="member">Ace::NextIndexOf</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>charToLookFor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startIndex)</highlight></codeline>
<codeline lineno="9715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>foundIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="9717"><highlight class="normal"></highlight></codeline>
<codeline lineno="9718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="9719"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>startIndex;<sp/>i<sp/>&lt;<sp/>strlen(strToSearch);<sp/>i++)</highlight></codeline>
<codeline lineno="9721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch[i]<sp/>==<sp/>charToLookFor)</highlight></codeline>
<codeline lineno="9723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundIndex<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="9725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9728"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9730"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>NextIndexOf()<sp/>strToSearch<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9732"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9733"><highlight class="normal"></highlight></codeline>
<codeline lineno="9734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>foundIndex;</highlight></codeline>
<codeline lineno="9735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9736"><highlight class="normal"></highlight></codeline>
<codeline lineno="9766"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a12241a4abf6a86ad707789cbe9979dd7" kindref="member">Ace::NextIndexOf</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>charToLookFor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startIndex)</highlight></codeline>
<codeline lineno="9767"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>foundIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="9769"><highlight class="normal"></highlight></codeline>
<codeline lineno="9770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="9771"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>startIndex;<sp/>i<sp/>&lt;<sp/>wcslen(strToSearch);<sp/>i++)</highlight></codeline>
<codeline lineno="9773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch[i]<sp/>==<sp/>charToLookFor)</highlight></codeline>
<codeline lineno="9775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundIndex<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="9777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9780"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9782"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>NextIndexOf()<sp/>strToSearch<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9784"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9785"><highlight class="normal"></highlight></codeline>
<codeline lineno="9786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>foundIndex;</highlight></codeline>
<codeline lineno="9787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9788"><highlight class="normal"></highlight></codeline>
<codeline lineno="9818"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a12241a4abf6a86ad707789cbe9979dd7" kindref="member">Ace::NextIndexOf</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToLookFor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startIndex)</highlight></codeline>
<codeline lineno="9819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToLookForLen;</highlight></codeline>
<codeline lineno="9821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToSearchLen;</highlight></codeline>
<codeline lineno="9822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>currSubstring;</highlight></codeline>
<codeline lineno="9823"><highlight class="normal"></highlight></codeline>
<codeline lineno="9824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToLookFor<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="9825"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Record<sp/>the<sp/>lengths<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>keep<sp/>calling<sp/>strlen().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToLookForLen<sp/>=<sp/>strlen(strToLookFor);</highlight></codeline>
<codeline lineno="9828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearchLen<sp/>=<sp/>strlen(strToSearch);</highlight></codeline>
<codeline lineno="9829"><highlight class="normal"></highlight></codeline>
<codeline lineno="9830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>item<sp/>to<sp/>look<sp/>for<sp/>must<sp/>be<sp/>smaller<sp/>then<sp/>the<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToLookForLen<sp/>&lt;<sp/>strToSearchLen)</highlight></codeline>
<codeline lineno="9832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Search<sp/>the<sp/>string<sp/>starting<sp/>at<sp/>startIndex<sp/>for<sp/>the<sp/>first<sp/>occurrence<sp/>of<sp/>strToLookFor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>startIndex;<sp/>currIndex<sp/>&lt;=<sp/>(strToSearchLen<sp/>-<sp/>strToLookForLen);<sp/>currIndex++)</highlight></codeline>
<codeline lineno="9835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currSubstring<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToSearch,<sp/>currIndex,<sp/>currIndex<sp/>+<sp/>strToLookForLen);</highlight></codeline>
<codeline lineno="9837"><highlight class="normal"></highlight></codeline>
<codeline lineno="9838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>to<sp/>see<sp/>if<sp/>currSubstring<sp/>is<sp/>equal<sp/>to<sp/>what<sp/>we<sp/>are<sp/>looking<sp/>for.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(currSubstring,<sp/>strToLookFor)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="9840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Cleanup<sp/>before<sp/>returning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(currSubstring);</highlight></codeline>
<codeline lineno="9843"><highlight class="normal"></highlight></codeline>
<codeline lineno="9844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Found<sp/>it!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>currIndex;</highlight></codeline>
<codeline lineno="9846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9847"><highlight class="normal"></highlight></codeline>
<codeline lineno="9848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Cleanup<sp/>the<sp/>currSubstring<sp/>since<sp/>SubString<sp/>allocates<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(currSubstring);</highlight></codeline>
<codeline lineno="9850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>NextIndexOf()<sp/>strToLookFor<sp/>is<sp/>smaller<sp/>then<sp/>strToSearch.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9856"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9858"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>NextIndexOf()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9861"><highlight class="normal"></highlight></codeline>
<codeline lineno="9862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Couldn&apos;t<sp/>find<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="9864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9865"><highlight class="normal"></highlight></codeline>
<codeline lineno="9895"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a12241a4abf6a86ad707789cbe9979dd7" kindref="member">Ace::NextIndexOf</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToLookFor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startIndex)</highlight></codeline>
<codeline lineno="9896"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToLookForLen;</highlight></codeline>
<codeline lineno="9898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToSearchLen;</highlight></codeline>
<codeline lineno="9899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>currSubstring;</highlight></codeline>
<codeline lineno="9900"><highlight class="normal"></highlight></codeline>
<codeline lineno="9901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToLookFor<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="9902"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Record<sp/>the<sp/>lengths<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>keep<sp/>calling<sp/>wcslen().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToLookForLen<sp/>=<sp/>wcslen(strToLookFor);</highlight></codeline>
<codeline lineno="9905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearchLen<sp/>=<sp/>wcslen(strToSearch);</highlight></codeline>
<codeline lineno="9906"><highlight class="normal"></highlight></codeline>
<codeline lineno="9907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>item<sp/>to<sp/>look<sp/>for<sp/>must<sp/>be<sp/>smaller<sp/>then<sp/>the<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToLookForLen<sp/>&lt;<sp/>strToSearchLen)</highlight></codeline>
<codeline lineno="9909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Search<sp/>the<sp/>string<sp/>starting<sp/>at<sp/>startIndex<sp/>for<sp/>the<sp/>first<sp/>occurrence<sp/>of<sp/>strToLookFor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>startIndex;<sp/>currIndex<sp/>&lt;=<sp/>(strToSearchLen<sp/>-<sp/>strToLookForLen);<sp/>currIndex++)</highlight></codeline>
<codeline lineno="9912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currSubstring<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToSearch,<sp/>currIndex,<sp/>currIndex<sp/>+<sp/>strToLookForLen);</highlight></codeline>
<codeline lineno="9914"><highlight class="normal"></highlight></codeline>
<codeline lineno="9915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>to<sp/>see<sp/>if<sp/>currSubstring<sp/>is<sp/>equal<sp/>to<sp/>what<sp/>we<sp/>are<sp/>looking<sp/>for.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wcscmp(currSubstring,<sp/>strToLookFor)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="9917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Cleanup<sp/>before<sp/>returning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(currSubstring);</highlight></codeline>
<codeline lineno="9920"><highlight class="normal"></highlight></codeline>
<codeline lineno="9921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Found<sp/>it!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>currIndex;</highlight></codeline>
<codeline lineno="9923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9924"><highlight class="normal"></highlight></codeline>
<codeline lineno="9925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Cleanup<sp/>the<sp/>currSubstring<sp/>since<sp/>SubString<sp/>allocates<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(currSubstring);</highlight></codeline>
<codeline lineno="9927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>NextIndexOf()<sp/>strToLookFor<sp/>is<sp/>smaller<sp/>then<sp/>strToSearch.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9933"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9935"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>NextIndexOf()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9937"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9938"><highlight class="normal"></highlight></codeline>
<codeline lineno="9939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Couldn&apos;t<sp/>find<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="9941"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9942"><highlight class="normal"></highlight></codeline>
<codeline lineno="9969"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a9beab58661041127b9073ec5ff8a275a" kindref="member">Ace::NumTimesTwoToTheXPower</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>power)</highlight></codeline>
<codeline lineno="9970"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9972"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="9974"><highlight class="normal"></highlight></codeline>
<codeline lineno="9975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="9977"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="9979"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9980"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9981"><highlight class="normal"></highlight></codeline>
<codeline lineno="9982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//num<sp/>*<sp/>2^power.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9983"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ldexp(num,<sp/>power);</highlight></codeline>
<codeline lineno="9984"><highlight class="normal"></highlight></codeline>
<codeline lineno="9985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>for<sp/>possible<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>ldexp()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9987"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>NumTimesTwoToTheXPower()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="9990"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="9992"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>NumTimesTwoToTheXPower()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="9994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="9995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="9996"><highlight class="normal"></highlight></codeline>
<codeline lineno="9997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="9998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9999"><highlight class="normal"></highlight></codeline>
<codeline lineno="10026"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a9beab58661041127b9073ec5ff8a275a" kindref="member">Ace::NumTimesTwoToTheXPower</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>power)</highlight></codeline>
<codeline lineno="10027"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10029"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="10031"><highlight class="normal"></highlight></codeline>
<codeline lineno="10032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="10034"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="10036"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10037"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10038"><highlight class="normal"></highlight></codeline>
<codeline lineno="10039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//num<sp/>*<sp/>2^power.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10040"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ldexp(num,<sp/>power);</highlight></codeline>
<codeline lineno="10041"><highlight class="normal"></highlight></codeline>
<codeline lineno="10042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>for<sp/>possible<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>ldexp()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10044"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>NumTimesTwoToTheXPower()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="10047"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10049"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>NumTimesTwoToTheXPower()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="10052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10053"><highlight class="normal"></highlight></codeline>
<codeline lineno="10054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="10055"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10056"><highlight class="normal"></highlight></codeline>
<codeline lineno="10083"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a9beab58661041127b9073ec5ff8a275a" kindref="member">Ace::NumTimesTwoToTheXPower</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>power)</highlight></codeline>
<codeline lineno="10084"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10086"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="10088"><highlight class="normal"></highlight></codeline>
<codeline lineno="10089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="10091"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="10093"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10094"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10095"><highlight class="normal"></highlight></codeline>
<codeline lineno="10096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//num<sp/>*<sp/>2^power.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10097"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ldexp(num,<sp/>power);</highlight></codeline>
<codeline lineno="10098"><highlight class="normal"></highlight></codeline>
<codeline lineno="10099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>for<sp/>possible<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>ldexp()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>NumTimesTwoToTheXPower()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="10104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>NumTimesTwoToTheXPower()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="10109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10110"><highlight class="normal"></highlight></codeline>
<codeline lineno="10111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="10112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10113"><highlight class="normal"></highlight></codeline>
<codeline lineno="10143"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a5a64e64344fe2e67ba61a945d29ac95a" kindref="member">Ace::PositiveDifference</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>numOne,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>numTwo)</highlight></codeline>
<codeline lineno="10144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10146"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="10148"><highlight class="normal"></highlight></codeline>
<codeline lineno="10149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="10151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="10153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10154"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10155"><highlight class="normal"></highlight></codeline>
<codeline lineno="10156"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>fdim(numOne,<sp/>numTwo);</highlight></codeline>
<codeline lineno="10157"><highlight class="normal"></highlight></codeline>
<codeline lineno="10158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>for<sp/>possible<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>fdim()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>PositiveDifference()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="10163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>PositiveDifference()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="10168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10169"><highlight class="normal"></highlight></codeline>
<codeline lineno="10170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="10171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10172"><highlight class="normal"></highlight></codeline>
<codeline lineno="10202"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a5a64e64344fe2e67ba61a945d29ac95a" kindref="member">Ace::PositiveDifference</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>numOne,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>numTwo)</highlight></codeline>
<codeline lineno="10203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10205"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="10207"><highlight class="normal"></highlight></codeline>
<codeline lineno="10208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="10210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="10212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10213"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10214"><highlight class="normal"></highlight></codeline>
<codeline lineno="10215"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>fdim(numOne,<sp/>numTwo);</highlight></codeline>
<codeline lineno="10216"><highlight class="normal"></highlight></codeline>
<codeline lineno="10217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>for<sp/>possible<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>fdim()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>PositiveDifference()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="10222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>PositiveDifference()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="10227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10228"><highlight class="normal"></highlight></codeline>
<codeline lineno="10229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="10230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10231"><highlight class="normal"></highlight></codeline>
<codeline lineno="10261"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a5a64e64344fe2e67ba61a945d29ac95a" kindref="member">Ace::PositiveDifference</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numOne,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numTwo)</highlight></codeline>
<codeline lineno="10262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10264"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="10266"><highlight class="normal"></highlight></codeline>
<codeline lineno="10267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="10269"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="10271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10272"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10273"><highlight class="normal"></highlight></codeline>
<codeline lineno="10274"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>fdim(numOne,<sp/>numTwo);</highlight></codeline>
<codeline lineno="10275"><highlight class="normal"></highlight></codeline>
<codeline lineno="10276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>for<sp/>possible<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>fdim()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10278"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>PositiveDifference()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="10281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10283"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>PositiveDifference()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="10286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10287"><highlight class="normal"></highlight></codeline>
<codeline lineno="10288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="10289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10290"><highlight class="normal"></highlight></codeline>
<codeline lineno="10319"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1adbcb9f24f9c412d29d7b671a3aa16c42" kindref="member">Ace::Power</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>base,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>exponent)</highlight></codeline>
<codeline lineno="10320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10322"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="10324"><highlight class="normal"></highlight></codeline>
<codeline lineno="10325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>base<sp/>and<sp/>exponent<sp/>are<sp/>acceptable<sp/>values<sp/>for<sp/>pow().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>mathematical<sp/>exception<sp/>from<sp/>being<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((base<sp/>==<sp/>0.0)<sp/>&amp;&amp;<sp/>islessequal(exponent,<sp/>0.0))<sp/>||<sp/>isless(base,<sp/>0.0))</highlight></codeline>
<codeline lineno="10328"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>Power()<sp/>Parameters<sp/>are<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="10331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10333"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="10336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="10338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10340"><highlight class="normal"></highlight></codeline>
<codeline lineno="10341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>pow(base,<sp/>exponent);</highlight></codeline>
<codeline lineno="10342"><highlight class="normal"></highlight></codeline>
<codeline lineno="10343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>for<sp/>possible<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>pow()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Power()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="10348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Power()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="10353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10354"><highlight class="normal"></highlight></codeline>
<codeline lineno="10355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="10356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10358"><highlight class="normal"></highlight></codeline>
<codeline lineno="10387"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1adbcb9f24f9c412d29d7b671a3aa16c42" kindref="member">Ace::Power</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>base,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>exponent)</highlight></codeline>
<codeline lineno="10388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10390"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="10392"><highlight class="normal"></highlight></codeline>
<codeline lineno="10393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>base<sp/>and<sp/>exponent<sp/>are<sp/>acceptable<sp/>values<sp/>for<sp/>pow().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>mathematical<sp/>exception<sp/>from<sp/>being<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((base<sp/>==<sp/>0.0f)<sp/>&amp;&amp;<sp/>islessequal(exponent,<sp/>0.0f))<sp/>||<sp/>isless(base,<sp/>0.0f))</highlight></codeline>
<codeline lineno="10396"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>Power()<sp/>Parameters<sp/>are<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="10399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10401"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="10404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="10406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10408"><highlight class="normal"></highlight></codeline>
<codeline lineno="10409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>pow(base,<sp/>exponent);</highlight></codeline>
<codeline lineno="10410"><highlight class="normal"></highlight></codeline>
<codeline lineno="10411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>for<sp/>possible<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>pow()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Power()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="10416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Power()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="10421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10422"><highlight class="normal"></highlight></codeline>
<codeline lineno="10423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="10424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10426"><highlight class="normal"></highlight></codeline>
<codeline lineno="10455"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1adbcb9f24f9c412d29d7b671a3aa16c42" kindref="member">Ace::Power</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exponent)</highlight></codeline>
<codeline lineno="10456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>mathematical<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10458"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="10460"><highlight class="normal"></highlight></codeline>
<codeline lineno="10461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>base<sp/>and<sp/>exponent<sp/>are<sp/>acceptable<sp/>values<sp/>for<sp/>pow().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>mathematical<sp/>exception<sp/>from<sp/>being<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((base<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>islessequal(exponent,<sp/>0))<sp/>||<sp/>isless(base,<sp/>0))</highlight></codeline>
<codeline lineno="10464"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Domain<sp/>Error:<sp/>Power()<sp/>Parameters<sp/>are<sp/>not<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="10467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10469"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="10472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="10474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10476"><highlight class="normal"></highlight></codeline>
<codeline lineno="10477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>pow(base,<sp/>exponent);</highlight></codeline>
<codeline lineno="10478"><highlight class="normal"></highlight></codeline>
<codeline lineno="10479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>for<sp/>possible<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>pow()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Power()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="10484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Power()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="10489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10490"><highlight class="normal"></highlight></codeline>
<codeline lineno="10491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="10492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10494"><highlight class="normal"></highlight></codeline>
<codeline lineno="10513"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a4acd795a7bf9c65be8e4c4f5d5647ba0" kindref="member">Ace::RadiansToDegrees</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radians)</highlight></codeline>
<codeline lineno="10514"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(radians<sp/>*<sp/>180.0)<sp/>/<sp/><ref refid="_ace_8h_1a952eac791b596a61bba0a133a3bb439f" kindref="member">PI</ref>;</highlight></codeline>
<codeline lineno="10516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10517"><highlight class="normal"></highlight></codeline>
<codeline lineno="10536"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a4acd795a7bf9c65be8e4c4f5d5647ba0" kindref="member">Ace::RadiansToDegrees</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radians)</highlight></codeline>
<codeline lineno="10537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(radians<sp/>*<sp/>180.0f)<sp/>/<sp/><ref refid="_ace_8h_1a952eac791b596a61bba0a133a3bb439f" kindref="member">PI</ref>;</highlight></codeline>
<codeline lineno="10539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10540"><highlight class="normal"></highlight></codeline>
<codeline lineno="10559"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a4acd795a7bf9c65be8e4c4f5d5647ba0" kindref="member">Ace::RadiansToDegrees</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>radians)</highlight></codeline>
<codeline lineno="10560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(radians<sp/>*<sp/>180)<sp/>/<sp/><ref refid="_ace_8h_1a952eac791b596a61bba0a133a3bb439f" kindref="member">PI</ref>;</highlight></codeline>
<codeline lineno="10562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10563"><highlight class="normal"></highlight></codeline>
<codeline lineno="10598"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a66dfff3d59c12f04d7d45841ad8a1e85" kindref="member">Ace::ReadTextFile</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filePath,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numBytesToRead,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxBufferSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>mode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seekOffset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seekOrigin,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>outEndCursorPos)</highlight></codeline>
<codeline lineno="10599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numItems<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufferSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="10603"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>file<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="10604"><highlight class="normal"></highlight></codeline>
<codeline lineno="10605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//0<sp/>indicates<sp/>to<sp/>read<sp/>as<sp/>much<sp/>as<sp/>possible<sp/>(the<sp/>max<sp/>specified).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numBytesToRead<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="10607"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numBytesToRead<sp/>=<sp/>maxBufferSize;</highlight></codeline>
<codeline lineno="10609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10610"><highlight class="normal"></highlight></codeline>
<codeline lineno="10611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>mode<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="10612"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>filePath<sp/>does<sp/>NOT<sp/>lead<sp/>to<sp/>a<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1a14d72992e536c2a370f5c779cc3b1f5a" kindref="member">Ace::IsPathADevice</ref>(filePath)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>there<sp/>are<sp/>no<sp/>errors<sp/>in<sp/>opening<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fopen_s(&amp;file,<sp/>filePath,<sp/>mode)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="10618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>cursor<sp/>location<sp/>(back<sp/>to<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>file<sp/>by<sp/>default).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fseek(file,<sp/>seekOffset,<sp/>seekOrigin)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="10623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReadTextFile()<sp/>Could<sp/>not<sp/>change<sp/>file<sp/>cursor<sp/>position.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="10625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10626"><highlight class="normal"></highlight></codeline>
<codeline lineno="10627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Calculate<sp/>the<sp/>size<sp/>of<sp/>the<sp/>buffer<sp/>in<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufferSize<sp/>=<sp/>numBytesToRead<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char);</highlight></codeline>
<codeline lineno="10629"><highlight class="normal"></highlight></codeline>
<codeline lineno="10630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>the<sp/>buffer<sp/>to<sp/>store<sp/>file<sp/>data<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)_aligned_malloc(bufferSize,<sp/><ref refid="_ace_8h_1aa465ebf747728e1e8a5edd0bd7a6fcde" kindref="member">BYTE_ALIGNMENT</ref>);</highlight></codeline>
<codeline lineno="10632"><highlight class="normal"></highlight></codeline>
<codeline lineno="10633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>buffer<sp/>was<sp/>allocated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="10635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="10637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReadTextFile()<sp/>Buffer<sp/>could<sp/>not<sp/>be<sp/>allocated.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="10639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10640"><highlight class="normal"></highlight></codeline>
<codeline lineno="10641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>any<sp/>garbage<sp/>data<sp/>in<sp/>the<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SecureZeroMemory(buffer,<sp/>bufferSize)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="10643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(buffer);</highlight></codeline>
<codeline lineno="10645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReadTextFile()<sp/>Failed<sp/>to<sp/>zero<sp/>out<sp/>buffer.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="10647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10648"><highlight class="normal"></highlight></codeline>
<codeline lineno="10649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Read<sp/>the<sp/>data<sp/>from<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numItems<sp/>=<sp/>fread_s(buffer,<sp/>bufferSize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">),<sp/>numBytesToRead,<sp/>file);</highlight></codeline>
<codeline lineno="10651"><highlight class="normal"></highlight></codeline>
<codeline lineno="10652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>for<sp/>read<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numItems<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="10654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="10656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(buffer);</highlight></codeline>
<codeline lineno="10657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReadTextFile()<sp/>File<sp/>could<sp/>not<sp/>be<sp/>read.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="10659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10660"><highlight class="normal"></highlight></codeline>
<codeline lineno="10661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>value<sp/>of<sp/>ftell()<sp/>if<sp/>outEndCursorPos<sp/>is<sp/>provided.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outEndCursorPos<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="10663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outEndCursorPos<sp/>=<sp/>ftell(file);</highlight></codeline>
<codeline lineno="10665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10666"><highlight class="normal"></highlight></codeline>
<codeline lineno="10667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>file<sp/>is<sp/>closed<sp/>without<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fclose(file)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(buffer);</highlight></codeline>
<codeline lineno="10671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReadTextFile()<sp/>File<sp/>did<sp/>not<sp/>close<sp/>properly.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="10673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10674"><highlight class="normal"></highlight></codeline>
<codeline lineno="10675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReadTextFile()<sp/>Unable<sp/>to<sp/>open/locate<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReadTextFile()<sp/>File<sp/>path<sp/>cannot<sp/>be<sp/>a<sp/>device.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10685"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10687"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReadTextFile()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10689"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10690"><highlight class="normal"></highlight></codeline>
<codeline lineno="10691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer;</highlight></codeline>
<codeline lineno="10692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10693"><highlight class="normal"></highlight></codeline>
<codeline lineno="10729"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a66aaa5acfe5830750b2c1d0658ac281b" kindref="member">Ace::ReadTextFileW</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>filePath,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numBytesToRead,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxBufferSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>mode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seekOffset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seekOrigin,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>outEndCursorPos)</highlight></codeline>
<codeline lineno="10730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numItems<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufferSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>buffer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="10734"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>file<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="10735"><highlight class="normal"></highlight></codeline>
<codeline lineno="10736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//0<sp/>indicates<sp/>to<sp/>read<sp/>as<sp/>much<sp/>as<sp/>possible<sp/>(the<sp/>max<sp/>specified).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numBytesToRead<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="10738"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numBytesToRead<sp/>=<sp/>maxBufferSize;</highlight></codeline>
<codeline lineno="10740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10741"><highlight class="normal"></highlight></codeline>
<codeline lineno="10742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>mode<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="10743"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>filePath<sp/>does<sp/>NOT<sp/>lead<sp/>to<sp/>a<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1a14d72992e536c2a370f5c779cc3b1f5a" kindref="member">Ace::IsPathADevice</ref>(filePath)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>there<sp/>are<sp/>no<sp/>errors<sp/>in<sp/>opening<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_wfopen_s(&amp;file,<sp/>filePath,<sp/>mode)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="10749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>cursor<sp/>location<sp/>(back<sp/>to<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>file<sp/>by<sp/>default).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fseek(file,<sp/>seekOffset,<sp/>seekOrigin)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="10754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReadTextFileW()<sp/>Could<sp/>not<sp/>change<sp/>file<sp/>cursor<sp/>position.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="10756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10757"><highlight class="normal"></highlight></codeline>
<codeline lineno="10758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Calculate<sp/>the<sp/>size<sp/>of<sp/>the<sp/>buffer<sp/>in<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufferSize<sp/>=<sp/>numBytesToRead<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wchar_t);</highlight></codeline>
<codeline lineno="10760"><highlight class="normal"></highlight></codeline>
<codeline lineno="10761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>the<sp/>buffer<sp/>to<sp/>store<sp/>file<sp/>data<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)_aligned_malloc(bufferSize,<sp/><ref refid="_ace_8h_1aa465ebf747728e1e8a5edd0bd7a6fcde" kindref="member">BYTE_ALIGNMENT</ref>);</highlight></codeline>
<codeline lineno="10763"><highlight class="normal"></highlight></codeline>
<codeline lineno="10764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>buffer<sp/>was<sp/>allocated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="10766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="10768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReadTextFileW()<sp/>Buffer<sp/>could<sp/>not<sp/>be<sp/>allocated.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="10770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10771"><highlight class="normal"></highlight></codeline>
<codeline lineno="10772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>any<sp/>garbage<sp/>data<sp/>in<sp/>the<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SecureZeroMemory(buffer,<sp/>bufferSize)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="10774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(buffer);</highlight></codeline>
<codeline lineno="10776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReadTextFileW()<sp/>Failed<sp/>to<sp/>zero<sp/>out<sp/>buffer.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="10778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10779"><highlight class="normal"></highlight></codeline>
<codeline lineno="10780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Read<sp/>the<sp/>data<sp/>from<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numItems<sp/>=<sp/>fread_s(buffer,<sp/>bufferSize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">),<sp/>numBytesToRead,<sp/>file);</highlight></codeline>
<codeline lineno="10782"><highlight class="normal"></highlight></codeline>
<codeline lineno="10783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>for<sp/>read<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numItems<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="10785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="10787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(buffer);</highlight></codeline>
<codeline lineno="10788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReadTextFileW()<sp/>File<sp/>could<sp/>not<sp/>be<sp/>read.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="10790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10791"><highlight class="normal"></highlight></codeline>
<codeline lineno="10792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>value<sp/>of<sp/>ftell()<sp/>if<sp/>outEndCursorPos<sp/>is<sp/>provided.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outEndCursorPos<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="10794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outEndCursorPos<sp/>=<sp/>ftell(file);</highlight></codeline>
<codeline lineno="10796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10797"><highlight class="normal"></highlight></codeline>
<codeline lineno="10798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>file<sp/>is<sp/>closed<sp/>without<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fclose(file)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(buffer);</highlight></codeline>
<codeline lineno="10802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReadTextFileW()<sp/>File<sp/>did<sp/>not<sp/>close<sp/>properly.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="10804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10805"><highlight class="normal"></highlight></codeline>
<codeline lineno="10806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReadTextFileW()<sp/>Unable<sp/>to<sp/>open<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReadTextFileW()<sp/>File<sp/>path<sp/>cannot<sp/>be<sp/>a<sp/>device.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10816"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10818"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReadTextFileW()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10820"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10821"><highlight class="normal"></highlight></codeline>
<codeline lineno="10822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer;</highlight></codeline>
<codeline lineno="10823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10824"><highlight class="normal"></highlight></codeline>
<codeline lineno="10859"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a9700d7264c30af90d9787a82c77170bb" kindref="member">Ace::ReadBinaryFile</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filePath,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numBytesToRead,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxBufferSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>mode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seekOffset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seekOrigin,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>outEndCursorPos)</highlight></codeline>
<codeline lineno="10860"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a66dfff3d59c12f04d7d45841ad8a1e85" kindref="member">ReadTextFile</ref>(filePath,<sp/>numBytesToRead,<sp/>maxBufferSize,<sp/>mode,<sp/>seekOffset,<sp/>seekOrigin,<sp/>outEndCursorPos);</highlight></codeline>
<codeline lineno="10862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10863"><highlight class="normal"></highlight></codeline>
<codeline lineno="10899"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a38223fc1f30e753afb34313ce190fc09" kindref="member">Ace::ReadBinaryFileW</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>filePath,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numBytesToRead,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxBufferSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>mode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seekOffset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seekOrigin,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>outEndCursorPos)</highlight></codeline>
<codeline lineno="10900"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a66aaa5acfe5830750b2c1d0658ac281b" kindref="member">ReadTextFileW</ref>(filePath,<sp/>numBytesToRead,<sp/>maxBufferSize,<sp/>mode,<sp/>seekOffset,<sp/>seekOrigin,<sp/>outEndCursorPos);</highlight></codeline>
<codeline lineno="10902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10903"><highlight class="normal"></highlight></codeline>
<codeline lineno="10934"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a0f05443f499ce94d53c3a5e584460d52" kindref="member">Ace::Remainder</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>numerator,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denominator)</highlight></codeline>
<codeline lineno="10935"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10937"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="10939"><highlight class="normal"></highlight></codeline>
<codeline lineno="10940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denominator<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10941"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="10944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="10946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10948"><highlight class="normal"></highlight></codeline>
<codeline lineno="10949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>remainder(numerator,<sp/>denominator);</highlight></codeline>
<codeline lineno="10950"><highlight class="normal"></highlight></codeline>
<codeline lineno="10951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>remainder().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Remainder()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="10956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="10958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Remainder()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="10961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10962"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10964"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="10965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>Remainder()<sp/>denominator<sp/>cannot<sp/>be<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10966"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="10967"><highlight class="normal"></highlight></codeline>
<codeline lineno="10968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="10969"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10970"><highlight class="normal"></highlight></codeline>
<codeline lineno="11001"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a0f05443f499ce94d53c3a5e584460d52" kindref="member">Ace::Remainder</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>numerator,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>denominator)</highlight></codeline>
<codeline lineno="11002"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11004"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="11006"><highlight class="normal"></highlight></codeline>
<codeline lineno="11007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denominator<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="11008"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="11011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="11013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11015"><highlight class="normal"></highlight></codeline>
<codeline lineno="11016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>remainder(numerator,<sp/>denominator);</highlight></codeline>
<codeline lineno="11017"><highlight class="normal"></highlight></codeline>
<codeline lineno="11018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>remainder().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="11020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Remainder()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="11023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="11025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Remainder()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="11028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11029"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11031"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>Remainder()<sp/>denominator<sp/>cannot<sp/>be<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11033"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11034"><highlight class="normal"></highlight></codeline>
<codeline lineno="11035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="11036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11037"><highlight class="normal"></highlight></codeline>
<codeline lineno="11068"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a0f05443f499ce94d53c3a5e584460d52" kindref="member">Ace::Remainder</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numerator,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>denominator)</highlight></codeline>
<codeline lineno="11069"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11071"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="11073"><highlight class="normal"></highlight></codeline>
<codeline lineno="11074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denominator<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="11075"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="11078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="11080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11082"><highlight class="normal"></highlight></codeline>
<codeline lineno="11083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>remainder(numerator,<sp/>denominator);</highlight></codeline>
<codeline lineno="11084"><highlight class="normal"></highlight></codeline>
<codeline lineno="11085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>remainder().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="11087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Remainder()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="11090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="11092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Remainder()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="11095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11096"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11098"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>Remainder()<sp/>denominator<sp/>cannot<sp/>be<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11101"><highlight class="normal"></highlight></codeline>
<codeline lineno="11102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="11103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11104"><highlight class="normal"></highlight></codeline>
<codeline lineno="11133"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a83c9c251b60c0becf2ff3b5f6fc3f0ab" kindref="member">Ace::RemainderWithQuadrant</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>numerator,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denominator,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>outQuadrant)</highlight></codeline>
<codeline lineno="11134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11136"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="11138"><highlight class="normal"></highlight></codeline>
<codeline lineno="11139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denominator<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="11140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="11143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="11145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11147"><highlight class="normal"></highlight></codeline>
<codeline lineno="11148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>remquo(numerator,<sp/>denominator,<sp/>outQuadrant);</highlight></codeline>
<codeline lineno="11149"><highlight class="normal"></highlight></codeline>
<codeline lineno="11150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>remquo().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="11152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>RemainderWithQuadrant()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="11155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="11157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>RemainderWithQuadrant()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="11160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RemainderWithQuadrant()<sp/>denominator<sp/>cannot<sp/>be<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11166"><highlight class="normal"></highlight></codeline>
<codeline lineno="11167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="11168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11169"><highlight class="normal"></highlight></codeline>
<codeline lineno="11198"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a83c9c251b60c0becf2ff3b5f6fc3f0ab" kindref="member">Ace::RemainderWithQuadrant</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>numerator,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>denominator,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>outQuadrant)</highlight></codeline>
<codeline lineno="11199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11201"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="11203"><highlight class="normal"></highlight></codeline>
<codeline lineno="11204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denominator<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="11205"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="11208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="11210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11212"><highlight class="normal"></highlight></codeline>
<codeline lineno="11213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>remquo(numerator,<sp/>denominator,<sp/>outQuadrant);</highlight></codeline>
<codeline lineno="11214"><highlight class="normal"></highlight></codeline>
<codeline lineno="11215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>remquo().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="11217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>RemainderWithQuadrant()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="11220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="11222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>RemainderWithQuadrant()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="11225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11228"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>denominator<sp/>cannot<sp/>be<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11231"><highlight class="normal"></highlight></codeline>
<codeline lineno="11232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="11233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11234"><highlight class="normal"></highlight></codeline>
<codeline lineno="11263"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a83c9c251b60c0becf2ff3b5f6fc3f0ab" kindref="member">Ace::RemainderWithQuadrant</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numerator,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>denominator,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>outQuadrant)</highlight></codeline>
<codeline lineno="11264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11266"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="11268"><highlight class="normal"></highlight></codeline>
<codeline lineno="11269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denominator<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="11270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="11273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="11275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11277"><highlight class="normal"></highlight></codeline>
<codeline lineno="11278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>remquo(numerator,<sp/>denominator,<sp/>outQuadrant);</highlight></codeline>
<codeline lineno="11279"><highlight class="normal"></highlight></codeline>
<codeline lineno="11280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>remquo().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="11282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>RemainderWithQuadrant()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="11285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="11287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>RemainderWithQuadrant()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="11290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11293"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>denominator<sp/>cannot<sp/>be<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11296"><highlight class="normal"></highlight></codeline>
<codeline lineno="11297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="11298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11299"><highlight class="normal"></highlight></codeline>
<codeline lineno="11327"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1ae41b2d2f89451e9659550845170d328a" kindref="member">Ace::RemoveAllWhitespace</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="11328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="11330"><highlight class="normal"></highlight></codeline>
<codeline lineno="11331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="11332"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>(str);</highlight></codeline>
<codeline lineno="11334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ace_1a916dc3ddc85c0c5ad3840dfab4962f9e" kindref="member">Ace::RemoveAllWhitespaceInPlace</ref>(buffer);</highlight></codeline>
<codeline lineno="11335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11337"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RemoveAllWhitespace()<sp/>str<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11340"><highlight class="normal"></highlight></codeline>
<codeline lineno="11341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer;</highlight></codeline>
<codeline lineno="11342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11343"><highlight class="normal"></highlight></codeline>
<codeline lineno="11371"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1ae41b2d2f89451e9659550845170d328a" kindref="member">Ace::RemoveAllWhitespace</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="11372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>buffer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="11374"><highlight class="normal"></highlight></codeline>
<codeline lineno="11375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="11376"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>(str);</highlight></codeline>
<codeline lineno="11378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ace_1a916dc3ddc85c0c5ad3840dfab4962f9e" kindref="member">Ace::RemoveAllWhitespaceInPlace</ref>(buffer);</highlight></codeline>
<codeline lineno="11379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11381"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RemoveAllWhitespace()<sp/>str<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11384"><highlight class="normal"></highlight></codeline>
<codeline lineno="11385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer;</highlight></codeline>
<codeline lineno="11386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11387"><highlight class="normal"></highlight></codeline>
<codeline lineno="11415"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a916dc3ddc85c0c5ad3840dfab4962f9e" kindref="member">Ace::RemoveAllWhitespaceInPlace</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="11416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tempWordIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numWhiteSpaceSkipped<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11419"><highlight class="normal"></highlight></codeline>
<codeline lineno="11420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>will<sp/>modify<sp/>the<sp/>existing<sp/>string<sp/>in<sp/>place<sp/>without<sp/>allocating<sp/>a<sp/>new<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="11422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Now<sp/>go<sp/>through<sp/>the<sp/>whole<sp/>word<sp/>and<sp/>filter<sp/>out<sp/>anything<sp/>that&apos;s<sp/>a<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>strlen(str);<sp/>currIndex++)</highlight></codeline>
<codeline lineno="11425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1a66a594470f47320362a57ae4a4a556aa" kindref="member">Ace::IsWhitespace</ref>(str[currIndex])<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str[tempWordIndex]<sp/>=<sp/>str[currIndex];</highlight></codeline>
<codeline lineno="11429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempWordIndex++;</highlight></codeline>
<codeline lineno="11430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11432"><highlight class="normal"></highlight></codeline>
<codeline lineno="11433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//End<sp/>the<sp/>string<sp/>at<sp/>&apos;tempWordIndex&apos;<sp/>since<sp/>it<sp/>is<sp/>smaller<sp/>then<sp/>the<sp/>original.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str[tempWordIndex]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11437"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RemoveAllWhitespaceInPlace()<sp/>str<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11441"><highlight class="normal"></highlight></codeline>
<codeline lineno="11469"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a916dc3ddc85c0c5ad3840dfab4962f9e" kindref="member">Ace::RemoveAllWhitespaceInPlace</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="11470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tempWordIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numWhiteSpaceSkipped<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11473"><highlight class="normal"></highlight></codeline>
<codeline lineno="11474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>will<sp/>modify<sp/>the<sp/>existing<sp/>string<sp/>in<sp/>place<sp/>without<sp/>allocating<sp/>a<sp/>new<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="11476"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Now<sp/>go<sp/>through<sp/>the<sp/>whole<sp/>word<sp/>and<sp/>filter<sp/>out<sp/>anything<sp/>that&apos;s<sp/>a<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>wcslen(str);<sp/>currIndex++)</highlight></codeline>
<codeline lineno="11479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1a66a594470f47320362a57ae4a4a556aa" kindref="member">Ace::IsWhitespace</ref>(str[currIndex])<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str[tempWordIndex]<sp/>=<sp/>str[currIndex];</highlight></codeline>
<codeline lineno="11483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempWordIndex++;</highlight></codeline>
<codeline lineno="11484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11486"><highlight class="normal"></highlight></codeline>
<codeline lineno="11487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//End<sp/>the<sp/>string<sp/>at<sp/>&apos;tempWordIndex&apos;<sp/>since<sp/>it<sp/>is<sp/>smaller<sp/>then<sp/>the<sp/>original.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str[tempWordIndex]<sp/>=<sp/>L</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11491"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RemoveAllWhitespaceInPlace()<sp/>str<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11495"><highlight class="normal"></highlight></codeline>
<codeline lineno="11524"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1ac4f88cf4ac3842c748ed4222bf885660" kindref="member">Ace::RemoveCharactersFromString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToRemoveFrom,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>charToRemove)</highlight></codeline>
<codeline lineno="11525"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToReturn<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="11527"><highlight class="normal"></highlight></codeline>
<codeline lineno="11528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToRemoveFrom<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="11529"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToReturn<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>(strToRemoveFrom);</highlight></codeline>
<codeline lineno="11531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ace_1a7a4f21e66792a5813fc50775ae75091c" kindref="member">Ace::RemoveCharactersFromStringInPlace</ref>(strToReturn,<sp/>charToRemove);</highlight></codeline>
<codeline lineno="11532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11534"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RemoveCharactersFromString()<sp/>strToRemoveFrom<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11537"><highlight class="normal"></highlight></codeline>
<codeline lineno="11538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strToReturn;</highlight></codeline>
<codeline lineno="11539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11540"><highlight class="normal"></highlight></codeline>
<codeline lineno="11569"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1ac4f88cf4ac3842c748ed4222bf885660" kindref="member">Ace::RemoveCharactersFromString</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToRemoveFrom,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>charToRemove)</highlight></codeline>
<codeline lineno="11570"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToReturn<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="11572"><highlight class="normal"></highlight></codeline>
<codeline lineno="11573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToRemoveFrom<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="11574"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToReturn<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>(strToRemoveFrom);</highlight></codeline>
<codeline lineno="11576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ace_1a7a4f21e66792a5813fc50775ae75091c" kindref="member">Ace::RemoveCharactersFromStringInPlace</ref>(strToReturn,<sp/>charToRemove);</highlight></codeline>
<codeline lineno="11577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11579"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RemoveCharactersFromString()<sp/>strToRemoveFrom<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11582"><highlight class="normal"></highlight></codeline>
<codeline lineno="11583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strToReturn;</highlight></codeline>
<codeline lineno="11584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11585"><highlight class="normal"></highlight></codeline>
<codeline lineno="11615"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a7a4f21e66792a5813fc50775ae75091c" kindref="member">Ace::RemoveCharactersFromStringInPlace</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToRemoveFrom,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>charToRemove)</highlight></codeline>
<codeline lineno="11616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>will<sp/>modify<sp/>the<sp/>existing<sp/>string<sp/>in<sp/>place<sp/>without<sp/>allocating<sp/>a<sp/>new<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wordLength;</highlight></codeline>
<codeline lineno="11619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tempWordIndex;</highlight></codeline>
<codeline lineno="11620"><highlight class="normal"></highlight></codeline>
<codeline lineno="11621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToRemoveFrom<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="11622"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wordLength<sp/>=<sp/>strlen(strToRemoveFrom)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="11624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempWordIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11625"><highlight class="normal"></highlight></codeline>
<codeline lineno="11626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Now<sp/>go<sp/>through<sp/>the<sp/>whole<sp/>word<sp/>and<sp/>filter<sp/>out<sp/>anything<sp/>that&apos;s<sp/>a<sp/>new<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>wordLength;<sp/>i++)</highlight></codeline>
<codeline lineno="11628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Only<sp/>copy<sp/>over<sp/>the<sp/>character<sp/>if<sp/>it<sp/>is<sp/>NOT<sp/>charToRemove.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*(strToRemoveFrom<sp/>+<sp/>i)<sp/>!=<sp/>charToRemove)</highlight></codeline>
<codeline lineno="11631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(strToRemoveFrom<sp/>+<sp/>tempWordIndex)<sp/>=<sp/>*(strToRemoveFrom<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="11633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempWordIndex++;</highlight></codeline>
<codeline lineno="11634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11636"><highlight class="normal"></highlight></codeline>
<codeline lineno="11637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//End<sp/>the<sp/>string<sp/>at<sp/>&apos;tempWordIndex&apos;<sp/>since<sp/>it<sp/>is<sp/>smaller<sp/>than<sp/>the<sp/>original.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(strToRemoveFrom<sp/>+<sp/>tempWordIndex)<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11641"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RemoveCharactersFromStringInPlace()<sp/>strToRemoveFrom<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11645"><highlight class="normal"></highlight></codeline>
<codeline lineno="11675"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a7a4f21e66792a5813fc50775ae75091c" kindref="member">Ace::RemoveCharactersFromStringInPlace</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToRemoveFrom,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>charToRemove)</highlight></codeline>
<codeline lineno="11676"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>will<sp/>modify<sp/>the<sp/>existing<sp/>string<sp/>in<sp/>place<sp/>without<sp/>allocating<sp/>a<sp/>new<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wordLength;</highlight></codeline>
<codeline lineno="11679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tempWordIndex;</highlight></codeline>
<codeline lineno="11680"><highlight class="normal"></highlight></codeline>
<codeline lineno="11681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToRemoveFrom<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="11682"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wordLength<sp/>=<sp/>wcslen(strToRemoveFrom)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="11684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempWordIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="11685"><highlight class="normal"></highlight></codeline>
<codeline lineno="11686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Now<sp/>go<sp/>through<sp/>the<sp/>whole<sp/>word<sp/>and<sp/>filter<sp/>out<sp/>anything<sp/>that&apos;s<sp/>a<sp/>new<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>wordLength;<sp/>i++)</highlight></codeline>
<codeline lineno="11688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Only<sp/>copy<sp/>over<sp/>the<sp/>character<sp/>if<sp/>it<sp/>is<sp/>NOT<sp/>charToRemove.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*(strToRemoveFrom<sp/>+<sp/>i)<sp/>!=<sp/>charToRemove)</highlight></codeline>
<codeline lineno="11691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(strToRemoveFrom<sp/>+<sp/>tempWordIndex)<sp/>=<sp/>*(strToRemoveFrom<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="11693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempWordIndex++;</highlight></codeline>
<codeline lineno="11694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11696"><highlight class="normal"></highlight></codeline>
<codeline lineno="11697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//End<sp/>the<sp/>string<sp/>at<sp/>&apos;tempWordIndex&apos;<sp/>since<sp/>it<sp/>is<sp/>smaller<sp/>than<sp/>the<sp/>original.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(strToRemoveFrom<sp/>+<sp/>tempWordIndex)<sp/>=<sp/>L</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11701"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RemoveCharactersFromStringInPlace()<sp/>strToRemoveFrom<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11705"><highlight class="normal"></highlight></codeline>
<codeline lineno="11735"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a504e21dc8f952771008044a2811c91e7" kindref="member">Ace::RemoveStringFromString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToRemoveFrom,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToRemove,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeOnlyFirstOccurrence)</highlight></codeline>
<codeline lineno="11736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="11738"><highlight class="normal"></highlight></codeline>
<codeline lineno="11739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToRemoveFrom<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToRemove<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="11740"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>(strToRemoveFrom);</highlight></codeline>
<codeline lineno="11742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ace_1a7e4cf99af9e3cd3f2a74fc29d72825c2" kindref="member">Ace::RemoveStringFromStringInPlace</ref>(buffer,<sp/>strToRemove);</highlight></codeline>
<codeline lineno="11743"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11745"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RemoveStringFromString()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11748"><highlight class="normal"></highlight></codeline>
<codeline lineno="11749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer;</highlight></codeline>
<codeline lineno="11750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11751"><highlight class="normal"></highlight></codeline>
<codeline lineno="11781"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a504e21dc8f952771008044a2811c91e7" kindref="member">Ace::RemoveStringFromString</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToRemoveFrom,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToRemove,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeOnlyFirstOccurrence)</highlight></codeline>
<codeline lineno="11782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>buffer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="11784"><highlight class="normal"></highlight></codeline>
<codeline lineno="11785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToRemoveFrom<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToRemove<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="11786"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>(strToRemoveFrom);</highlight></codeline>
<codeline lineno="11788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ace_1a7e4cf99af9e3cd3f2a74fc29d72825c2" kindref="member">Ace::RemoveStringFromStringInPlace</ref>(buffer,<sp/>strToRemove);</highlight></codeline>
<codeline lineno="11789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11791"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RemoveStringFromString()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11794"><highlight class="normal"></highlight></codeline>
<codeline lineno="11795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer;</highlight></codeline>
<codeline lineno="11796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11797"><highlight class="normal"></highlight></codeline>
<codeline lineno="11828"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a7e4cf99af9e3cd3f2a74fc29d72825c2" kindref="member">Ace::RemoveStringFromStringInPlace</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*&amp;<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToLookFor,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeOnlyFirstOccurrence)</highlight></codeline>
<codeline lineno="11829"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>leftHalf;</highlight></codeline>
<codeline lineno="11831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>rightHalf;</highlight></codeline>
<codeline lineno="11832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempSub;</highlight></codeline>
<codeline lineno="11833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tempIndex;</highlight></codeline>
<codeline lineno="11834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToLookForLen;</highlight></codeline>
<codeline lineno="11835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToSearchLen;</highlight></codeline>
<codeline lineno="11836"><highlight class="normal"></highlight></codeline>
<codeline lineno="11837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToLookFor<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="11838"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Record<sp/>the<sp/>lengths<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>keep<sp/>calling<sp/>strlen().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToLookForLen<sp/>=<sp/>strlen(strToLookFor);</highlight></codeline>
<codeline lineno="11841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearchLen<sp/>=<sp/>strlen(strToSearch)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="11842"><highlight class="normal"></highlight></codeline>
<codeline lineno="11843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>(strToSearchLen<sp/>-<sp/>strToLookForLen)<sp/>+<sp/>1;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="11844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempSub<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToSearch,<sp/>currIndex,<sp/>currIndex<sp/>+<sp/>strToLookForLen);</highlight></codeline>
<codeline lineno="11846"><highlight class="normal"></highlight></codeline>
<codeline lineno="11847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Found<sp/>the<sp/>substring<sp/>to<sp/>replace.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tempSub,<sp/>strToLookFor)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="11849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Take<sp/>the<sp/>portion<sp/>of<sp/>the<sp/>string<sp/>that<sp/>comes<sp/>before<sp/>our<sp/>found<sp/>substring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftHalf<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToSearch,<sp/>0,<sp/>currIndex);</highlight></codeline>
<codeline lineno="11852"><highlight class="normal"></highlight></codeline>
<codeline lineno="11853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Take<sp/>the<sp/>portion<sp/>of<sp/>the<sp/>string<sp/>that<sp/>comes<sp/>after<sp/>our<sp/>found<sp/>substring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightHalf<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToSearch,<sp/>currIndex<sp/>+<sp/>strToLookForLen);</highlight></codeline>
<codeline lineno="11855"><highlight class="normal"></highlight></codeline>
<codeline lineno="11856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Free<sp/>the<sp/>current<sp/>strToSearch<sp/>since<sp/>we<sp/>are<sp/>overwriting<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(strToSearch);</highlight></codeline>
<codeline lineno="11858"><highlight class="normal"></highlight></codeline>
<codeline lineno="11859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Combine<sp/>the<sp/>left<sp/>and<sp/>right<sp/>parts<sp/>which<sp/>effectively<sp/>deletes<sp/>the<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearch<sp/>=<sp/><ref refid="class_ace_1a54627c41eea2730839d98f33542a5492" kindref="member">Ace::Concatenate</ref>(2,<sp/>leftHalf,<sp/>rightHalf);</highlight></codeline>
<codeline lineno="11861"><highlight class="normal"></highlight></codeline>
<codeline lineno="11862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Go<sp/>back<sp/>one<sp/>spot<sp/>since<sp/>we<sp/>just<sp/>combined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currIndex--;</highlight></codeline>
<codeline lineno="11864"><highlight class="normal"></highlight></codeline>
<codeline lineno="11865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Re-get<sp/>the<sp/>length<sp/>since<sp/>it<sp/>changed<sp/>with<sp/>concatenate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearchLen<sp/>=<sp/>strlen(strToSearch)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="11867"><highlight class="normal"></highlight></codeline>
<codeline lineno="11868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(leftHalf);</highlight></codeline>
<codeline lineno="11869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(rightHalf);</highlight></codeline>
<codeline lineno="11870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(tempSub);</highlight></codeline>
<codeline lineno="11871"><highlight class="normal"></highlight></codeline>
<codeline lineno="11872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(removeOnlyFirstOccurrence<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//Kick<sp/>Out<sp/>The<sp/>Epic<sp/>Mother<sp/>Fucker!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//No<sp/>match<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(tempSub);</highlight></codeline>
<codeline lineno="11881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11883"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11885"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RemoveStringFromString()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11887"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11889"><highlight class="normal"></highlight></codeline>
<codeline lineno="11920"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a7e4cf99af9e3cd3f2a74fc29d72825c2" kindref="member">Ace::RemoveStringFromStringInPlace</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*&amp;<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToLookFor,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeOnlyFirstOccurrence)</highlight></codeline>
<codeline lineno="11921"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>leftHalf;</highlight></codeline>
<codeline lineno="11923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>rightHalf;</highlight></codeline>
<codeline lineno="11924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>tempSub;</highlight></codeline>
<codeline lineno="11925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tempIndex;</highlight></codeline>
<codeline lineno="11926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToLookForLen;</highlight></codeline>
<codeline lineno="11927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToSearchLen;</highlight></codeline>
<codeline lineno="11928"><highlight class="normal"></highlight></codeline>
<codeline lineno="11929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToLookFor<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="11930"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Record<sp/>the<sp/>lengths<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>keep<sp/>calling<sp/>strlen().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToLookForLen<sp/>=<sp/>wcslen(strToLookFor);</highlight></codeline>
<codeline lineno="11933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearchLen<sp/>=<sp/>wcslen(strToSearch)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="11934"><highlight class="normal"></highlight></codeline>
<codeline lineno="11935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>(strToSearchLen<sp/>-<sp/>strToLookForLen)<sp/>+<sp/>1;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="11936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempSub<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToSearch,<sp/>currIndex,<sp/>currIndex<sp/>+<sp/>strToLookForLen);</highlight></codeline>
<codeline lineno="11938"><highlight class="normal"></highlight></codeline>
<codeline lineno="11939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Found<sp/>the<sp/>substring<sp/>to<sp/>replace.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wcscmp(tempSub,<sp/>strToLookFor)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="11941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Take<sp/>the<sp/>portion<sp/>of<sp/>the<sp/>string<sp/>that<sp/>comes<sp/>before<sp/>our<sp/>found<sp/>substring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftHalf<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToSearch,<sp/>0,<sp/>currIndex);</highlight></codeline>
<codeline lineno="11944"><highlight class="normal"></highlight></codeline>
<codeline lineno="11945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Take<sp/>the<sp/>portion<sp/>of<sp/>the<sp/>string<sp/>that<sp/>comes<sp/>after<sp/>our<sp/>found<sp/>substring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightHalf<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToSearch,<sp/>currIndex<sp/>+<sp/>strToLookForLen);</highlight></codeline>
<codeline lineno="11947"><highlight class="normal"></highlight></codeline>
<codeline lineno="11948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Free<sp/>the<sp/>current<sp/>strToSearch<sp/>since<sp/>we<sp/>are<sp/>overwriting<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(strToSearch);</highlight></codeline>
<codeline lineno="11950"><highlight class="normal"></highlight></codeline>
<codeline lineno="11951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Combine<sp/>the<sp/>left<sp/>and<sp/>right<sp/>parts<sp/>which<sp/>effectively<sp/>deletes<sp/>the<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearch<sp/>=<sp/><ref refid="class_ace_1af0cd7dce3668bd1ee3e9f86b687caa5c" kindref="member">Ace::ConcatenateW</ref>(2,<sp/>leftHalf,<sp/>rightHalf);</highlight></codeline>
<codeline lineno="11953"><highlight class="normal"></highlight></codeline>
<codeline lineno="11954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Go<sp/>back<sp/>one<sp/>spot<sp/>since<sp/>we<sp/>just<sp/>combined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currIndex--;</highlight></codeline>
<codeline lineno="11956"><highlight class="normal"></highlight></codeline>
<codeline lineno="11957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Re-get<sp/>the<sp/>length<sp/>since<sp/>it<sp/>changed<sp/>with<sp/>concatenate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearchLen<sp/>=<sp/>wcslen(strToSearch)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="11959"><highlight class="normal"></highlight></codeline>
<codeline lineno="11960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(leftHalf);</highlight></codeline>
<codeline lineno="11961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(rightHalf);</highlight></codeline>
<codeline lineno="11962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(tempSub);</highlight></codeline>
<codeline lineno="11963"><highlight class="normal"></highlight></codeline>
<codeline lineno="11964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(removeOnlyFirstOccurrence<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="11965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//Kick<sp/>Out<sp/>The<sp/>Epic<sp/>Mother<sp/>Fucker!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//No<sp/>match<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(tempSub);</highlight></codeline>
<codeline lineno="11973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11975"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11977"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RemoveStringFromString()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11979"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11981"><highlight class="normal"></highlight></codeline>
<codeline lineno="12013"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1af39e7d9f018b9ee33950b52ef9d14f14" kindref="member">Ace::ReplaceString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToLookFor,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToReplaceWith,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeOnlyFirstOccurrence)</highlight></codeline>
<codeline lineno="12014"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strSearch<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12016"><highlight class="normal"></highlight></codeline>
<codeline lineno="12017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToLookFor<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToReplaceWith<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="12018"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strSearch<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>(strToSearch);</highlight></codeline>
<codeline lineno="12020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ace_1a554b74fb326bd89ad29a0561b4d817e2" kindref="member">Ace::ReplaceStringInPlace</ref>(strSearch,<sp/>strToLookFor,<sp/>strToReplaceWith,<sp/>removeOnlyFirstOccurrence);</highlight></codeline>
<codeline lineno="12021"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12023"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReplaceString()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12025"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12026"><highlight class="normal"></highlight></codeline>
<codeline lineno="12027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strSearch;</highlight></codeline>
<codeline lineno="12028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12029"><highlight class="normal"></highlight></codeline>
<codeline lineno="12061"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1af39e7d9f018b9ee33950b52ef9d14f14" kindref="member">Ace::ReplaceString</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToLookFor,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToReplaceWith,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeOnlyFirstOccurrence)</highlight></codeline>
<codeline lineno="12062"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strSearch<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12064"><highlight class="normal"></highlight></codeline>
<codeline lineno="12065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToLookFor<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToReplaceWith<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="12066"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strSearch<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>(strToSearch);</highlight></codeline>
<codeline lineno="12068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ace_1a554b74fb326bd89ad29a0561b4d817e2" kindref="member">Ace::ReplaceStringInPlace</ref>(strSearch,<sp/>strToLookFor,<sp/>strToReplaceWith,<sp/>removeOnlyFirstOccurrence);</highlight></codeline>
<codeline lineno="12069"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12071"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReplaceString()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12073"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12074"><highlight class="normal"></highlight></codeline>
<codeline lineno="12075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strSearch;</highlight></codeline>
<codeline lineno="12076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12077"><highlight class="normal"></highlight></codeline>
<codeline lineno="12111"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a554b74fb326bd89ad29a0561b4d817e2" kindref="member">Ace::ReplaceStringInPlace</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*&amp;<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToLookFor,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToReplaceWith,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeOnlyFirstOccurrence)</highlight></codeline>
<codeline lineno="12112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>leftHalf;</highlight></codeline>
<codeline lineno="12114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>rightHalf;</highlight></codeline>
<codeline lineno="12115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempSub;</highlight></codeline>
<codeline lineno="12116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToLookForLen;</highlight></codeline>
<codeline lineno="12117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToSearchLen;</highlight></codeline>
<codeline lineno="12118"><highlight class="normal"></highlight></codeline>
<codeline lineno="12119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToLookFor<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="12120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Record<sp/>the<sp/>lengths<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>keep<sp/>calling<sp/>strlen().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToLookForLen<sp/>=<sp/>strlen(strToLookFor);</highlight></codeline>
<codeline lineno="12123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearchLen<sp/>=<sp/>strlen(strToSearch)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="12124"><highlight class="normal"></highlight></codeline>
<codeline lineno="12125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>(strToSearchLen<sp/>-<sp/>strToLookForLen)<sp/>+<sp/>1;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="12126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempSub<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToSearch,<sp/>currIndex,<sp/>currIndex<sp/>+<sp/>strToLookForLen);</highlight></codeline>
<codeline lineno="12128"><highlight class="normal"></highlight></codeline>
<codeline lineno="12129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Found<sp/>the<sp/>substring<sp/>to<sp/>replace.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(tempSub,<sp/>strToLookFor)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="12131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Take<sp/>the<sp/>portion<sp/>of<sp/>the<sp/>string<sp/>that<sp/>comes<sp/>before<sp/>our<sp/>found<sp/>substring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftHalf<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToSearch,<sp/>0,<sp/>currIndex);</highlight></codeline>
<codeline lineno="12134"><highlight class="normal"></highlight></codeline>
<codeline lineno="12135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Take<sp/>the<sp/>portion<sp/>of<sp/>the<sp/>string<sp/>that<sp/>comes<sp/>after<sp/>our<sp/>found<sp/>substring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightHalf<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToSearch,<sp/>currIndex<sp/>+<sp/>strToLookForLen);</highlight></codeline>
<codeline lineno="12137"><highlight class="normal"></highlight></codeline>
<codeline lineno="12138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Free<sp/>the<sp/>current<sp/>strToSearch<sp/>since<sp/>we<sp/>are<sp/>overwriting<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(strToSearch);</highlight></codeline>
<codeline lineno="12140"><highlight class="normal"></highlight></codeline>
<codeline lineno="12141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Combine<sp/>the<sp/>two<sp/>halves<sp/>with<sp/>the<sp/>replacement<sp/>in<sp/>the<sp/>middle,<sp/>this<sp/>effectively<sp/>removes<sp/>the<sp/>previous<sp/>substring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearch<sp/>=<sp/><ref refid="class_ace_1a54627c41eea2730839d98f33542a5492" kindref="member">Ace::Concatenate</ref>(3,<sp/>leftHalf,<sp/>strToReplaceWith,<sp/>rightHalf);</highlight></codeline>
<codeline lineno="12143"><highlight class="normal"></highlight></codeline>
<codeline lineno="12144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Re-get<sp/>the<sp/>length<sp/>since<sp/>it<sp/>changed<sp/>with<sp/>concatenate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearchLen<sp/>=<sp/>strlen(strToSearch)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="12146"><highlight class="normal"></highlight></codeline>
<codeline lineno="12147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(leftHalf);</highlight></codeline>
<codeline lineno="12148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(rightHalf);</highlight></codeline>
<codeline lineno="12149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(tempSub);</highlight></codeline>
<codeline lineno="12150"><highlight class="normal"></highlight></codeline>
<codeline lineno="12151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(removeOnlyFirstOccurrence<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//Kick<sp/>Out<sp/>The<sp/>Epic<sp/>Mother<sp/>Fucker!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12155"><highlight class="normal"></highlight></codeline>
<codeline lineno="12156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//No<sp/>match<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(tempSub);</highlight></codeline>
<codeline lineno="12161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReplaceStringInPlace()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12169"><highlight class="normal"></highlight></codeline>
<codeline lineno="12203"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a554b74fb326bd89ad29a0561b4d817e2" kindref="member">Ace::ReplaceStringInPlace</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*&amp;<sp/>strToSearch,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToLookFor,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToReplaceWith,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeOnlyFirstOccurrence)</highlight></codeline>
<codeline lineno="12204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>leftHalf;</highlight></codeline>
<codeline lineno="12206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>rightHalf;</highlight></codeline>
<codeline lineno="12207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>tempSub;</highlight></codeline>
<codeline lineno="12208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToLookForLen;</highlight></codeline>
<codeline lineno="12209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToSearchLen;</highlight></codeline>
<codeline lineno="12210"><highlight class="normal"></highlight></codeline>
<codeline lineno="12211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToSearch<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>strToLookFor<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="12212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Record<sp/>the<sp/>lengths<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>keep<sp/>calling<sp/>wcslen().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToLookForLen<sp/>=<sp/>wcslen(strToLookFor);</highlight></codeline>
<codeline lineno="12215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearchLen<sp/>=<sp/>wcslen(strToSearch)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="12216"><highlight class="normal"></highlight></codeline>
<codeline lineno="12217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>(strToSearchLen<sp/>-<sp/>strToLookForLen)<sp/>+<sp/>1;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="12218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempSub<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToSearch,<sp/>currIndex,<sp/>currIndex<sp/>+<sp/>strToLookForLen);</highlight></codeline>
<codeline lineno="12220"><highlight class="normal"></highlight></codeline>
<codeline lineno="12221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Found<sp/>the<sp/>substring<sp/>to<sp/>replace.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wcscmp(tempSub,<sp/>strToLookFor)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="12223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Take<sp/>the<sp/>portion<sp/>of<sp/>the<sp/>string<sp/>that<sp/>comes<sp/>before<sp/>our<sp/>found<sp/>substring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftHalf<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToSearch,<sp/>0,<sp/>currIndex);</highlight></codeline>
<codeline lineno="12226"><highlight class="normal"></highlight></codeline>
<codeline lineno="12227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Take<sp/>the<sp/>portion<sp/>of<sp/>the<sp/>string<sp/>that<sp/>comes<sp/>after<sp/>our<sp/>found<sp/>substring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightHalf<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToSearch,<sp/>currIndex<sp/>+<sp/>strToLookForLen);</highlight></codeline>
<codeline lineno="12229"><highlight class="normal"></highlight></codeline>
<codeline lineno="12230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Free<sp/>the<sp/>current<sp/>strToSearch<sp/>since<sp/>we<sp/>are<sp/>overwriting<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(strToSearch);</highlight></codeline>
<codeline lineno="12232"><highlight class="normal"></highlight></codeline>
<codeline lineno="12233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Combine<sp/>the<sp/>two<sp/>halves<sp/>with<sp/>the<sp/>replacement<sp/>in<sp/>the<sp/>middle,<sp/>this<sp/>effectively<sp/>removes<sp/>the<sp/>previous<sp/>substring.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearch<sp/>=<sp/><ref refid="class_ace_1af0cd7dce3668bd1ee3e9f86b687caa5c" kindref="member">Ace::ConcatenateW</ref>(3,<sp/>leftHalf,<sp/>strToReplaceWith,<sp/>rightHalf);</highlight></codeline>
<codeline lineno="12235"><highlight class="normal"></highlight></codeline>
<codeline lineno="12236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Re-get<sp/>the<sp/>length<sp/>since<sp/>it<sp/>changed<sp/>with<sp/>concatenate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToSearchLen<sp/>=<sp/>wcslen(strToSearch)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="12238"><highlight class="normal"></highlight></codeline>
<codeline lineno="12239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(leftHalf);</highlight></codeline>
<codeline lineno="12240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(rightHalf);</highlight></codeline>
<codeline lineno="12241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(tempSub);</highlight></codeline>
<codeline lineno="12242"><highlight class="normal"></highlight></codeline>
<codeline lineno="12243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(removeOnlyFirstOccurrence<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//Kick<sp/>Out<sp/>The<sp/>Epic<sp/>Mother<sp/>Fucker!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tempSub<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="12249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//No<sp/>match<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(tempSub);</highlight></codeline>
<codeline lineno="12252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12256"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReplaceStringInPlace()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12260"><highlight class="normal"></highlight></codeline>
<codeline lineno="12291"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a15c42f6a53a7eaaf7a33b62d0cf3d015" kindref="member">Ace::RetrieveDataBetweenTags</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>startTag,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>endTag)</highlight></codeline>
<codeline lineno="12292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="12294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="12295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12296"><highlight class="normal"></highlight></codeline>
<codeline lineno="12297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileData<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>startTag<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>endTag<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="12298"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIndex<sp/>=<sp/><ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(fileData,<sp/>startTag);</highlight></codeline>
<codeline lineno="12300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endIndex<sp/>=<sp/><ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(fileData,<sp/>endTag);</highlight></codeline>
<codeline lineno="12301"><highlight class="normal"></highlight></codeline>
<codeline lineno="12302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startIndex<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>endIndex<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="12303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Add<sp/>the<sp/>length<sp/>to<sp/>the<sp/>startIndex<sp/>so<sp/>we<sp/>begin<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>startTag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIndex<sp/>=<sp/>startIndex<sp/>+<sp/>strlen(startTag);</highlight></codeline>
<codeline lineno="12306"><highlight class="normal"></highlight></codeline>
<codeline lineno="12307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>data<sp/>from<sp/>the<sp/>end<sp/>of<sp/>the<sp/>start<sp/>tag<sp/>up<sp/>to<sp/>(but<sp/>not<sp/>including)<sp/>the<sp/>endIndex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/><ref refid="class_ace_1a15c42f6a53a7eaaf7a33b62d0cf3d015" kindref="member">Ace::RetrieveDataBetweenTags</ref>(fileData,<sp/>startIndex,<sp/>endIndex);</highlight></codeline>
<codeline lineno="12309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RetrieveDataBetweenTags()<sp/>Indices<sp/>cannot<sp/>be<sp/>negative.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12316"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RetrieveDataBetweenTags()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12319"><highlight class="normal"></highlight></codeline>
<codeline lineno="12320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="12321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12322"><highlight class="normal"></highlight></codeline>
<codeline lineno="12353"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a15c42f6a53a7eaaf7a33b62d0cf3d015" kindref="member">Ace::RetrieveDataBetweenTags</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>fileData,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>startTag,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>endTag)</highlight></codeline>
<codeline lineno="12354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="12356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="12357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>data<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12358"><highlight class="normal"></highlight></codeline>
<codeline lineno="12359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileData<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>startTag<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>endTag<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="12360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIndex<sp/>=<sp/><ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(fileData,<sp/>startTag);</highlight></codeline>
<codeline lineno="12362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endIndex<sp/>=<sp/><ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(fileData,<sp/>endTag);</highlight></codeline>
<codeline lineno="12363"><highlight class="normal"></highlight></codeline>
<codeline lineno="12364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startIndex<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>endIndex<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="12365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Add<sp/>the<sp/>length<sp/>to<sp/>the<sp/>startIndex<sp/>so<sp/>we<sp/>begin<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>startTag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIndex<sp/>=<sp/>startIndex<sp/>+<sp/>wcslen(startTag);</highlight></codeline>
<codeline lineno="12368"><highlight class="normal"></highlight></codeline>
<codeline lineno="12369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>data<sp/>from<sp/>the<sp/>end<sp/>of<sp/>the<sp/>start<sp/>tag<sp/>up<sp/>to<sp/>(but<sp/>not<sp/>including)<sp/>the<sp/>endIndex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/><ref refid="class_ace_1a15c42f6a53a7eaaf7a33b62d0cf3d015" kindref="member">Ace::RetrieveDataBetweenTags</ref>(fileData,<sp/>startIndex,<sp/>endIndex);</highlight></codeline>
<codeline lineno="12371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RetrieveDataBetweenTags()<sp/>Indices<sp/>cannot<sp/>be<sp/>negative.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12378"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RetrieveDataBetweenTags()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12381"><highlight class="normal"></highlight></codeline>
<codeline lineno="12382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="12383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12384"><highlight class="normal"></highlight></codeline>
<codeline lineno="12417"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a15c42f6a53a7eaaf7a33b62d0cf3d015" kindref="member">Ace::RetrieveDataBetweenTags</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startTagIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endTagIndex)</highlight></codeline>
<codeline lineno="12418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileData<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>startTagIndex<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>endTagIndex<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>endTagIndex<sp/>&gt;<sp/>startTagIndex)</highlight></codeline>
<codeline lineno="12420"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(fileData,<sp/>startTagIndex,<sp/>startTagIndex<sp/>+<sp/>(endTagIndex<sp/>-<sp/>startTagIndex));</highlight></codeline>
<codeline lineno="12422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12424"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RetrieveDataBetweenTags()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12427"><highlight class="normal"></highlight></codeline>
<codeline lineno="12428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="12429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12430"><highlight class="normal"></highlight></codeline>
<codeline lineno="12463"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1a15c42f6a53a7eaaf7a33b62d0cf3d015" kindref="member">Ace::RetrieveDataBetweenTags</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>fileData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startTagIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endTagIndex)</highlight></codeline>
<codeline lineno="12464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileData<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>startTagIndex<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>endTagIndex<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>endTagIndex<sp/>&gt;<sp/>startTagIndex)</highlight></codeline>
<codeline lineno="12466"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(fileData,<sp/>startTagIndex,<sp/>startTagIndex<sp/>+<sp/>(endTagIndex<sp/>-<sp/>startTagIndex));</highlight></codeline>
<codeline lineno="12468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12470"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RetrieveDataBetweenTags()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12473"><highlight class="normal"></highlight></codeline>
<codeline lineno="12474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="12475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12476"><highlight class="normal"></highlight></codeline>
<codeline lineno="12532"><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><ref refid="class_ace_1a639fcb40de735847ee36b09ebaf58243" kindref="member">Ace::RetrieveDataChunksBetweenTags</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileData,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>startTag,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>endTag,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>outFinalBufferSize)</highlight></codeline>
<codeline lineno="12533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12534"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;char*&gt;<sp/>dataChunksVectorArray;</highlight></codeline>
<codeline lineno="12535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>dataChunksArray<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data<sp/>=<sp/>fileData;</highlight></codeline>
<codeline lineno="12537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="12538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="12539"><highlight class="normal"></highlight></codeline>
<codeline lineno="12540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>startTag<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>endTag<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="12541"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Grab<sp/>the<sp/>data<sp/>in<sp/>the<sp/>file<sp/>between<sp/>each<sp/>&lt;ClassName&gt;<sp/>and<sp/>&lt;/ClassName&gt;<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(data,<sp/>endTag)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="12544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIndex<sp/>=<sp/><ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(data,<sp/>startTag);</highlight></codeline>
<codeline lineno="12546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endIndex<sp/>=<sp/><ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(data,<sp/>endTag);</highlight></codeline>
<codeline lineno="12547"><highlight class="normal"></highlight></codeline>
<codeline lineno="12548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startIndex<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>endIndex<sp/>&gt;<sp/>startIndex)</highlight></codeline>
<codeline lineno="12549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Add<sp/>the<sp/>length<sp/>to<sp/>the<sp/>startIndex<sp/>so<sp/>we<sp/>begin<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>startTag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIndex<sp/>=<sp/>startIndex<sp/>+<sp/>strlen(startTag);</highlight></codeline>
<codeline lineno="12552"><highlight class="normal"></highlight></codeline>
<codeline lineno="12553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataChunksVectorArray.push_back(<ref refid="class_ace_1a15c42f6a53a7eaaf7a33b62d0cf3d015" kindref="member">Ace::RetrieveDataBetweenTags</ref>(data,<sp/>startIndex,<sp/>endIndex));</highlight></codeline>
<codeline lineno="12554"><highlight class="normal"></highlight></codeline>
<codeline lineno="12555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Go<sp/>past<sp/>the<sp/>end<sp/>tag<sp/>to<sp/>the<sp/>next<sp/>item.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>+=<sp/>endIndex<sp/>+<sp/>strlen(endTag);</highlight></codeline>
<codeline lineno="12557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Couldn&apos;t<sp/>find<sp/>the<sp/>tag(s)<sp/>so<sp/>break<sp/>out<sp/>of<sp/>the<sp/>loop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12564"><highlight class="normal"></highlight></codeline>
<codeline lineno="12565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outFinalBufferSize<sp/>=<sp/>dataChunksVectorArray.size();</highlight></codeline>
<codeline lineno="12566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataChunksArray<sp/>=<sp/><ref refid="class_ace_1a3e82ab0d2c6c04e8bea91b0b7dbaae57" kindref="member">Ace::ConvertStringVectorArrayToStringArray</ref>(dataChunksVectorArray,<sp/>outFinalBufferSize);</highlight></codeline>
<codeline lineno="12567"><highlight class="normal"></highlight></codeline>
<codeline lineno="12568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clean<sp/>up<sp/>the<sp/>vector<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>dataChunksVectorArray.size();<sp/>currIndex++)</highlight></codeline>
<codeline lineno="12570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(dataChunksVectorArray[currIndex]);</highlight></codeline>
<codeline lineno="12572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataChunksVectorArray.clear();</highlight></codeline>
<codeline lineno="12574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12576"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RetrieveDataChunksBetweenTags()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12579"><highlight class="normal"></highlight></codeline>
<codeline lineno="12580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dataChunksArray;</highlight></codeline>
<codeline lineno="12581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12582"><highlight class="normal"></highlight></codeline>
<codeline lineno="12638"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">**<sp/><ref refid="class_ace_1a639fcb40de735847ee36b09ebaf58243" kindref="member">Ace::RetrieveDataChunksBetweenTags</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>fileData,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>startTag,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>endTag,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>outFinalBufferSize)</highlight></codeline>
<codeline lineno="12639"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12640"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;wchar_t*&gt;<sp/>dataChunksVectorArray;</highlight></codeline>
<codeline lineno="12641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">**<sp/>dataChunksArray<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>data<sp/>=<sp/>fileData;</highlight></codeline>
<codeline lineno="12643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="12644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="12645"><highlight class="normal"></highlight></codeline>
<codeline lineno="12646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>startTag<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>endTag<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="12647"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Grab<sp/>the<sp/>data<sp/>in<sp/>the<sp/>file<sp/>between<sp/>each<sp/>&lt;ClassName&gt;<sp/>and<sp/>&lt;/ClassName&gt;<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(data,<sp/>endTag)<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="12650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIndex<sp/>=<sp/><ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(data,<sp/>startTag);</highlight></codeline>
<codeline lineno="12652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endIndex<sp/>=<sp/><ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(data,<sp/>endTag);</highlight></codeline>
<codeline lineno="12653"><highlight class="normal"></highlight></codeline>
<codeline lineno="12654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startIndex<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>endIndex<sp/>&gt;<sp/>startIndex)</highlight></codeline>
<codeline lineno="12655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Add<sp/>the<sp/>length<sp/>to<sp/>the<sp/>startIndex<sp/>so<sp/>we<sp/>begin<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>startTag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startIndex<sp/>=<sp/>startIndex<sp/>+<sp/>wcslen(startTag);</highlight></codeline>
<codeline lineno="12658"><highlight class="normal"></highlight></codeline>
<codeline lineno="12659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataChunksVectorArray.push_back(<ref refid="class_ace_1a15c42f6a53a7eaaf7a33b62d0cf3d015" kindref="member">Ace::RetrieveDataBetweenTags</ref>(data,<sp/>startIndex,<sp/>endIndex));</highlight></codeline>
<codeline lineno="12660"><highlight class="normal"></highlight></codeline>
<codeline lineno="12661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Go<sp/>past<sp/>the<sp/>end<sp/>tag<sp/>to<sp/>the<sp/>next<sp/>item.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>+=<sp/>endIndex<sp/>+<sp/>wcslen(endTag);</highlight></codeline>
<codeline lineno="12663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Couldn&apos;t<sp/>find<sp/>the<sp/>tag(s)<sp/>so<sp/>break<sp/>out<sp/>of<sp/>the<sp/>loop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12670"><highlight class="normal"></highlight></codeline>
<codeline lineno="12671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outFinalBufferSize<sp/>=<sp/>dataChunksVectorArray.size();</highlight></codeline>
<codeline lineno="12672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataChunksArray<sp/>=<sp/><ref refid="class_ace_1a3e82ab0d2c6c04e8bea91b0b7dbaae57" kindref="member">Ace::ConvertStringVectorArrayToStringArray</ref>(dataChunksVectorArray,<sp/>outFinalBufferSize);</highlight></codeline>
<codeline lineno="12673"><highlight class="normal"></highlight></codeline>
<codeline lineno="12674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clean<sp/>up<sp/>the<sp/>vector<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>dataChunksVectorArray.size();<sp/>currIndex++)</highlight></codeline>
<codeline lineno="12676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(dataChunksVectorArray[currIndex]);</highlight></codeline>
<codeline lineno="12678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataChunksVectorArray.clear();</highlight></codeline>
<codeline lineno="12680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12682"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RetrieveDataChunksBetweenTags()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12685"><highlight class="normal"></highlight></codeline>
<codeline lineno="12686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dataChunksArray;</highlight></codeline>
<codeline lineno="12687"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12688"><highlight class="normal"></highlight></codeline>
<codeline lineno="12722"><highlight class="normal">vector&lt;char*&gt;<sp/><ref refid="class_ace_1a1126579b6ddd052f90e987ef056fad70" kindref="member">Ace::RetrieveFileNames</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fullFilePath)</highlight></codeline>
<codeline lineno="12723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>currFileName<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filePath<sp/>=<sp/>fullFilePath;</highlight></codeline>
<codeline lineno="12726"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;char*&gt;<sp/>fileNames;</highlight></codeline>
<codeline lineno="12727"><highlight class="normal"><sp/><sp/><sp/><sp/>WIN32_FIND_DATA<sp/>fd;</highlight></codeline>
<codeline lineno="12728"><highlight class="normal"><sp/><sp/><sp/><sp/>HANDLE<sp/>hFind;</highlight></codeline>
<codeline lineno="12729"><highlight class="normal"></highlight></codeline>
<codeline lineno="12730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fullFilePath<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="12731"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>the<sp/>path<sp/>ends<sp/>with<sp/>a<sp/>slash.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1acf5ed5e07611ea7cc31b21d808b20e4d" kindref="member">Ace::LastIndexOf</ref>(fullFilePath,<sp/></highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>strlen(fullFilePath)<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="12734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Append<sp/>the<sp/>final<sp/>slash<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>path<sp/>since<sp/>it&apos;s<sp/>missing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filePath<sp/>=<sp/><ref refid="class_ace_1a54627c41eea2730839d98f33542a5492" kindref="member">Ace::Concatenate</ref>(2,<sp/>fullFilePath,<sp/></highlight><highlight class="stringliteral">&quot;\\*.*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filePath<sp/>=<sp/><ref refid="class_ace_1a54627c41eea2730839d98f33542a5492" kindref="member">Ace::Concatenate</ref>(2,<sp/>fullFilePath,<sp/></highlight><highlight class="stringliteral">&quot;*.*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12742"><highlight class="normal"></highlight></codeline>
<codeline lineno="12743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hFind<sp/>=<sp/>FindFirstFile((LPCSTR)filePath,<sp/>&amp;fd))<sp/>!=<sp/>INVALID_HANDLE_VALUE)</highlight></codeline>
<codeline lineno="12744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(fd.dwFileAttributes<sp/>&amp;<sp/>FILE_ATTRIBUTE_DIRECTORY))</highlight></codeline>
<codeline lineno="12748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currFileName<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)fd.cFileName);</highlight></codeline>
<codeline lineno="12750"><highlight class="normal"></highlight></codeline>
<codeline lineno="12751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Filter<sp/>out<sp/>the<sp/>.<sp/>and<sp/>..<sp/>file<sp/>names.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1a986a84d68783456d3c97b467cece5635" kindref="member">Ace::Equals</ref>(currFileName,<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="class_ace_1a986a84d68783456d3c97b467cece5635" kindref="member">Ace::Equals</ref>(currFileName,<sp/></highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileNames.push_back(currFileName);</highlight></codeline>
<codeline lineno="12755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(currFileName);</highlight></codeline>
<codeline lineno="12759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12760"><highlight class="normal"></highlight></codeline>
<codeline lineno="12761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(FindNextFile(hFind,<sp/>&amp;fd));</highlight></codeline>
<codeline lineno="12763"><highlight class="normal"></highlight></codeline>
<codeline lineno="12764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindClose(hFind);</highlight></codeline>
<codeline lineno="12765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(filePath);</highlight></codeline>
<codeline lineno="12767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12769"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RetrieveFileNames()<sp/>fullFilePath<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12772"><highlight class="normal"></highlight></codeline>
<codeline lineno="12773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fileNames;</highlight></codeline>
<codeline lineno="12774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12775"><highlight class="normal"></highlight></codeline>
<codeline lineno="12809"><highlight class="normal">vector&lt;wchar_t*&gt;<sp/><ref refid="class_ace_1a1126579b6ddd052f90e987ef056fad70" kindref="member">Ace::RetrieveFileNames</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>fullFilePath)</highlight></codeline>
<codeline lineno="12810"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>currFileName<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>filePath<sp/>=<sp/>fullFilePath;</highlight></codeline>
<codeline lineno="12813"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;wchar_t*&gt;<sp/>fileNames;</highlight></codeline>
<codeline lineno="12814"><highlight class="normal"><sp/><sp/><sp/><sp/>WIN32_FIND_DATAW<sp/>fd;</highlight></codeline>
<codeline lineno="12815"><highlight class="normal"><sp/><sp/><sp/><sp/>HANDLE<sp/>hFind;</highlight></codeline>
<codeline lineno="12816"><highlight class="normal"></highlight></codeline>
<codeline lineno="12817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fullFilePath<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="12818"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>the<sp/>path<sp/>ends<sp/>with<sp/>a<sp/>slash.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1acf5ed5e07611ea7cc31b21d808b20e4d" kindref="member">Ace::LastIndexOf</ref>(fullFilePath,<sp/>L</highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>wcslen(fullFilePath)<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="12821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Append<sp/>the<sp/>final<sp/>slash<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>path<sp/>since<sp/>it&apos;s<sp/>missing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filePath<sp/>=<sp/><ref refid="class_ace_1af0cd7dce3668bd1ee3e9f86b687caa5c" kindref="member">Ace::ConcatenateW</ref>(2,<sp/>fullFilePath,<sp/>L</highlight><highlight class="stringliteral">&quot;\\*.*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filePath<sp/>=<sp/><ref refid="class_ace_1af0cd7dce3668bd1ee3e9f86b687caa5c" kindref="member">Ace::ConcatenateW</ref>(2,<sp/>fullFilePath,<sp/>L</highlight><highlight class="stringliteral">&quot;*.*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12829"><highlight class="normal"></highlight></codeline>
<codeline lineno="12830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hFind<sp/>=<sp/>FindFirstFileW((LPCWSTR)filePath,<sp/>&amp;fd))<sp/>!=<sp/>INVALID_HANDLE_VALUE)</highlight></codeline>
<codeline lineno="12831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(fd.dwFileAttributes<sp/>&amp;<sp/>FILE_ATTRIBUTE_DIRECTORY))</highlight></codeline>
<codeline lineno="12835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currFileName<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>((</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)fd.cFileName);</highlight></codeline>
<codeline lineno="12837"><highlight class="normal"></highlight></codeline>
<codeline lineno="12838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Filter<sp/>out<sp/>the<sp/>.<sp/>and<sp/>..<sp/>file<sp/>names.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1a986a84d68783456d3c97b467cece5635" kindref="member">Ace::Equals</ref>(currFileName,<sp/>L</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="class_ace_1a986a84d68783456d3c97b467cece5635" kindref="member">Ace::Equals</ref>(currFileName,<sp/>L</highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileNames.push_back(currFileName);</highlight></codeline>
<codeline lineno="12842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(currFileName);</highlight></codeline>
<codeline lineno="12846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12847"><highlight class="normal"></highlight></codeline>
<codeline lineno="12848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(FindNextFileW(hFind,<sp/>&amp;fd));</highlight></codeline>
<codeline lineno="12850"><highlight class="normal"></highlight></codeline>
<codeline lineno="12851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindClose(hFind);</highlight></codeline>
<codeline lineno="12852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(filePath);</highlight></codeline>
<codeline lineno="12854"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12856"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RetrieveFileNames()<sp/>fullFilePath<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12858"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12859"><highlight class="normal"></highlight></codeline>
<codeline lineno="12860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fileNames;</highlight></codeline>
<codeline lineno="12861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12862"><highlight class="normal"></highlight></codeline>
<codeline lineno="12895"><highlight class="normal">vector&lt;char*&gt;<sp/><ref refid="class_ace_1a5336deec9aeb39d6239b5ce09a396e80" kindref="member">Ace::RetrieveFolderNames</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fullFilePath)</highlight></codeline>
<codeline lineno="12896"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>currFileName<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filePath<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12899"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;char*&gt;<sp/>fileNames;</highlight></codeline>
<codeline lineno="12900"><highlight class="normal"><sp/><sp/><sp/><sp/>WIN32_FIND_DATA<sp/>fd;</highlight></codeline>
<codeline lineno="12901"><highlight class="normal"><sp/><sp/><sp/><sp/>HANDLE<sp/>hFind;</highlight></codeline>
<codeline lineno="12902"><highlight class="normal"></highlight></codeline>
<codeline lineno="12903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fullFilePath<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="12904"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>the<sp/>path<sp/>ends<sp/>with<sp/>a<sp/>slash.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1acf5ed5e07611ea7cc31b21d808b20e4d" kindref="member">Ace::LastIndexOf</ref>(fullFilePath,<sp/></highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>strlen(fullFilePath)<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="12907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Append<sp/>the<sp/>final<sp/>slash<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>path<sp/>since<sp/>it&apos;s<sp/>missing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filePath<sp/>=<sp/><ref refid="class_ace_1a54627c41eea2730839d98f33542a5492" kindref="member">Ace::Concatenate</ref>(2,<sp/>fullFilePath,<sp/></highlight><highlight class="stringliteral">&quot;\\*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filePath<sp/>=<sp/><ref refid="class_ace_1a54627c41eea2730839d98f33542a5492" kindref="member">Ace::Concatenate</ref>(2,<sp/>fullFilePath,<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12915"><highlight class="normal"></highlight></codeline>
<codeline lineno="12916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hFind<sp/>=<sp/>FindFirstFile((LPCSTR)filePath,<sp/>&amp;fd))<sp/>!=<sp/>INVALID_HANDLE_VALUE)</highlight></codeline>
<codeline lineno="12917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>if<sp/>statement<sp/>is<sp/>the<sp/>only<sp/>difference<sp/>bestrewn<sp/>RetrieveFileNames.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fd.dwFileAttributes<sp/>&amp;<sp/>FILE_ATTRIBUTE_DIRECTORY)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="12922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currFileName<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)fd.cFileName);</highlight></codeline>
<codeline lineno="12924"><highlight class="normal"></highlight></codeline>
<codeline lineno="12925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Filter<sp/>out<sp/>the<sp/>.<sp/>and<sp/>..<sp/>file<sp/>names.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1a986a84d68783456d3c97b467cece5635" kindref="member">Ace::Equals</ref>(currFileName,<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="class_ace_1a986a84d68783456d3c97b467cece5635" kindref="member">Ace::Equals</ref>(currFileName,<sp/></highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileNames.push_back(currFileName);</highlight></codeline>
<codeline lineno="12929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(currFileName);</highlight></codeline>
<codeline lineno="12933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12934"><highlight class="normal"></highlight></codeline>
<codeline lineno="12935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(FindNextFile(hFind,<sp/>&amp;fd));</highlight></codeline>
<codeline lineno="12937"><highlight class="normal"></highlight></codeline>
<codeline lineno="12938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindClose(hFind);</highlight></codeline>
<codeline lineno="12939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(filePath);</highlight></codeline>
<codeline lineno="12941"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12943"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RetrieveFolderNames()<sp/>fullFilePath<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12945"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12946"><highlight class="normal"></highlight></codeline>
<codeline lineno="12947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fileNames;</highlight></codeline>
<codeline lineno="12948"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12949"><highlight class="normal"></highlight></codeline>
<codeline lineno="12982"><highlight class="normal">vector&lt;wchar_t*&gt;<sp/><ref refid="class_ace_1a5336deec9aeb39d6239b5ce09a396e80" kindref="member">Ace::RetrieveFolderNames</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>fullFilePath)</highlight></codeline>
<codeline lineno="12983"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>currFileName<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>filePath<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="12986"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;wchar_t*&gt;<sp/>fileNames;</highlight></codeline>
<codeline lineno="12987"><highlight class="normal"><sp/><sp/><sp/><sp/>WIN32_FIND_DATAW<sp/>fd;</highlight></codeline>
<codeline lineno="12988"><highlight class="normal"><sp/><sp/><sp/><sp/>HANDLE<sp/>hFind;</highlight></codeline>
<codeline lineno="12989"><highlight class="normal"></highlight></codeline>
<codeline lineno="12990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fullFilePath<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="12991"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>the<sp/>path<sp/>ends<sp/>with<sp/>a<sp/>slash.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1acf5ed5e07611ea7cc31b21d808b20e4d" kindref="member">Ace::LastIndexOf</ref>(fullFilePath,<sp/>L</highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>wcslen(fullFilePath)<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="12994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Append<sp/>the<sp/>final<sp/>slash<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>path<sp/>since<sp/>it&apos;s<sp/>missing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filePath<sp/>=<sp/><ref refid="class_ace_1af0cd7dce3668bd1ee3e9f86b687caa5c" kindref="member">Ace::ConcatenateW</ref>(2,<sp/>fullFilePath,<sp/></highlight><highlight class="stringliteral">&quot;\\*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filePath<sp/>=<sp/><ref refid="class_ace_1af0cd7dce3668bd1ee3e9f86b687caa5c" kindref="member">Ace::ConcatenateW</ref>(2,<sp/>fullFilePath,<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13002"><highlight class="normal"></highlight></codeline>
<codeline lineno="13003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hFind<sp/>=<sp/>FindFirstFileW((LPCWSTR)filePath,<sp/>&amp;fd))<sp/>!=<sp/>INVALID_HANDLE_VALUE)</highlight></codeline>
<codeline lineno="13004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>if<sp/>statement<sp/>is<sp/>the<sp/>only<sp/>difference<sp/>bestrewn<sp/>RetrieveFileNames.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fd.dwFileAttributes<sp/>&amp;<sp/>FILE_ATTRIBUTE_DIRECTORY)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="13009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currFileName<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>((</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)fd.cFileName);</highlight></codeline>
<codeline lineno="13011"><highlight class="normal"></highlight></codeline>
<codeline lineno="13012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Filter<sp/>out<sp/>the<sp/>.<sp/>and<sp/>..<sp/>file<sp/>names.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1a986a84d68783456d3c97b467cece5635" kindref="member">Ace::Equals</ref>(currFileName,<sp/>L</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="class_ace_1a986a84d68783456d3c97b467cece5635" kindref="member">Ace::Equals</ref>(currFileName,<sp/>L</highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="13014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileNames.push_back(currFileName);</highlight></codeline>
<codeline lineno="13016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(currFileName);</highlight></codeline>
<codeline lineno="13020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13021"><highlight class="normal"></highlight></codeline>
<codeline lineno="13022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(FindNextFileW(hFind,<sp/>&amp;fd));</highlight></codeline>
<codeline lineno="13024"><highlight class="normal"></highlight></codeline>
<codeline lineno="13025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindClose(hFind);</highlight></codeline>
<codeline lineno="13026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(filePath);</highlight></codeline>
<codeline lineno="13028"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13030"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>RetrieveFolderNames()<sp/>fullFilePath<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13032"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13033"><highlight class="normal"></highlight></codeline>
<codeline lineno="13034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fileNames;</highlight></codeline>
<codeline lineno="13035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13036"><highlight class="normal"></highlight></codeline>
<codeline lineno="13064"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1acebc93fbbb2ead1c7177b42b64826b00" kindref="member">Ace::ReverseString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToReverse)</highlight></codeline>
<codeline lineno="13065"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strReverse<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13067"><highlight class="normal"></highlight></codeline>
<codeline lineno="13068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToReverse<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="13069"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strReverse<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>(strToReverse);</highlight></codeline>
<codeline lineno="13071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ace_1a9bd246903778d20a982765bea54ec8f4" kindref="member">Ace::ReverseStringInPlace</ref>(strReverse);</highlight></codeline>
<codeline lineno="13072"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13074"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReverseString()<sp/>strToReverse<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13076"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13077"><highlight class="normal"></highlight></codeline>
<codeline lineno="13078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strReverse;</highlight></codeline>
<codeline lineno="13079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13080"><highlight class="normal"></highlight></codeline>
<codeline lineno="13108"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1acebc93fbbb2ead1c7177b42b64826b00" kindref="member">Ace::ReverseString</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToReverse)</highlight></codeline>
<codeline lineno="13109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strReverse<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="13111"><highlight class="normal"></highlight></codeline>
<codeline lineno="13112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToReverse<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="13113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strReverse<sp/>=<sp/><ref refid="class_ace_1ae84033e0edc7822aa6a1cd3d6147dac8" kindref="member">Ace::AllocateAndCopyString</ref>(strToReverse);</highlight></codeline>
<codeline lineno="13115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ace_1a9bd246903778d20a982765bea54ec8f4" kindref="member">Ace::ReverseStringInPlace</ref>(strReverse);</highlight></codeline>
<codeline lineno="13116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReverseString()<sp/>strToReverse<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13121"><highlight class="normal"></highlight></codeline>
<codeline lineno="13122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strReverse;</highlight></codeline>
<codeline lineno="13123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13124"><highlight class="normal"></highlight></codeline>
<codeline lineno="13151"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a9bd246903778d20a982765bea54ec8f4" kindref="member">Ace::ReverseStringInPlace</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToReverse)</highlight></codeline>
<codeline lineno="13152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>juggler<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leftIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rightIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13156"><highlight class="normal"></highlight></codeline>
<codeline lineno="13157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToReverse<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="13158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightIndex<sp/>=<sp/>strlen(strToReverse)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="13160"><highlight class="normal"></highlight></codeline>
<codeline lineno="13161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(leftIndex<sp/>&lt;<sp/>rightIndex)</highlight></codeline>
<codeline lineno="13162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>juggler<sp/>=<sp/>strToReverse[leftIndex];</highlight></codeline>
<codeline lineno="13164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToReverse[leftIndex]<sp/>=<sp/>strToReverse[rightIndex];</highlight></codeline>
<codeline lineno="13165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToReverse[rightIndex]<sp/>=<sp/>juggler;</highlight></codeline>
<codeline lineno="13166"><highlight class="normal"></highlight></codeline>
<codeline lineno="13167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftIndex++;</highlight></codeline>
<codeline lineno="13168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightIndex--;</highlight></codeline>
<codeline lineno="13169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReverseStringInPlace()<sp/>strToReverse<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13176"><highlight class="normal"></highlight></codeline>
<codeline lineno="13203"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a9bd246903778d20a982765bea54ec8f4" kindref="member">Ace::ReverseStringInPlace</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToReverse)</highlight></codeline>
<codeline lineno="13204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>juggler<sp/>=<sp/>L</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leftIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rightIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13208"><highlight class="normal"></highlight></codeline>
<codeline lineno="13209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToReverse<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="13210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightIndex<sp/>=<sp/>wcslen(strToReverse)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="13212"><highlight class="normal"></highlight></codeline>
<codeline lineno="13213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(leftIndex<sp/>&lt;<sp/>rightIndex)</highlight></codeline>
<codeline lineno="13214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>juggler<sp/>=<sp/>strToReverse[leftIndex];</highlight></codeline>
<codeline lineno="13216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToReverse[leftIndex]<sp/>=<sp/>strToReverse[rightIndex];</highlight></codeline>
<codeline lineno="13217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToReverse[rightIndex]<sp/>=<sp/>juggler;</highlight></codeline>
<codeline lineno="13218"><highlight class="normal"></highlight></codeline>
<codeline lineno="13219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftIndex++;</highlight></codeline>
<codeline lineno="13220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightIndex--;</highlight></codeline>
<codeline lineno="13221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ReverseStringInPlace()<sp/>strToReverse<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13228"><highlight class="normal"></highlight></codeline>
<codeline lineno="13257"><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a7bf2286843651fe1cd72b037a1030320" kindref="member">Ace::RoundToNearestInteger</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="13258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13260"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="13262"><highlight class="normal"></highlight></codeline>
<codeline lineno="13263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="13265"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="13267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13268"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13269"><highlight class="normal"></highlight></codeline>
<codeline lineno="13270"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>lrint(num);</highlight></codeline>
<codeline lineno="13271"><highlight class="normal"></highlight></codeline>
<codeline lineno="13272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>lrint().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13274"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>RoundToNearestInteger()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>RoundToNearestInteger()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13283"><highlight class="normal"></highlight></codeline>
<codeline lineno="13284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13286"><highlight class="normal"></highlight></codeline>
<codeline lineno="13315"><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a7bf2286843651fe1cd72b037a1030320" kindref="member">Ace::RoundToNearestInteger</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="13316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13318"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="13320"><highlight class="normal"></highlight></codeline>
<codeline lineno="13321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="13323"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="13325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13326"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13327"><highlight class="normal"></highlight></codeline>
<codeline lineno="13328"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>lrint(num);</highlight></codeline>
<codeline lineno="13329"><highlight class="normal"></highlight></codeline>
<codeline lineno="13330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>lrint().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13332"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>RoundToNearestInteger()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13337"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>RoundToNearestInteger()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13341"><highlight class="normal"></highlight></codeline>
<codeline lineno="13342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13344"><highlight class="normal"></highlight></codeline>
<codeline lineno="13374"><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a7bf2286843651fe1cd72b037a1030320" kindref="member">Ace::RoundToNearestInteger</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="13375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13377"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="13379"><highlight class="normal"></highlight></codeline>
<codeline lineno="13380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="13382"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="13384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13385"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13386"><highlight class="normal"></highlight></codeline>
<codeline lineno="13387"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>lrint(num);</highlight></codeline>
<codeline lineno="13388"><highlight class="normal"></highlight></codeline>
<codeline lineno="13389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>lrint().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13391"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>RoundToNearestInteger()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13396"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>RoundToNearestInteger()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13400"><highlight class="normal"></highlight></codeline>
<codeline lineno="13401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13403"><highlight class="normal"></highlight></codeline>
<codeline lineno="13432"><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a020fc7df33dce4679ed8a392da725b8b" kindref="member">Ace::RoundUp</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="13433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13435"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="13437"><highlight class="normal"></highlight></codeline>
<codeline lineno="13438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="13440"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="13442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13443"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13444"><highlight class="normal"></highlight></codeline>
<codeline lineno="13445"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>lround(num);</highlight></codeline>
<codeline lineno="13446"><highlight class="normal"></highlight></codeline>
<codeline lineno="13447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>lround().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13449"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>RoundUp()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13454"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>RoundUp()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13458"><highlight class="normal"></highlight></codeline>
<codeline lineno="13459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13461"><highlight class="normal"></highlight></codeline>
<codeline lineno="13490"><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a020fc7df33dce4679ed8a392da725b8b" kindref="member">Ace::RoundUp</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="13491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13493"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="13495"><highlight class="normal"></highlight></codeline>
<codeline lineno="13496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="13498"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="13500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13501"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13502"><highlight class="normal"></highlight></codeline>
<codeline lineno="13503"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>lround(num);</highlight></codeline>
<codeline lineno="13504"><highlight class="normal"></highlight></codeline>
<codeline lineno="13505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>lround().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13507"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>RoundUp()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13512"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>RoundUp()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13516"><highlight class="normal"></highlight></codeline>
<codeline lineno="13517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13519"><highlight class="normal"></highlight></codeline>
<codeline lineno="13549"><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a020fc7df33dce4679ed8a392da725b8b" kindref="member">Ace::RoundUp</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="13550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13552"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="13554"><highlight class="normal"></highlight></codeline>
<codeline lineno="13555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="13557"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="13559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13560"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13561"><highlight class="normal"></highlight></codeline>
<codeline lineno="13562"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>lround(num);</highlight></codeline>
<codeline lineno="13563"><highlight class="normal"></highlight></codeline>
<codeline lineno="13564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>lround().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13566"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>RoundUp()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13571"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>RoundUp()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13575"><highlight class="normal"></highlight></codeline>
<codeline lineno="13576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13578"><highlight class="normal"></highlight></codeline>
<codeline lineno="13605"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a77deefeaedf4e2bd0eee31ad3bdfb2e7" kindref="member">Ace::ShowMessageBox</ref>(HWND<sp/>hWindow,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>message,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>title)</highlight></codeline>
<codeline lineno="13606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MessageBoxA(hWindow,<sp/>message,<sp/>title,<sp/>MB_OK)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="13608"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ShowMessageBox()<sp/>Encountered<sp/>an<sp/>error<sp/>on<sp/>execution.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13612"><highlight class="normal"></highlight></codeline>
<codeline lineno="13639"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a77deefeaedf4e2bd0eee31ad3bdfb2e7" kindref="member">Ace::ShowMessageBox</ref>(HWND<sp/>hWindow,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>message,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>title)</highlight></codeline>
<codeline lineno="13640"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MessageBoxW(hWindow,<sp/>message,<sp/>title,<sp/>MB_OK)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="13642"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>ShowMessageBox()<sp/>Encountered<sp/>an<sp/>error<sp/>on<sp/>execution.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13646"><highlight class="normal"></highlight></codeline>
<codeline lineno="13673"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a06e3e46bfa12aeef6c13edf8d57b2b24" kindref="member">Ace::Sin</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="13674"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13676"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="13678"><highlight class="normal"></highlight></codeline>
<codeline lineno="13679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)</highlight></codeline>
<codeline lineno="13681"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="13683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13684"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13685"><highlight class="normal"></highlight></codeline>
<codeline lineno="13686"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>sin(numInRadians);</highlight></codeline>
<codeline lineno="13687"><highlight class="normal"></highlight></codeline>
<codeline lineno="13688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>sin().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13690"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Sin()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="13693"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13695"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Sin()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="13698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13699"><highlight class="normal"></highlight></codeline>
<codeline lineno="13700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13702"><highlight class="normal"></highlight></codeline>
<codeline lineno="13729"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a06e3e46bfa12aeef6c13edf8d57b2b24" kindref="member">Ace::Sin</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="13730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13732"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="13734"><highlight class="normal"></highlight></codeline>
<codeline lineno="13735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)</highlight></codeline>
<codeline lineno="13737"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="13739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13740"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13741"><highlight class="normal"></highlight></codeline>
<codeline lineno="13742"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>sin(numInRadians);</highlight></codeline>
<codeline lineno="13743"><highlight class="normal"></highlight></codeline>
<codeline lineno="13744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>sin().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13746"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Sin()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="13749"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13751"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Sin()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="13754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13755"><highlight class="normal"></highlight></codeline>
<codeline lineno="13756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13758"><highlight class="normal"></highlight></codeline>
<codeline lineno="13785"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a06e3e46bfa12aeef6c13edf8d57b2b24" kindref="member">Ace::Sin</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="13786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13788"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="13790"><highlight class="normal"></highlight></codeline>
<codeline lineno="13791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)</highlight></codeline>
<codeline lineno="13793"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="13795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13796"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13797"><highlight class="normal"></highlight></codeline>
<codeline lineno="13798"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>sin(numInRadians);</highlight></codeline>
<codeline lineno="13799"><highlight class="normal"></highlight></codeline>
<codeline lineno="13800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>sin().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13802"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Sin()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13807"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Sin()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13811"><highlight class="normal"></highlight></codeline>
<codeline lineno="13812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13814"><highlight class="normal"></highlight></codeline>
<codeline lineno="13841"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ab20988efdaa2f4ad09ee73c6ce108e19" kindref="member">Ace::SinH</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="13842"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13844"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="13846"><highlight class="normal"></highlight></codeline>
<codeline lineno="13847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)</highlight></codeline>
<codeline lineno="13849"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="13851"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13852"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13853"><highlight class="normal"></highlight></codeline>
<codeline lineno="13854"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>sinh(numInRadians);</highlight></codeline>
<codeline lineno="13855"><highlight class="normal"></highlight></codeline>
<codeline lineno="13856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>sinh().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13858"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>SinH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="13861"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13863"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>SinH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="13866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13867"><highlight class="normal"></highlight></codeline>
<codeline lineno="13868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13870"><highlight class="normal"></highlight></codeline>
<codeline lineno="13897"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ab20988efdaa2f4ad09ee73c6ce108e19" kindref="member">Ace::SinH</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="13898"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13900"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="13902"><highlight class="normal"></highlight></codeline>
<codeline lineno="13903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="13905"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="13907"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13908"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13909"><highlight class="normal"></highlight></codeline>
<codeline lineno="13910"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>sinh(numInRadians);</highlight></codeline>
<codeline lineno="13911"><highlight class="normal"></highlight></codeline>
<codeline lineno="13912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>sinh().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13914"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>SinH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="13917"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13919"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>SinH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="13922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13923"><highlight class="normal"></highlight></codeline>
<codeline lineno="13924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13926"><highlight class="normal"></highlight></codeline>
<codeline lineno="13953"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ab20988efdaa2f4ad09ee73c6ce108e19" kindref="member">Ace::SinH</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="13954"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13956"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="13958"><highlight class="normal"></highlight></codeline>
<codeline lineno="13959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="13961"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="13963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13964"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13965"><highlight class="normal"></highlight></codeline>
<codeline lineno="13966"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>sinh(numInRadians);</highlight></codeline>
<codeline lineno="13967"><highlight class="normal"></highlight></codeline>
<codeline lineno="13968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>sinh().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13970"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>SinH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13973"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="13975"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>SinH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="13978"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13979"><highlight class="normal"></highlight></codeline>
<codeline lineno="13980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="13981"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13982"><highlight class="normal"></highlight></codeline>
<codeline lineno="14009"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a43a41e4cedf8be5164b3938a010028c8" kindref="member">Ace::Smallest</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num2)</highlight></codeline>
<codeline lineno="14010"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmin(num1,<sp/>num2);</highlight></codeline>
<codeline lineno="14012"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14013"><highlight class="normal"></highlight></codeline>
<codeline lineno="14040"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a43a41e4cedf8be5164b3938a010028c8" kindref="member">Ace::Smallest</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num2)</highlight></codeline>
<codeline lineno="14041"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmin(num1,<sp/>num2);</highlight></codeline>
<codeline lineno="14043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14044"><highlight class="normal"></highlight></codeline>
<codeline lineno="14071"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a43a41e4cedf8be5164b3938a010028c8" kindref="member">Ace::Smallest</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num2)</highlight></codeline>
<codeline lineno="14072"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fmin(num1,<sp/>num2);</highlight></codeline>
<codeline lineno="14074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14075"><highlight class="normal"></highlight></codeline>
<codeline lineno="14102"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a29179fe6de4ef729c5922aeafbde9821" kindref="member">Ace::SquareRoot</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="14103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>an<sp/>exception<sp/>from<sp/>being<sp/>raised.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreaterequal(num,<sp/>0.0)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(num);</highlight></codeline>
<codeline lineno="14108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>SquareRoot()<sp/>Cannot<sp/>take<sp/>square<sp/>root<sp/>of<sp/>a<sp/>negative<sp/>number.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="14113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14115"><highlight class="normal"></highlight></codeline>
<codeline lineno="14142"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a29179fe6de4ef729c5922aeafbde9821" kindref="member">Ace::SquareRoot</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="14143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>an<sp/>exception<sp/>from<sp/>being<sp/>raised.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreaterequal(num,<sp/>0.0f)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(num);</highlight></codeline>
<codeline lineno="14148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>SquareRoot()<sp/>Cannot<sp/>take<sp/>square<sp/>root<sp/>of<sp/>a<sp/>negative<sp/>number.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="14153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14155"><highlight class="normal"></highlight></codeline>
<codeline lineno="14182"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a29179fe6de4ef729c5922aeafbde9821" kindref="member">Ace::SquareRoot</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="14183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>functions<sp/>prevent<sp/>an<sp/>exception<sp/>from<sp/>being<sp/>raised.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isgreaterequal(num,<sp/>0)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="14186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(num);</highlight></codeline>
<codeline lineno="14188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14190"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>SquareRoot()<sp/>Cannot<sp/>take<sp/>square<sp/>root<sp/>of<sp/>a<sp/>negative<sp/>number.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="14193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14195"><highlight class="normal"></highlight></codeline>
<codeline lineno="14234"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>upToButNotIncludingIndex)</highlight></codeline>
<codeline lineno="14235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToParseLength<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="14237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufferSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToParse<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="14239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffHead<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14241"><highlight class="normal"></highlight></codeline>
<codeline lineno="14242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToParse<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="14243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToParseLength<sp/>=<sp/>strlen(strToParse);</highlight></codeline>
<codeline lineno="14245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startIndex<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>startIndex<sp/>&lt;=<sp/>strToParseLength)</highlight></codeline>
<codeline lineno="14246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upToButNotIncludingIndex<sp/>&lt;<sp/>0<sp/>||<sp/>upToButNotIncludingIndex<sp/>&gt;<sp/>strToParseLength)</highlight></codeline>
<codeline lineno="14248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Prevent<sp/>invalid<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upToButNotIncludingIndex<sp/>=<sp/>strToParseLength;</highlight></codeline>
<codeline lineno="14251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14252"><highlight class="normal"></highlight></codeline>
<codeline lineno="14253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((upToButNotIncludingIndex<sp/>-<sp/>startIndex)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="14254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//+1<sp/>for<sp/>Null<sp/>character<sp/>at<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufferSize<sp/>=<sp/>(upToButNotIncludingIndex<sp/>-<sp/>startIndex<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="class_ace_1ac62e93783b52192c5f5649a389021d15" kindref="member">Ace::_Aligned_Calloc</ref>(bufferSize);</highlight></codeline>
<codeline lineno="14258"><highlight class="normal"></highlight></codeline>
<codeline lineno="14259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffHead<sp/>=<sp/>buffer;</highlight></codeline>
<codeline lineno="14260"><highlight class="normal"></highlight></codeline>
<codeline lineno="14261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currCharIndex<sp/>=<sp/>startIndex;<sp/>currCharIndex<sp/>&lt;<sp/>upToButNotIncludingIndex<sp/>&amp;&amp;<sp/>*strToParse<sp/>!=<sp/>NULL;<sp/>currCharIndex++)</highlight></codeline>
<codeline lineno="14262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer<sp/>=<sp/>*(strToParse<sp/>+<sp/>currCharIndex);</highlight></codeline>
<codeline lineno="14264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer++;</highlight></codeline>
<codeline lineno="14265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>SubString()<sp/>startIndex<sp/>must<sp/>be<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14278"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>SubString()<sp/>strToParse<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14281"><highlight class="normal"></highlight></codeline>
<codeline lineno="14282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffHead;</highlight></codeline>
<codeline lineno="14283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14284"><highlight class="normal"></highlight></codeline>
<codeline lineno="14323"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>upToButNotIncludingIndex)</highlight></codeline>
<codeline lineno="14324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToParseLength<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="14326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufferSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToParse<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="14328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>buffer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>buffHead<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14330"><highlight class="normal"></highlight></codeline>
<codeline lineno="14331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToParse<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="14332"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToParseLength<sp/>=<sp/>wcslen(strToParse);</highlight></codeline>
<codeline lineno="14334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startIndex<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>startIndex<sp/>&lt;=<sp/>strToParseLength)</highlight></codeline>
<codeline lineno="14335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upToButNotIncludingIndex<sp/>&lt;<sp/>0<sp/>||<sp/>upToButNotIncludingIndex<sp/>&gt;<sp/>strToParseLength)</highlight></codeline>
<codeline lineno="14337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Prevent<sp/>invalid<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upToButNotIncludingIndex<sp/>=<sp/>strToParseLength;</highlight></codeline>
<codeline lineno="14340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14341"><highlight class="normal"></highlight></codeline>
<codeline lineno="14342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((upToButNotIncludingIndex<sp/>-<sp/>startIndex)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="14343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//+1<sp/>for<sp/>Null<sp/>character<sp/>at<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufferSize<sp/>=<sp/>(upToButNotIncludingIndex<sp/>-<sp/>startIndex<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)<ref refid="class_ace_1ac62e93783b52192c5f5649a389021d15" kindref="member">Ace::_Aligned_Calloc</ref>(bufferSize);</highlight></codeline>
<codeline lineno="14347"><highlight class="normal"></highlight></codeline>
<codeline lineno="14348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffHead<sp/>=<sp/>buffer;</highlight></codeline>
<codeline lineno="14349"><highlight class="normal"></highlight></codeline>
<codeline lineno="14350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currCharIndex<sp/>=<sp/>startIndex;<sp/>currCharIndex<sp/>&lt;<sp/>upToButNotIncludingIndex<sp/>&amp;&amp;<sp/>*strToParse<sp/>!=<sp/>NULL;<sp/>currCharIndex++)</highlight></codeline>
<codeline lineno="14351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer<sp/>=<sp/>*(strToParse<sp/>+<sp/>currCharIndex);</highlight></codeline>
<codeline lineno="14353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer++;</highlight></codeline>
<codeline lineno="14354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>SubString()<sp/>startIndex<sp/>must<sp/>be<sp/>in<sp/>valid<sp/>range.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14367"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>SubString()<sp/>strToParse<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14370"><highlight class="normal"></highlight></codeline>
<codeline lineno="14371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffHead;</highlight></codeline>
<codeline lineno="14372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14373"><highlight class="normal"></highlight></codeline>
<codeline lineno="14401"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a8434cb3dc1700eb767a393087cf35ade" kindref="member">Ace::Tan</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="14402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14404"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="14406"><highlight class="normal"></highlight></codeline>
<codeline lineno="14407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="14409"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="14411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14412"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14413"><highlight class="normal"></highlight></codeline>
<codeline lineno="14414"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>tan(numInRadians);</highlight></codeline>
<codeline lineno="14415"><highlight class="normal"></highlight></codeline>
<codeline lineno="14416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>tan().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="14418"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Tan()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="14421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="14423"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Tan()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="14426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14427"><highlight class="normal"></highlight></codeline>
<codeline lineno="14428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="14429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14430"><highlight class="normal"></highlight></codeline>
<codeline lineno="14458"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a8434cb3dc1700eb767a393087cf35ade" kindref="member">Ace::Tan</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="14459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14461"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="14463"><highlight class="normal"></highlight></codeline>
<codeline lineno="14464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="14466"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="14468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14469"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14470"><highlight class="normal"></highlight></codeline>
<codeline lineno="14471"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>tan(numInRadians);</highlight></codeline>
<codeline lineno="14472"><highlight class="normal"></highlight></codeline>
<codeline lineno="14473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>tan().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="14475"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Tan()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="14478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="14480"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Tan()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="14483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14484"><highlight class="normal"></highlight></codeline>
<codeline lineno="14485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="14486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14487"><highlight class="normal"></highlight></codeline>
<codeline lineno="14515"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a8434cb3dc1700eb767a393087cf35ade" kindref="member">Ace::Tan</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="14516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14518"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="14520"><highlight class="normal"></highlight></codeline>
<codeline lineno="14521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="14523"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="14525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14526"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14527"><highlight class="normal"></highlight></codeline>
<codeline lineno="14528"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>tan(numInRadians);</highlight></codeline>
<codeline lineno="14529"><highlight class="normal"></highlight></codeline>
<codeline lineno="14530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>tan().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="14532"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Tan()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="14535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="14537"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Tan()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="14540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14541"><highlight class="normal"></highlight></codeline>
<codeline lineno="14542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="14543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14544"><highlight class="normal"></highlight></codeline>
<codeline lineno="14572"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1abeaf6de454adb6cbec71470d9c290631" kindref="member">Ace::TanH</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="14573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14575"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="14577"><highlight class="normal"></highlight></codeline>
<codeline lineno="14578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="14580"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="14582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14583"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14584"><highlight class="normal"></highlight></codeline>
<codeline lineno="14585"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>tanh(numInRadians);</highlight></codeline>
<codeline lineno="14586"><highlight class="normal"></highlight></codeline>
<codeline lineno="14587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>tanh().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="14589"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>TanH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="14592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="14594"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>TanH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="14597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14598"><highlight class="normal"></highlight></codeline>
<codeline lineno="14599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="14600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14601"><highlight class="normal"></highlight></codeline>
<codeline lineno="14629"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1abeaf6de454adb6cbec71470d9c290631" kindref="member">Ace::TanH</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="14630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14632"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="14634"><highlight class="normal"></highlight></codeline>
<codeline lineno="14635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="14637"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="14639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14640"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14641"><highlight class="normal"></highlight></codeline>
<codeline lineno="14642"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>tanh(numInRadians);</highlight></codeline>
<codeline lineno="14643"><highlight class="normal"></highlight></codeline>
<codeline lineno="14644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>tanh().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="14646"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>TanH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="14649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="14651"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>TanH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="14654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14655"><highlight class="normal"></highlight></codeline>
<codeline lineno="14656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="14657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14658"><highlight class="normal"></highlight></codeline>
<codeline lineno="14686"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1abeaf6de454adb6cbec71470d9c290631" kindref="member">Ace::TanH</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numInRadians)</highlight></codeline>
<codeline lineno="14687"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14689"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="14691"><highlight class="normal"></highlight></codeline>
<codeline lineno="14692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="14694"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="14696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14697"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14698"><highlight class="normal"></highlight></codeline>
<codeline lineno="14699"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>tanh(numInRadians);</highlight></codeline>
<codeline lineno="14700"><highlight class="normal"></highlight></codeline>
<codeline lineno="14701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>tanh().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="14703"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>TanH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="14706"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="14708"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>TanH()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="14711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14712"><highlight class="normal"></highlight></codeline>
<codeline lineno="14713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="14714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14715"><highlight class="normal"></highlight></codeline>
<codeline lineno="14764"><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><ref refid="class_ace_1a8e948c04ce26696ede60e70c5f70c361" kindref="member">Ace::Tokenize</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>strToTokenize,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>delimiter,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>outNumTokensFound)</highlight></codeline>
<codeline lineno="14765"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>tokensArray<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>endSubStr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToTokenizeLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delimiterLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numDelims<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delimiterIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="14772"><highlight class="normal"></highlight></codeline>
<codeline lineno="14773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToTokenize<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>delimiter<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="14774"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Find<sp/>the<sp/>number<sp/>of<sp/>delimiters<sp/>in<sp/>the<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numDelims<sp/>=<sp/><ref refid="class_ace_1a4202759241426cfbbc2c15b5ea218ec8" kindref="member">Ace::CountNumOccurrences</ref>(strToTokenize,<sp/>delimiter);</highlight></codeline>
<codeline lineno="14777"><highlight class="normal"></highlight></codeline>
<codeline lineno="14778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>number<sp/>of<sp/>tokens<sp/>will<sp/>be<sp/>equal<sp/>to<sp/>the<sp/>number<sp/>of<sp/>delimiters<sp/>+<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outNumTokensFound<sp/>=<sp/>numDelims<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="14780"><highlight class="normal"></highlight></codeline>
<codeline lineno="14781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>length<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>keep<sp/>calling<sp/>strlen().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToTokenizeLength<sp/>=<sp/>strlen(strToTokenize);</highlight></codeline>
<codeline lineno="14783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delimiterLength<sp/>=<sp/>strlen(delimiter);</highlight></codeline>
<codeline lineno="14784"><highlight class="normal"></highlight></codeline>
<codeline lineno="14785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>there<sp/>is<sp/>a<sp/>delimiter<sp/>at<sp/>the<sp/>very<sp/>end<sp/>of<sp/>the<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endSubStr<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToTokenize,<sp/>strToTokenizeLength<sp/>-<sp/>delimiterLength);</highlight></codeline>
<codeline lineno="14787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(delimiter,<sp/>endSubStr)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="14788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//It<sp/>doesn&apos;t<sp/>count<sp/>as<sp/>a<sp/>token<sp/>if<sp/>nothing<sp/>comes<sp/>after<sp/>the<sp/>delimiter<sp/>at<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outNumTokensFound--;</highlight></codeline>
<codeline lineno="14791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(endSubStr);</highlight></codeline>
<codeline lineno="14793"><highlight class="normal"></highlight></codeline>
<codeline lineno="14794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allocate<sp/>the<sp/>array<sp/>of<sp/>tokens<sp/>and<sp/>zero<sp/>it<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokensArray<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)_aligned_malloc(outNumTokensFound<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*),<sp/><ref refid="_ace_8h_1aa465ebf747728e1e8a5edd0bd7a6fcde" kindref="member">BYTE_ALIGNMENT</ref>);</highlight></codeline>
<codeline lineno="14796"><highlight class="normal"></highlight></codeline>
<codeline lineno="14797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>buffer<sp/>was<sp/>allocated<sp/>successfully.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokensArray<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="14799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>Tokenize()<sp/>Buffer<sp/>could<sp/>not<sp/>be<sp/>allocated.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14803"><highlight class="normal"></highlight></codeline>
<codeline lineno="14804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Fuck<sp/>it,<sp/>I&apos;ll<sp/>roll<sp/>my<sp/>own.<sp/>I<sp/>was<sp/>gonna<sp/>use<sp/>strtok(),<sp/>but<sp/>it&apos;s<sp/>broken.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>outNumTokensFound;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="14806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delimiterIndex<sp/>=<sp/><ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(strToTokenize,<sp/>delimiter);</highlight></codeline>
<codeline lineno="14808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delimiterIndex<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="14809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Grab<sp/>everything<sp/>from<sp/>start<sp/>to<sp/>the<sp/>end<sp/>of<sp/>&apos;strToTokenize&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokensArray[currIndex]<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToTokenize,<sp/>0);</highlight></codeline>
<codeline lineno="14812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokensArray[currIndex]<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToTokenize,<sp/>0,<sp/>delimiterIndex);</highlight></codeline>
<codeline lineno="14816"><highlight class="normal"></highlight></codeline>
<codeline lineno="14817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Move<sp/>past<sp/>the<sp/>delimiter<sp/>to<sp/>get<sp/>to<sp/>the<sp/>next<sp/>token.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToTokenize<sp/>+=<sp/>(delimiterIndex<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="14819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14821"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14823"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>Tokenize()<sp/>parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14825"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14826"><highlight class="normal"></highlight></codeline>
<codeline lineno="14827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tokensArray;</highlight></codeline>
<codeline lineno="14828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14829"><highlight class="normal"></highlight></codeline>
<codeline lineno="14878"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">**<sp/><ref refid="class_ace_1a8e948c04ce26696ede60e70c5f70c361" kindref="member">Ace::Tokenize</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>strToTokenize,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>delimiter,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>outNumTokensFound)</highlight></codeline>
<codeline lineno="14879"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">**<sp/>tokensArray<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>endSubStr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="14882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strToTokenizeLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delimiterLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numDelims<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delimiterIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="14886"><highlight class="normal"></highlight></codeline>
<codeline lineno="14887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strToTokenize<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>delimiter<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="14888"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Find<sp/>the<sp/>number<sp/>of<sp/>delimiters<sp/>in<sp/>the<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numDelims<sp/>=<sp/><ref refid="class_ace_1a4202759241426cfbbc2c15b5ea218ec8" kindref="member">Ace::CountNumOccurrences</ref>(strToTokenize,<sp/>delimiter);</highlight></codeline>
<codeline lineno="14891"><highlight class="normal"></highlight></codeline>
<codeline lineno="14892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>number<sp/>of<sp/>tokens<sp/>will<sp/>be<sp/>equal<sp/>to<sp/>the<sp/>number<sp/>of<sp/>delimiters<sp/>+<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outNumTokensFound<sp/>=<sp/>numDelims<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="14894"><highlight class="normal"></highlight></codeline>
<codeline lineno="14895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>length<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>keep<sp/>calling<sp/>strlen().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToTokenizeLength<sp/>=<sp/>wcslen(strToTokenize);</highlight></codeline>
<codeline lineno="14897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delimiterLength<sp/>=<sp/>wcslen(delimiter);</highlight></codeline>
<codeline lineno="14898"><highlight class="normal"></highlight></codeline>
<codeline lineno="14899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>there<sp/>is<sp/>a<sp/>delimiter<sp/>at<sp/>the<sp/>very<sp/>end<sp/>of<sp/>the<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endSubStr<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToTokenize,<sp/>strToTokenizeLength<sp/>-<sp/>delimiterLength);</highlight></codeline>
<codeline lineno="14901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wcscmp(delimiter,<sp/>endSubStr)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="14902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//It<sp/>doesn&apos;t<sp/>count<sp/>as<sp/>a<sp/>token<sp/>if<sp/>nothing<sp/>comes<sp/>after<sp/>the<sp/>delimiter<sp/>at<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outNumTokensFound--;</highlight></codeline>
<codeline lineno="14905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_aligned_free(endSubStr);</highlight></codeline>
<codeline lineno="14907"><highlight class="normal"></highlight></codeline>
<codeline lineno="14908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allocate<sp/>the<sp/>array<sp/>of<sp/>tokens<sp/>and<sp/>zero<sp/>it<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokensArray<sp/>=<sp/>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">**)_aligned_malloc(outNumTokensFound<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*),<sp/><ref refid="_ace_8h_1aa465ebf747728e1e8a5edd0bd7a6fcde" kindref="member">BYTE_ALIGNMENT</ref>);</highlight></codeline>
<codeline lineno="14910"><highlight class="normal"></highlight></codeline>
<codeline lineno="14911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>buffer<sp/>was<sp/>allocated<sp/>successfully.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokensArray<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="14913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>Tokenize()<sp/>Buffer<sp/>could<sp/>not<sp/>be<sp/>allocated.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="14916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14917"><highlight class="normal"></highlight></codeline>
<codeline lineno="14918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Fuck<sp/>it,<sp/>I&apos;ll<sp/>roll<sp/>my<sp/>own.<sp/>I<sp/>was<sp/>gonna<sp/>use<sp/>strtok(),<sp/>but<sp/>it&apos;s<sp/>broken.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currIndex<sp/>=<sp/>0;<sp/>currIndex<sp/>&lt;<sp/>outNumTokensFound;<sp/>currIndex++)</highlight></codeline>
<codeline lineno="14920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delimiterIndex<sp/>=<sp/><ref refid="class_ace_1a512efdbdf0e7413ae2e0d0abc8dff890" kindref="member">Ace::IndexOf</ref>(strToTokenize,<sp/>delimiter);</highlight></codeline>
<codeline lineno="14922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delimiterIndex<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="14923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Grab<sp/>everything<sp/>from<sp/>start<sp/>to<sp/>the<sp/>end<sp/>of<sp/>&apos;strToTokenize&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokensArray[currIndex]<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToTokenize,<sp/>0);</highlight></codeline>
<codeline lineno="14926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokensArray[currIndex]<sp/>=<sp/><ref refid="class_ace_1ab94f6a0b50f95846b20a921c1c48cbbd" kindref="member">Ace::SubString</ref>(strToTokenize,<sp/>0,<sp/>delimiterIndex);</highlight></codeline>
<codeline lineno="14930"><highlight class="normal"></highlight></codeline>
<codeline lineno="14931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Move<sp/>past<sp/>the<sp/>delimiter<sp/>to<sp/>get<sp/>to<sp/>the<sp/>next<sp/>token.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strToTokenize<sp/>+=<sp/>(delimiterIndex<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="14933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14935"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14937"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>Tokenize()<sp/>parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14940"><highlight class="normal"></highlight></codeline>
<codeline lineno="14941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tokensArray;</highlight></codeline>
<codeline lineno="14942"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14943"><highlight class="normal"></highlight></codeline>
<codeline lineno="14970"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aa10aa03639439fc61b99fa44d5f611ea" kindref="member">Ace::Truncate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="14971"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14973"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="14975"><highlight class="normal"></highlight></codeline>
<codeline lineno="14976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="14978"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="14980"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14981"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14982"><highlight class="normal"></highlight></codeline>
<codeline lineno="14983"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>trunc(num);</highlight></codeline>
<codeline lineno="14984"><highlight class="normal"></highlight></codeline>
<codeline lineno="14985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>exp2().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="14987"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Truncate()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="14990"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="14992"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Truncate()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="14995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14996"><highlight class="normal"></highlight></codeline>
<codeline lineno="14997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="14998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14999"><highlight class="normal"></highlight></codeline>
<codeline lineno="15026"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1aa10aa03639439fc61b99fa44d5f611ea" kindref="member">Ace::Truncate</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="15027"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15029"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="15031"><highlight class="normal"></highlight></codeline>
<codeline lineno="15032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="15034"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="15036"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15037"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15038"><highlight class="normal"></highlight></codeline>
<codeline lineno="15039"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>trunc(num);</highlight></codeline>
<codeline lineno="15040"><highlight class="normal"></highlight></codeline>
<codeline lineno="15041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>exp2().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="15043"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Truncate()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="15046"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="15048"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>Truncate()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="15051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15052"><highlight class="normal"></highlight></codeline>
<codeline lineno="15053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="15054"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15055"><highlight class="normal"></highlight></codeline>
<codeline lineno="15081"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a9c69db829c926e09d728f6f793414fc2" kindref="member">Ace::TwoToTheXPower</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>power)</highlight></codeline>
<codeline lineno="15082"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15084"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="15086"><highlight class="normal"></highlight></codeline>
<codeline lineno="15087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="15089"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="15091"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15092"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15093"><highlight class="normal"></highlight></codeline>
<codeline lineno="15094"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>exp2(power);</highlight></codeline>
<codeline lineno="15095"><highlight class="normal"></highlight></codeline>
<codeline lineno="15096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>exp2().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="15098"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>TwoToTheXPower()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="15101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="15103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>TwoToTheXPower()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="15106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15107"><highlight class="normal"></highlight></codeline>
<codeline lineno="15108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="15109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15110"><highlight class="normal"></highlight></codeline>
<codeline lineno="15136"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a9c69db829c926e09d728f6f793414fc2" kindref="member">Ace::TwoToTheXPower</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>power)</highlight></codeline>
<codeline lineno="15137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15139"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="15141"><highlight class="normal"></highlight></codeline>
<codeline lineno="15142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="15144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="15146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15147"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15148"><highlight class="normal"></highlight></codeline>
<codeline lineno="15149"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>exp2(power);</highlight></codeline>
<codeline lineno="15150"><highlight class="normal"></highlight></codeline>
<codeline lineno="15151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>exp2().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="15153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>CTwoToTheXPower()<sp/>alculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="15156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="15158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>TwoToTheXPower()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0f;</highlight></codeline>
<codeline lineno="15161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15162"><highlight class="normal"></highlight></codeline>
<codeline lineno="15163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="15164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15165"><highlight class="normal"></highlight></codeline>
<codeline lineno="15191"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a9c69db829c926e09d728f6f793414fc2" kindref="member">Ace::TwoToTheXPower</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>power)</highlight></codeline>
<codeline lineno="15192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allows<sp/>access<sp/>to<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15194"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>STDC<sp/>FENV_ACCESS<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="15196"><highlight class="normal"></highlight></codeline>
<codeline lineno="15197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>all<sp/>previous<sp/>floating<sp/>point<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="15199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feclearexcept(FE_ALL_EXCEPT);</highlight></codeline>
<codeline lineno="15201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15202"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15203"><highlight class="normal"></highlight></codeline>
<codeline lineno="15204"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>exp2(power);</highlight></codeline>
<codeline lineno="15205"><highlight class="normal"></highlight></codeline>
<codeline lineno="15206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Look<sp/>for<sp/>any<sp/>mathematical<sp/>errors<sp/>as<sp/>a<sp/>result<sp/>of<sp/>calling<sp/>exp2().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERRNO)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="15208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>TwoToTheXPower()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="15211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((math_errhandling<sp/>&amp;<sp/>MATH_ERREXCEPT)<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fetestexcept(FE_INVALID<sp/>|<sp/>FE_DIVBYZERO<sp/>|<sp/>FE_OVERFLOW<sp/>|<sp/>FE_UNDERFLOW)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="15213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Range<sp/>Error:<sp/>TwoToTheXPower()<sp/>Calculation<sp/>resulted<sp/>in<sp/>a<sp/>range<sp/>error.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="15216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15217"><highlight class="normal"></highlight></codeline>
<codeline lineno="15218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="15219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15220"><highlight class="normal"></highlight></codeline>
<codeline lineno="15255"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ab751a186da0c64e7d020b32f649a7006" kindref="member">Ace::Validate</ref>(HWND<sp/>hWnd,<sp/>HRESULT<sp/>result,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>message,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>title)</highlight></codeline>
<codeline lineno="15256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(result)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ace_1a77deefeaedf4e2bd0eee31ad3bdfb2e7" kindref="member">Ace::ShowMessageBox</ref>(hWnd,<sp/>message,<sp/>title);</highlight></codeline>
<codeline lineno="15260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15262"><highlight class="normal"></highlight></codeline>
<codeline lineno="15263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15265"><highlight class="normal"></highlight></codeline>
<codeline lineno="15300"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ace_1ab751a186da0c64e7d020b32f649a7006" kindref="member">Ace::Validate</ref>(HWND<sp/>hWnd,<sp/>HRESULT<sp/>result,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>message,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>title)</highlight></codeline>
<codeline lineno="15301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(result)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ace_1a77deefeaedf4e2bd0eee31ad3bdfb2e7" kindref="member">Ace::ShowMessageBox</ref>(hWnd,<sp/>message,<sp/>title);</highlight></codeline>
<codeline lineno="15305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15307"><highlight class="normal"></highlight></codeline>
<codeline lineno="15308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15310"><highlight class="normal"></highlight></codeline>
<codeline lineno="15348"><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_ace_1af96ec8733f6e776aa2296afd79dfe38c" kindref="member">Ace::WriteTextFile</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filePath,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>bufferToWrite,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufferSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>mode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seekOffset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seekOrigin,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>outEndCursorPos)</highlight></codeline>
<codeline lineno="15349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numItems<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15351"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>file<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="15352"><highlight class="normal"></highlight></codeline>
<codeline lineno="15353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>bufferToWrite<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>mode<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="15354"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>filePath<sp/>does<sp/>NOT<sp/>lead<sp/>to<sp/>a<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1a14d72992e536c2a370f5c779cc3b1f5a" kindref="member">Ace::IsPathADevice</ref>(filePath)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>there<sp/>are<sp/>no<sp/>errors<sp/>in<sp/>opening<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fopen_s(&amp;file,<sp/>filePath,<sp/>mode)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="15360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>cursor<sp/>location<sp/>(back<sp/>to<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>file<sp/>by<sp/>default).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fseek(file,<sp/>seekOffset,<sp/>seekOrigin)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="15363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="15365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>WriteTextFile()<sp/>Could<sp/>not<sp/>change<sp/>file<sp/>cursor<sp/>position.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="15367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15368"><highlight class="normal"></highlight></codeline>
<codeline lineno="15369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Write<sp/>the<sp/>data<sp/>to<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numItems<sp/>=<sp/>fwrite(bufferToWrite,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">),<sp/>bufferSize<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">),<sp/>file);</highlight></codeline>
<codeline lineno="15371"><highlight class="normal"></highlight></codeline>
<codeline lineno="15372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>for<sp/>write<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numItems<sp/>&lt;=<sp/>0<sp/>||<sp/>numItems<sp/>!=<sp/>bufferSize<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="15374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="15376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>WriteTextFile()<sp/>File<sp/>could<sp/>not<sp/>be<sp/>written<sp/>to<sp/>properly.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="15378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15379"><highlight class="normal"></highlight></codeline>
<codeline lineno="15380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>value<sp/>of<sp/>ftell()<sp/>if<sp/>outEndCursorPos<sp/>is<sp/>provided.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outEndCursorPos<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="15382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outEndCursorPos<sp/>=<sp/>ftell(file);</highlight></codeline>
<codeline lineno="15384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15385"><highlight class="normal"></highlight></codeline>
<codeline lineno="15386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>file<sp/>is<sp/>closed<sp/>without<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fclose(file)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="15388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>WriteTextFile()<sp/>File<sp/>did<sp/>not<sp/>close<sp/>properly.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="15391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>WriteTextFile()<sp/>cannot<sp/>open<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>WriteTextFile()<sp/>filePath<sp/>cannot<sp/>be<sp/>a<sp/>device.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15404"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>WriteTextFile()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15407"><highlight class="normal"></highlight></codeline>
<codeline lineno="15408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numItems;</highlight></codeline>
<codeline lineno="15409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15410"><highlight class="normal"></highlight></codeline>
<codeline lineno="15448"><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a7a200d3c2e606619c3044ea50904f632" kindref="member">Ace::WriteTextFileW</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>filePath,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>bufferToWrite,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufferSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>mode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seekOffset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seekOrigin,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>outEndCursorPos)</highlight></codeline>
<codeline lineno="15449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numItems<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15451"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>file<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="15452"><highlight class="normal"></highlight></codeline>
<codeline lineno="15453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filePath<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>bufferToWrite<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>mode<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="15454"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>filePath<sp/>does<sp/>NOT<sp/>lead<sp/>to<sp/>a<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_ace_1a14d72992e536c2a370f5c779cc3b1f5a" kindref="member">Ace::IsPathADevice</ref>(filePath)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>there<sp/>are<sp/>no<sp/>errors<sp/>in<sp/>opening<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_wfopen_s(&amp;file,<sp/>filePath,<sp/>mode)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="15460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>cursor<sp/>location<sp/>(back<sp/>to<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>file<sp/>by<sp/>default).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fseek(file,<sp/>seekOffset,<sp/>seekOrigin)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="15463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="15465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>WriteTextFileW()<sp/>Could<sp/>not<sp/>change<sp/>file<sp/>cursor<sp/>position.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="15467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15468"><highlight class="normal"></highlight></codeline>
<codeline lineno="15469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Write<sp/>the<sp/>data<sp/>to<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numItems<sp/>=<sp/>fwrite(bufferToWrite,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">),<sp/>bufferSize<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">),<sp/>file);</highlight></codeline>
<codeline lineno="15471"><highlight class="normal"></highlight></codeline>
<codeline lineno="15472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>for<sp/>write<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numItems<sp/>&lt;=<sp/>0<sp/>||<sp/>numItems<sp/>!=<sp/>bufferSize<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="15474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="15476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>WriteTextFileW()<sp/>File<sp/>could<sp/>not<sp/>be<sp/>written<sp/>to<sp/>properly.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="15478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15479"><highlight class="normal"></highlight></codeline>
<codeline lineno="15480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>value<sp/>of<sp/>ftell()<sp/>if<sp/>outEndCursorPos<sp/>is<sp/>provided.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outEndCursorPos<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="15482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outEndCursorPos<sp/>=<sp/>ftell(file);</highlight></codeline>
<codeline lineno="15484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15485"><highlight class="normal"></highlight></codeline>
<codeline lineno="15486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>the<sp/>file<sp/>is<sp/>closed<sp/>without<sp/>errors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fclose(file)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="15488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>WriteTextFileW()<sp/>File<sp/>did<sp/>not<sp/>close<sp/>properly.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="15491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15492"><highlight class="normal"></highlight></codeline>
<codeline lineno="15493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>WriteTextFileW()<sp/>cannot<sp/>open<sp/>file.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>WriteTextFileW()<sp/>filePath<sp/>cannot<sp/>be<sp/>a<sp/>device.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15505"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ace<sp/>Error:<sp/>WriteTextFileW()<sp/>Parameters<sp/>cannot<sp/>be<sp/>NULL.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15508"><highlight class="normal"></highlight></codeline>
<codeline lineno="15509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numItems;</highlight></codeline>
<codeline lineno="15510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15511"><highlight class="normal"></highlight></codeline>
<codeline lineno="15544"><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a5796438df275d4868eda8e1d72991350" kindref="member">Ace::WriteBinaryFile</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filePath,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>bufferToWrite,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufferSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>mode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seekOffset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seekOrigin,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>outEndCursorPos)</highlight></codeline>
<codeline lineno="15545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ace_1af96ec8733f6e776aa2296afd79dfe38c" kindref="member">Ace::WriteTextFile</ref>(filePath,<sp/>bufferToWrite,<sp/>bufferSize,<sp/>mode,<sp/>seekOffset,<sp/>seekOrigin,<sp/>outEndCursorPos);</highlight></codeline>
<codeline lineno="15547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15548"><highlight class="normal"></highlight></codeline>
<codeline lineno="15581"><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a3dd67050348d7bd1838b2a85e53a93f3" kindref="member">Ace::WriteBinaryFileW</ref>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>filePath,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>bufferToWrite,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufferSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*<sp/>mode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seekOffset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seekOrigin,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>outEndCursorPos)</highlight></codeline>
<codeline lineno="15582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ace_1a7a200d3c2e606619c3044ea50904f632" kindref="member">Ace::WriteTextFileW</ref>(filePath,<sp/>bufferToWrite,<sp/>bufferSize,<sp/>mode,<sp/>seekOffset,<sp/>seekOrigin,<sp/>outEndCursorPos);</highlight></codeline>
<codeline lineno="15584"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Ace.cpp"/>
  </compounddef>
</doxygen>
